// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_List
#include <List.h>
#endif
#ifndef INCLUDED_cpp_Prime
#include <cpp/Prime.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_Timer
#include <haxe/Timer.h>
#endif
#ifndef INCLUDED_haxe_ds_IntMap
#include <haxe/ds/IntMap.h>
#endif
#ifndef INCLUDED_lime__backend_native_NativeApplication
#include <lime/_backend/native/NativeApplication.h>
#endif
#ifndef INCLUDED_lime__backend_native_NativeRenderer
#include <lime/_backend/native/NativeRenderer.h>
#endif
#ifndef INCLUDED_lime__backend_native__NativeApplication_ApplicationEventInfo
#include <lime/_backend/native/_NativeApplication/ApplicationEventInfo.h>
#endif
#ifndef INCLUDED_lime__backend_native__NativeApplication_DropEventInfo
#include <lime/_backend/native/_NativeApplication/DropEventInfo.h>
#endif
#ifndef INCLUDED_lime__backend_native__NativeApplication_GamepadEventInfo
#include <lime/_backend/native/_NativeApplication/GamepadEventInfo.h>
#endif
#ifndef INCLUDED_lime__backend_native__NativeApplication_JoystickEventInfo
#include <lime/_backend/native/_NativeApplication/JoystickEventInfo.h>
#endif
#ifndef INCLUDED_lime__backend_native__NativeApplication_KeyEventInfo
#include <lime/_backend/native/_NativeApplication/KeyEventInfo.h>
#endif
#ifndef INCLUDED_lime__backend_native__NativeApplication_MouseEventInfo
#include <lime/_backend/native/_NativeApplication/MouseEventInfo.h>
#endif
#ifndef INCLUDED_lime__backend_native__NativeApplication_RenderEventInfo
#include <lime/_backend/native/_NativeApplication/RenderEventInfo.h>
#endif
#ifndef INCLUDED_lime__backend_native__NativeApplication_SensorEventInfo
#include <lime/_backend/native/_NativeApplication/SensorEventInfo.h>
#endif
#ifndef INCLUDED_lime__backend_native__NativeApplication_TextEventInfo
#include <lime/_backend/native/_NativeApplication/TextEventInfo.h>
#endif
#ifndef INCLUDED_lime__backend_native__NativeApplication_TouchEventInfo
#include <lime/_backend/native/_NativeApplication/TouchEventInfo.h>
#endif
#ifndef INCLUDED_lime__backend_native__NativeApplication_WindowEventInfo
#include <lime/_backend/native/_NativeApplication/WindowEventInfo.h>
#endif
#ifndef INCLUDED_lime_app_Application
#include <lime/app/Application.h>
#endif
#ifndef INCLUDED_lime_app_IModule
#include <lime/app/IModule.h>
#endif
#ifndef INCLUDED_lime_app_Module
#include <lime/app/Module.h>
#endif
#ifndef INCLUDED_lime_app__Event_Float_Float_Float_Void
#include <lime/app/_Event_Float_Float_Float_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_Float_Float_Int_Void
#include <lime/app/_Event_Float_Float_Int_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_Float_Float_Void
#include <lime/app/_Event_Float_Float_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_Int_Float_Void
#include <lime/app/_Event_Int_Float_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_Int_Int_Void
#include <lime/app/_Event_Int_Int_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_Int_Void
#include <lime/app/_Event_Int_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_Int_lime_ui_JoystickHatPosition_Void
#include <lime/app/_Event_Int_lime_ui_JoystickHatPosition_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_String_Int_Int_Void
#include <lime/app/_Event_String_Int_Int_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_String_Void
#include <lime/app/_Event_String_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_Void_Void
#include <lime/app/_Event_Void_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_lime_graphics_RenderContext_Void
#include <lime/app/_Event_lime_graphics_RenderContext_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_lime_ui_GamepadAxis_Float_Void
#include <lime/app/_Event_lime_ui_GamepadAxis_Float_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_lime_ui_GamepadButton_Void
#include <lime/app/_Event_lime_ui_GamepadButton_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void
#include <lime/app/_Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_lime_ui_Touch_Void
#include <lime/app/_Event_lime_ui_Touch_Void.h>
#endif
#ifndef INCLUDED_lime_audio_AudioContext
#include <lime/audio/AudioContext.h>
#endif
#ifndef INCLUDED_lime_audio_AudioManager
#include <lime/audio/AudioManager.h>
#endif
#ifndef INCLUDED_lime_graphics_GLRenderContext
#include <lime/graphics/GLRenderContext.h>
#endif
#ifndef INCLUDED_lime_graphics_RenderContext
#include <lime/graphics/RenderContext.h>
#endif
#ifndef INCLUDED_lime_graphics_Renderer
#include <lime/graphics/Renderer.h>
#endif
#ifndef INCLUDED_lime_system_Sensor
#include <lime/system/Sensor.h>
#endif
#ifndef INCLUDED_lime_system_System
#include <lime/system/System.h>
#endif
#ifndef INCLUDED_lime_ui_Gamepad
#include <lime/ui/Gamepad.h>
#endif
#ifndef INCLUDED_lime_ui_Joystick
#include <lime/ui/Joystick.h>
#endif
#ifndef INCLUDED_lime_ui_Touch
#include <lime/ui/Touch.h>
#endif
#ifndef INCLUDED_lime_ui_Window
#include <lime/ui/Window.h>
#endif
#ifndef INCLUDED_lime_ui__KeyModifier_KeyModifier_Impl_
#include <lime/ui/_KeyModifier/KeyModifier_Impl_.h>
#endif

namespace lime{
namespace _backend{
namespace native{

void NativeApplication_obj::__construct( ::lime::app::Application parent){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","new",0xf81a1e94,"lime._backend.native.NativeApplication.new","lime/_backend/native/NativeApplication.hx",40,0xb13849fd)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(parent,"parent")
HXLINE(  55)		this->windowEventInfo =  ::lime::_backend::native::_NativeApplication::WindowEventInfo_obj::__new(null(),null(),null(),null(),null(),null());
HXLINE(  54)		this->unusedTouchesPool =  ::List_obj::__new();
HXLINE(  53)		this->touchEventInfo =  ::lime::_backend::native::_NativeApplication::TouchEventInfo_obj::__new(null(),null(),null(),null(),null(),null(),null(),null());
HXLINE(  52)		this->textEventInfo =  ::lime::_backend::native::_NativeApplication::TextEventInfo_obj::__new(null(),null(),null(),null(),null());
HXLINE(  51)		this->sensorEventInfo =  ::lime::_backend::native::_NativeApplication::SensorEventInfo_obj::__new(null(),null(),null(),null(),null());
HXLINE(  50)		this->renderEventInfo =  ::lime::_backend::native::_NativeApplication::RenderEventInfo_obj::__new((int)0,null());
HXLINE(  49)		this->mouseEventInfo =  ::lime::_backend::native::_NativeApplication::MouseEventInfo_obj::__new(null(),null(),null(),null(),null(),null(),null());
HXLINE(  48)		this->keyEventInfo =  ::lime::_backend::native::_NativeApplication::KeyEventInfo_obj::__new(null(),null(),null(),null());
HXLINE(  47)		this->joystickEventInfo =  ::lime::_backend::native::_NativeApplication::JoystickEventInfo_obj::__new(null(),null(),null(),null(),null(),null());
HXLINE(  46)		this->gamepadEventInfo =  ::lime::_backend::native::_NativeApplication::GamepadEventInfo_obj::__new(null(),null(),null(),null(),null());
HXLINE(  45)		this->dropEventInfo =  ::lime::_backend::native::_NativeApplication::DropEventInfo_obj::__new(null(),null());
HXLINE(  44)		this->currentTouches =  ::haxe::ds::IntMap_obj::__new();
HXLINE(  43)		this->applicationEventInfo =  ::lime::_backend::native::_NativeApplication::ApplicationEventInfo_obj::__new((int)0,null());
HXLINE(  65)		this->parent = parent;
HXLINE(  66)		this->frameRate = (int)60;
HXLINE(  73)		::lime::audio::AudioManager_obj::init(null());
            	}

Dynamic NativeApplication_obj::__CreateEmpty() { return new NativeApplication_obj; }

hx::ObjectPtr< NativeApplication_obj > NativeApplication_obj::__new( ::lime::app::Application parent)
{
	hx::ObjectPtr< NativeApplication_obj > _hx_result = new NativeApplication_obj();
	_hx_result->__construct(parent);
	return _hx_result;
}

Dynamic NativeApplication_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< NativeApplication_obj > _hx_result = new NativeApplication_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

void NativeApplication_obj::create( ::Dynamic config){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","create",0xd50cf148,"lime._backend.native.NativeApplication.create","lime/_backend/native/NativeApplication.hx",85,0xb13849fd)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(config,"config")
HXLINE(  85)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::_backend::native::NativeApplication_obj::cffi_lime_application_create(hx::DynamicPtr( ::Dynamic(hx::Anon_obj::Create(0))))) );
HXDLIN(  85)		 ::Dynamic _hx_tmp = Dynamic(hx::DynamicPtr(inVal));
HXDLIN(  85)		this->handle = _hx_tmp;
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeApplication_obj,create,(void))

Int NativeApplication_obj::exec(){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","exec",0x18dc12dd,"lime._backend.native.NativeApplication.exec","lime/_backend/native/NativeApplication.hx",91,0xb13849fd)
            	HX_STACK_THIS(this)
HXLINE(  95)		 ::hx::Object * _hx_tmp = hx::DynamicPtr(this->handleApplicationEvent_dyn());
HXDLIN(  95)		::lime::_backend::native::NativeApplication_obj::cffi_lime_application_event_manager_register(_hx_tmp,hx::DynamicPtr(this->applicationEventInfo));
HXLINE(  96)		 ::hx::Object * _hx_tmp1 = hx::DynamicPtr(this->handleDropEvent_dyn());
HXDLIN(  96)		::lime::_backend::native::NativeApplication_obj::cffi_lime_drop_event_manager_register(_hx_tmp1,hx::DynamicPtr(this->dropEventInfo));
HXLINE(  97)		 ::hx::Object * _hx_tmp2 = hx::DynamicPtr(this->handleGamepadEvent_dyn());
HXDLIN(  97)		::lime::_backend::native::NativeApplication_obj::cffi_lime_gamepad_event_manager_register(_hx_tmp2,hx::DynamicPtr(this->gamepadEventInfo));
HXLINE(  98)		 ::hx::Object * _hx_tmp3 = hx::DynamicPtr(this->handleJoystickEvent_dyn());
HXDLIN(  98)		::lime::_backend::native::NativeApplication_obj::cffi_lime_joystick_event_manager_register(_hx_tmp3,hx::DynamicPtr(this->joystickEventInfo));
HXLINE(  99)		 ::hx::Object * _hx_tmp4 = hx::DynamicPtr(this->handleKeyEvent_dyn());
HXDLIN(  99)		::lime::_backend::native::NativeApplication_obj::cffi_lime_key_event_manager_register(_hx_tmp4,hx::DynamicPtr(this->keyEventInfo));
HXLINE( 100)		 ::hx::Object * _hx_tmp5 = hx::DynamicPtr(this->handleMouseEvent_dyn());
HXDLIN( 100)		::lime::_backend::native::NativeApplication_obj::cffi_lime_mouse_event_manager_register(_hx_tmp5,hx::DynamicPtr(this->mouseEventInfo));
HXLINE( 101)		 ::hx::Object * _hx_tmp6 = hx::DynamicPtr(this->handleRenderEvent_dyn());
HXDLIN( 101)		::lime::_backend::native::NativeApplication_obj::cffi_lime_render_event_manager_register(_hx_tmp6,hx::DynamicPtr(this->renderEventInfo));
HXLINE( 102)		 ::hx::Object * _hx_tmp7 = hx::DynamicPtr(this->handleTextEvent_dyn());
HXDLIN( 102)		::lime::_backend::native::NativeApplication_obj::cffi_lime_text_event_manager_register(_hx_tmp7,hx::DynamicPtr(this->textEventInfo));
HXLINE( 103)		 ::hx::Object * _hx_tmp8 = hx::DynamicPtr(this->handleTouchEvent_dyn());
HXDLIN( 103)		::lime::_backend::native::NativeApplication_obj::cffi_lime_touch_event_manager_register(_hx_tmp8,hx::DynamicPtr(this->touchEventInfo));
HXLINE( 104)		 ::hx::Object * _hx_tmp9 = hx::DynamicPtr(this->handleWindowEvent_dyn());
HXDLIN( 104)		::lime::_backend::native::NativeApplication_obj::cffi_lime_window_event_manager_register(_hx_tmp9,hx::DynamicPtr(this->windowEventInfo));
HXLINE( 136)		 ::Dynamic handle = this->handle;
HXDLIN( 136)		HX_VARI( Int,result) = ( (Int)(::lime::_backend::native::NativeApplication_obj::cffi_lime_application_exec(hx::DynamicPtr(handle))) );
HXLINE( 139)		this->parent->onExit->dispatch(result);
HXLINE( 142)		return result;
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeApplication_obj,exec,return )

void NativeApplication_obj::exit(){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","exit",0x18dc166a,"lime._backend.native.NativeApplication.exit","lime/_backend/native/NativeApplication.hx",152,0xb13849fd)
            	HX_STACK_THIS(this)
HXLINE( 154)		::lime::audio::AudioManager_obj::shutdown();
HXLINE( 157)		{
HXLINE( 157)			 ::Dynamic handle = this->handle;
HXDLIN( 157)			::lime::_backend::native::NativeApplication_obj::cffi_lime_application_quit(hx::DynamicPtr(handle));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeApplication_obj,exit,(void))

Float NativeApplication_obj::getFrameRate(){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","getFrameRate",0xe79bf983,"lime._backend.native.NativeApplication.getFrameRate","lime/_backend/native/NativeApplication.hx",165,0xb13849fd)
            	HX_STACK_THIS(this)
HXLINE( 165)		return this->frameRate;
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeApplication_obj,getFrameRate,return )

void NativeApplication_obj::handleApplicationEvent(){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","handleApplicationEvent",0x44389cbe,"lime._backend.native.NativeApplication.handleApplicationEvent","lime/_backend/native/NativeApplication.hx",172,0xb13849fd)
            	HX_STACK_THIS(this)
HXLINE( 172)		HX_VARI( Int,_g) = this->applicationEventInfo->type;
HXDLIN( 172)		switch((int)(_g)){
            			case (int)0: {
HXLINE( 176)				this->updateTimer();
HXLINE( 177)				this->parent->onUpdate->dispatch(this->applicationEventInfo->deltaTime);
            			}
            			break;
            			case (int)1: {
            			}
            			break;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeApplication_obj,handleApplicationEvent,(void))

void NativeApplication_obj::handleDropEvent(){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","handleDropEvent",0xe00568d7,"lime._backend.native.NativeApplication.handleDropEvent","lime/_backend/native/NativeApplication.hx",190,0xb13849fd)
            	HX_STACK_THIS(this)
HXLINE( 190)		HX_VARI( Int,_g) = (int)0;
HXDLIN( 190)		HX_VARI( ::Array< ::Dynamic>,_g1) = this->parent->_hx___windows;
HXDLIN( 190)		while((_g < _g1->length)){
HXLINE( 190)			HX_VARI(  ::lime::ui::Window,window) = _g1->__get(_g).StaticCast<  ::lime::ui::Window >();
HXDLIN( 190)			++_g;
HXLINE( 192)			window->onDropFile->dispatch(this->dropEventInfo->file);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeApplication_obj,handleDropEvent,(void))

void NativeApplication_obj::handleGamepadEvent(){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","handleGamepadEvent",0x54f9e7cd,"lime._backend.native.NativeApplication.handleGamepadEvent","lime/_backend/native/NativeApplication.hx",201,0xb13849fd)
            	HX_STACK_THIS(this)
HXLINE( 201)		HX_VARI( Int,_g) = this->gamepadEventInfo->type;
HXDLIN( 201)		switch((int)(_g)){
            			case (int)0: {
HXLINE( 205)				Int key = this->gamepadEventInfo->id;
HXDLIN( 205)				HX_VARI(  ::lime::ui::Gamepad,gamepad) = ::lime::ui::Gamepad_obj::devices->get(key).StaticCast<  ::lime::ui::Gamepad >();
HXLINE( 206)				Bool _hx_tmp = hx::IsNotNull( gamepad );
HXDLIN( 206)				if (_hx_tmp) {
HXLINE( 206)					gamepad->onAxisMove->dispatch(this->gamepadEventInfo->axis,this->gamepadEventInfo->value);
            				}
            			}
            			break;
            			case (int)1: {
HXLINE( 210)				Int key1 = this->gamepadEventInfo->id;
HXDLIN( 210)				HX_VARI_NAME(  ::lime::ui::Gamepad,gamepad1,"gamepad") = ::lime::ui::Gamepad_obj::devices->get(key1).StaticCast<  ::lime::ui::Gamepad >();
HXLINE( 211)				Bool _hx_tmp1 = hx::IsNotNull( gamepad1 );
HXDLIN( 211)				if (_hx_tmp1) {
HXLINE( 211)					gamepad1->onButtonDown->dispatch(this->gamepadEventInfo->button);
            				}
            			}
            			break;
            			case (int)2: {
HXLINE( 215)				Int key2 = this->gamepadEventInfo->id;
HXDLIN( 215)				HX_VARI_NAME(  ::lime::ui::Gamepad,gamepad2,"gamepad") = ::lime::ui::Gamepad_obj::devices->get(key2).StaticCast<  ::lime::ui::Gamepad >();
HXLINE( 216)				Bool _hx_tmp2 = hx::IsNotNull( gamepad2 );
HXDLIN( 216)				if (_hx_tmp2) {
HXLINE( 216)					gamepad2->onButtonUp->dispatch(this->gamepadEventInfo->button);
            				}
            			}
            			break;
            			case (int)3: {
HXLINE( 220)				::lime::ui::Gamepad_obj::_hx___connect(this->gamepadEventInfo->id);
            			}
            			break;
            			case (int)4: {
HXLINE( 224)				::lime::ui::Gamepad_obj::_hx___disconnect(this->gamepadEventInfo->id);
            			}
            			break;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeApplication_obj,handleGamepadEvent,(void))

void NativeApplication_obj::handleJoystickEvent(){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","handleJoystickEvent",0xefd0c72a,"lime._backend.native.NativeApplication.handleJoystickEvent","lime/_backend/native/NativeApplication.hx",233,0xb13849fd)
            	HX_STACK_THIS(this)
HXLINE( 233)		HX_VARI( Int,_g) = this->joystickEventInfo->type;
HXDLIN( 233)		switch((int)(_g)){
            			case (int)0: {
HXLINE( 237)				Int key = this->joystickEventInfo->id;
HXDLIN( 237)				HX_VARI(  ::lime::ui::Joystick,joystick) = ::lime::ui::Joystick_obj::devices->get(key).StaticCast<  ::lime::ui::Joystick >();
HXLINE( 238)				Bool _hx_tmp = hx::IsNotNull( joystick );
HXDLIN( 238)				if (_hx_tmp) {
HXLINE( 238)					joystick->onAxisMove->dispatch(this->joystickEventInfo->index,this->joystickEventInfo->value);
            				}
            			}
            			break;
            			case (int)1: {
HXLINE( 242)				Int key1 = this->joystickEventInfo->id;
HXDLIN( 242)				HX_VARI_NAME(  ::lime::ui::Joystick,joystick1,"joystick") = ::lime::ui::Joystick_obj::devices->get(key1).StaticCast<  ::lime::ui::Joystick >();
HXLINE( 243)				Bool _hx_tmp1 = hx::IsNotNull( joystick1 );
HXDLIN( 243)				if (_hx_tmp1) {
HXLINE( 243)					joystick1->onHatMove->dispatch(this->joystickEventInfo->index,this->joystickEventInfo->x);
            				}
            			}
            			break;
            			case (int)2: {
HXLINE( 247)				Int key2 = this->joystickEventInfo->id;
HXDLIN( 247)				HX_VARI_NAME(  ::lime::ui::Joystick,joystick2,"joystick") = ::lime::ui::Joystick_obj::devices->get(key2).StaticCast<  ::lime::ui::Joystick >();
HXLINE( 248)				Bool _hx_tmp2 = hx::IsNotNull( joystick2 );
HXDLIN( 248)				if (_hx_tmp2) {
HXLINE( 248)					joystick2->onTrackballMove->dispatch(this->joystickEventInfo->index,this->joystickEventInfo->value);
            				}
            			}
            			break;
            			case (int)3: {
HXLINE( 252)				Int key3 = this->joystickEventInfo->id;
HXDLIN( 252)				HX_VARI_NAME(  ::lime::ui::Joystick,joystick3,"joystick") = ::lime::ui::Joystick_obj::devices->get(key3).StaticCast<  ::lime::ui::Joystick >();
HXLINE( 253)				Bool _hx_tmp3 = hx::IsNotNull( joystick3 );
HXDLIN( 253)				if (_hx_tmp3) {
HXLINE( 253)					joystick3->onButtonDown->dispatch(this->joystickEventInfo->index);
            				}
            			}
            			break;
            			case (int)4: {
HXLINE( 257)				Int key4 = this->joystickEventInfo->id;
HXDLIN( 257)				HX_VARI_NAME(  ::lime::ui::Joystick,joystick4,"joystick") = ::lime::ui::Joystick_obj::devices->get(key4).StaticCast<  ::lime::ui::Joystick >();
HXLINE( 258)				Bool _hx_tmp4 = hx::IsNotNull( joystick4 );
HXDLIN( 258)				if (_hx_tmp4) {
HXLINE( 258)					joystick4->onButtonUp->dispatch(this->joystickEventInfo->index);
            				}
            			}
            			break;
            			case (int)5: {
HXLINE( 262)				::lime::ui::Joystick_obj::_hx___connect(this->joystickEventInfo->id);
            			}
            			break;
            			case (int)6: {
HXLINE( 266)				::lime::ui::Joystick_obj::_hx___disconnect(this->joystickEventInfo->id);
            			}
            			break;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeApplication_obj,handleJoystickEvent,(void))

void NativeApplication_obj::handleKeyEvent(){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","handleKeyEvent",0xe8484c0f,"lime._backend.native.NativeApplication.handleKeyEvent","lime/_backend/native/NativeApplication.hx",273,0xb13849fd)
            	HX_STACK_THIS(this)
HXLINE( 275)		Int key = this->keyEventInfo->windowID;
HXDLIN( 275)		HX_VARI(  ::lime::ui::Window,window) = this->parent->windowByID->get(key).StaticCast<  ::lime::ui::Window >();
HXLINE( 277)		Bool _hx_tmp = hx::IsNotNull( window );
HXDLIN( 277)		if (_hx_tmp) {
HXLINE( 279)			HX_VARI( Int,type) = this->keyEventInfo->type;
HXLINE( 280)			HX_VARI( Int,keyCode) = this->keyEventInfo->keyCode;
HXLINE( 281)			HX_VARI( Int,modifier) = this->keyEventInfo->modifier;
HXLINE( 283)			switch((int)(type)){
            				case (int)0: {
HXLINE( 287)					window->onKeyDown->dispatch(keyCode,modifier);
            				}
            				break;
            				case (int)1: {
HXLINE( 291)					window->onKeyUp->dispatch(keyCode,modifier);
            				}
            				break;
            			}
HXLINE( 305)			Bool _hx_tmp1;
HXDLIN( 305)			Bool _hx_tmp2;
HXDLIN( 305)			Bool _hx_tmp3;
HXDLIN( 305)			Bool _hx_tmp4;
HXDLIN( 305)			Bool _hx_tmp5;
HXDLIN( 305)			Bool _hx_tmp6;
HXDLIN( 305)			if ((keyCode == (int)102)) {
HXLINE( 305)				_hx_tmp6 = ::lime::ui::_KeyModifier::KeyModifier_Impl__obj::get_ctrlKey(modifier);
            			}
            			else {
HXLINE( 305)				_hx_tmp6 = false;
            			}
HXDLIN( 305)			if (_hx_tmp6) {
HXLINE( 305)				_hx_tmp5 = ::lime::ui::_KeyModifier::KeyModifier_Impl__obj::get_metaKey(modifier);
            			}
            			else {
HXLINE( 305)				_hx_tmp5 = false;
            			}
HXDLIN( 305)			if (_hx_tmp5) {
HXLINE( 305)				_hx_tmp4 = (type == (int)0);
            			}
            			else {
HXLINE( 305)				_hx_tmp4 = false;
            			}
HXDLIN( 305)			if (_hx_tmp4) {
HXLINE( 305)				_hx_tmp3 = !(::lime::ui::_KeyModifier::KeyModifier_Impl__obj::get_altKey(modifier));
            			}
            			else {
HXLINE( 305)				_hx_tmp3 = false;
            			}
HXDLIN( 305)			if (_hx_tmp3) {
HXLINE( 305)				_hx_tmp2 = !(::lime::ui::_KeyModifier::KeyModifier_Impl__obj::get_shiftKey(modifier));
            			}
            			else {
HXLINE( 305)				_hx_tmp2 = false;
            			}
HXDLIN( 305)			if (_hx_tmp2) {
HXLINE( 305)				_hx_tmp1 = !(window->onKeyDown->canceled);
            			}
            			else {
HXLINE( 305)				_hx_tmp1 = false;
            			}
HXDLIN( 305)			if (_hx_tmp1) {
HXLINE( 307)				window->set_fullscreen(!(window->_hx___fullscreen));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeApplication_obj,handleKeyEvent,(void))

void NativeApplication_obj::handleMouseEvent(){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","handleMouseEvent",0xe26e46c9,"lime._backend.native.NativeApplication.handleMouseEvent","lime/_backend/native/NativeApplication.hx",326,0xb13849fd)
            	HX_STACK_THIS(this)
HXLINE( 328)		Int key = this->mouseEventInfo->windowID;
HXDLIN( 328)		HX_VARI(  ::lime::ui::Window,window) = this->parent->windowByID->get(key).StaticCast<  ::lime::ui::Window >();
HXLINE( 330)		Bool _hx_tmp = hx::IsNotNull( window );
HXDLIN( 330)		if (_hx_tmp) {
HXLINE( 332)			HX_VARI( Int,_g) = this->mouseEventInfo->type;
HXDLIN( 332)			switch((int)(_g)){
            				case (int)0: {
HXLINE( 336)					window->onMouseDown->dispatch(this->mouseEventInfo->x,this->mouseEventInfo->y,this->mouseEventInfo->button);
            				}
            				break;
            				case (int)1: {
HXLINE( 340)					window->onMouseUp->dispatch(this->mouseEventInfo->x,this->mouseEventInfo->y,this->mouseEventInfo->button);
            				}
            				break;
            				case (int)2: {
HXLINE( 344)					window->onMouseMove->dispatch(this->mouseEventInfo->x,this->mouseEventInfo->y);
HXLINE( 345)					window->onMouseMoveRelative->dispatch(this->mouseEventInfo->movementX,this->mouseEventInfo->movementY);
            				}
            				break;
            				case (int)3: {
HXLINE( 349)					window->onMouseWheel->dispatch(this->mouseEventInfo->x,this->mouseEventInfo->y);
            				}
            				break;
            				default:{
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeApplication_obj,handleMouseEvent,(void))

void NativeApplication_obj::handleRenderEvent(){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","handleRenderEvent",0xf3931b50,"lime._backend.native.NativeApplication.handleRenderEvent","lime/_backend/native/NativeApplication.hx",362,0xb13849fd)
            	HX_STACK_THIS(this)
HXLINE( 362)		HX_VARI( Int,_g) = (int)0;
HXDLIN( 362)		HX_VARI( ::Array< ::Dynamic>,_g1) = this->parent->_hx___renderers;
HXDLIN( 362)		while((_g < _g1->length)){
HXLINE( 362)			HX_VARI(  ::lime::graphics::Renderer,renderer) = _g1->__get(_g).StaticCast<  ::lime::graphics::Renderer >();
HXDLIN( 362)			++_g;
HXLINE( 364)			Bool _hx_tmp = hx::IsNull( renderer );
HXDLIN( 364)			if (_hx_tmp) {
HXLINE( 364)				continue;
            			}
HXLINE( 366)			this->parent->renderer = renderer;
HXLINE( 368)			{
HXLINE( 368)				HX_VARI( Int,_g2) = this->renderEventInfo->type;
HXDLIN( 368)				switch((int)(_g2)){
            					case (int)0: {
HXLINE( 372)						renderer->render();
HXLINE( 373)						renderer->onRender->dispatch();
HXLINE( 374)						renderer->flip();
            					}
            					break;
            					case (int)1: {
HXLINE( 378)						Bool _hx_tmp1 = renderer->backend->useHardware;
HXDLIN( 378)						if (_hx_tmp1) {
HXLINE( 380)							renderer->context = null();
HXLINE( 381)							renderer->onContextLost->dispatch();
            						}
            					}
            					break;
            					case (int)2: {
HXLINE( 387)						Bool _hx_tmp2 = renderer->backend->useHardware;
HXDLIN( 387)						if (_hx_tmp2) {
HXLINE( 392)							renderer->context = ::lime::graphics::RenderContext_obj::OPENGL( ::lime::graphics::GLRenderContext_obj::__new());
HXLINE( 395)							renderer->onContextRestored->dispatch(renderer->context);
            						}
            					}
            					break;
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeApplication_obj,handleRenderEvent,(void))

void NativeApplication_obj::handleSensorEvent(){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","handleSensorEvent",0x6e3cd9ec,"lime._backend.native.NativeApplication.handleSensorEvent","lime/_backend/native/NativeApplication.hx",406,0xb13849fd)
            	HX_STACK_THIS(this)
HXLINE( 408)		Int key = this->sensorEventInfo->id;
HXDLIN( 408)		HX_VARI(  ::lime::_hx_system::Sensor,sensor) = ::lime::_hx_system::Sensor_obj::sensorByID->get(key).StaticCast<  ::lime::_hx_system::Sensor >();
HXLINE( 410)		Bool _hx_tmp = hx::IsNotNull( sensor );
HXDLIN( 410)		if (_hx_tmp) {
HXLINE( 412)			sensor->onUpdate->dispatch(this->sensorEventInfo->x,this->sensorEventInfo->y,this->sensorEventInfo->z);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeApplication_obj,handleSensorEvent,(void))

void NativeApplication_obj::handleTextEvent(){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","handleTextEvent",0x373acb99,"lime._backend.native.NativeApplication.handleTextEvent","lime/_backend/native/NativeApplication.hx",419,0xb13849fd)
            	HX_STACK_THIS(this)
HXLINE( 421)		Int key = this->textEventInfo->windowID;
HXDLIN( 421)		HX_VARI(  ::lime::ui::Window,window) = this->parent->windowByID->get(key).StaticCast<  ::lime::ui::Window >();
HXLINE( 423)		Bool _hx_tmp = hx::IsNotNull( window );
HXDLIN( 423)		if (_hx_tmp) {
HXLINE( 425)			HX_VARI( Int,_g) = this->textEventInfo->type;
HXDLIN( 425)			switch((int)(_g)){
            				case (int)0: {
HXLINE( 429)					window->onTextInput->dispatch(this->textEventInfo->text);
            				}
            				break;
            				case (int)1: {
HXLINE( 433)					window->onTextEdit->dispatch(this->textEventInfo->text,this->textEventInfo->start,this->textEventInfo->length);
            				}
            				break;
            				default:{
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeApplication_obj,handleTextEvent,(void))

void NativeApplication_obj::handleTouchEvent(){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","handleTouchEvent",0xbe3236ef,"lime._backend.native.NativeApplication.handleTouchEvent","lime/_backend/native/NativeApplication.hx",446,0xb13849fd)
            	HX_STACK_THIS(this)
HXLINE( 446)		HX_VARI( Int,_g) = this->touchEventInfo->type;
HXDLIN( 446)		switch((int)(_g)){
            			case (int)0: {
HXLINE( 450)				HX_VARI(  ::lime::ui::Touch,touch) = this->unusedTouchesPool->pop().StaticCast<  ::lime::ui::Touch >();
HXLINE( 452)				Bool _hx_tmp = hx::IsNull( touch );
HXDLIN( 452)				if (_hx_tmp) {
HXLINE( 454)					touch =  ::lime::ui::Touch_obj::__new(this->touchEventInfo->x,this->touchEventInfo->y,this->touchEventInfo->id,this->touchEventInfo->dx,this->touchEventInfo->dy,this->touchEventInfo->pressure,this->touchEventInfo->device);
            				}
            				else {
HXLINE( 458)					touch->x = this->touchEventInfo->x;
HXLINE( 459)					touch->y = this->touchEventInfo->y;
HXLINE( 460)					touch->id = this->touchEventInfo->id;
HXLINE( 461)					touch->dx = this->touchEventInfo->dx;
HXLINE( 462)					touch->dy = this->touchEventInfo->dy;
HXLINE( 463)					touch->pressure = this->touchEventInfo->pressure;
HXLINE( 464)					touch->device = this->touchEventInfo->device;
            				}
HXLINE( 468)				{
HXLINE( 468)					Int key = touch->id;
HXDLIN( 468)					this->currentTouches->set(key,touch);
            				}
HXLINE( 470)				::lime::ui::Touch_obj::onStart->dispatch(touch);
            			}
            			break;
            			case (int)1: {
HXLINE( 474)				Int key1 = this->touchEventInfo->id;
HXDLIN( 474)				HX_VARI_NAME(  ::lime::ui::Touch,touch1,"touch") = this->currentTouches->get(key1).StaticCast<  ::lime::ui::Touch >();
HXLINE( 476)				Bool _hx_tmp1 = hx::IsNotNull( touch1 );
HXDLIN( 476)				if (_hx_tmp1) {
HXLINE( 478)					touch1->x = this->touchEventInfo->x;
HXLINE( 479)					touch1->y = this->touchEventInfo->y;
HXLINE( 480)					touch1->dx = this->touchEventInfo->dx;
HXLINE( 481)					touch1->dy = this->touchEventInfo->dy;
HXLINE( 482)					touch1->pressure = this->touchEventInfo->pressure;
HXLINE( 484)					::lime::ui::Touch_obj::onEnd->dispatch(touch1);
HXLINE( 486)					{
HXLINE( 486)						Int key2 = this->touchEventInfo->id;
HXDLIN( 486)						this->currentTouches->remove(key2);
            					}
HXLINE( 487)					this->unusedTouchesPool->add(touch1);
            				}
            			}
            			break;
            			case (int)2: {
HXLINE( 493)				Int key3 = this->touchEventInfo->id;
HXDLIN( 493)				HX_VARI_NAME(  ::lime::ui::Touch,touch2,"touch") = this->currentTouches->get(key3).StaticCast<  ::lime::ui::Touch >();
HXLINE( 495)				Bool _hx_tmp2 = hx::IsNotNull( touch2 );
HXDLIN( 495)				if (_hx_tmp2) {
HXLINE( 497)					touch2->x = this->touchEventInfo->x;
HXLINE( 498)					touch2->y = this->touchEventInfo->y;
HXLINE( 499)					touch2->dx = this->touchEventInfo->dx;
HXLINE( 500)					touch2->dy = this->touchEventInfo->dy;
HXLINE( 501)					touch2->pressure = this->touchEventInfo->pressure;
HXLINE( 503)					::lime::ui::Touch_obj::onMove->dispatch(touch2);
            				}
            			}
            			break;
            			default:{
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeApplication_obj,handleTouchEvent,(void))

void NativeApplication_obj::handleWindowEvent(){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","handleWindowEvent",0x18b48476,"lime._backend.native.NativeApplication.handleWindowEvent","lime/_backend/native/NativeApplication.hx",514,0xb13849fd)
            	HX_STACK_THIS(this)
HXLINE( 516)		Int key = this->windowEventInfo->windowID;
HXDLIN( 516)		HX_VARI(  ::lime::ui::Window,window) = this->parent->windowByID->get(key).StaticCast<  ::lime::ui::Window >();
HXLINE( 518)		Bool _hx_tmp = hx::IsNotNull( window );
HXDLIN( 518)		if (_hx_tmp) {
HXLINE( 520)			HX_VARI( Int,_g) = this->windowEventInfo->type;
HXDLIN( 520)			switch((int)(_g)){
            				case (int)0: {
HXLINE( 524)					window->onActivate->dispatch();
HXLINE( 526)					::lime::audio::AudioManager_obj::resume();
            				}
            				break;
            				case (int)1: {
HXLINE( 530)					window->close();
            				}
            				break;
            				case (int)2: {
HXLINE( 534)					window->onDeactivate->dispatch();
HXLINE( 536)					::lime::audio::AudioManager_obj::suspend();
            				}
            				break;
            				case (int)3: {
HXLINE( 540)					window->onEnter->dispatch();
            				}
            				break;
            				case (int)4: {
HXLINE( 544)					window->onFocusIn->dispatch();
            				}
            				break;
            				case (int)5: {
HXLINE( 548)					window->onFocusOut->dispatch();
            				}
            				break;
            				case (int)6: {
HXLINE( 552)					window->onLeave->dispatch();
            				}
            				break;
            				case (int)7: {
HXLINE( 556)					window->_hx___minimized = true;
HXLINE( 557)					window->onMinimize->dispatch();
            				}
            				break;
            				case (int)8: {
HXLINE( 561)					window->_hx___x = this->windowEventInfo->x;
HXLINE( 562)					window->_hx___y = this->windowEventInfo->y;
HXLINE( 563)					window->onMove->dispatch(this->windowEventInfo->x,this->windowEventInfo->y);
            				}
            				break;
            				case (int)9: {
HXLINE( 567)					window->_hx___width = this->windowEventInfo->width;
HXLINE( 568)					window->_hx___height = this->windowEventInfo->height;
HXLINE( 569)					window->onResize->dispatch(this->windowEventInfo->width,this->windowEventInfo->height);
            				}
            				break;
            				case (int)10: {
HXLINE( 573)					window->_hx___fullscreen = false;
HXLINE( 574)					window->_hx___minimized = false;
HXLINE( 575)					window->onRestore->dispatch();
            				}
            				break;
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeApplication_obj,handleWindowEvent,(void))

Float NativeApplication_obj::setFrameRate(Float value){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","setFrameRate",0xfc951cf7,"lime._backend.native.NativeApplication.setFrameRate","lime/_backend/native/NativeApplication.hx",584,0xb13849fd)
            	HX_STACK_THIS(this)
            	HX_STACK_ARG(value,"value")
HXLINE( 587)		{
HXLINE( 587)			 ::Dynamic handle = this->handle;
HXDLIN( 587)			::lime::_backend::native::NativeApplication_obj::cffi_lime_application_set_frame_rate(hx::DynamicPtr(handle),value);
            		}
HXLINE( 589)		return (this->frameRate = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(NativeApplication_obj,setFrameRate,return )

void NativeApplication_obj::updateTimer(){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","updateTimer",0x8a9bcb30,"lime._backend.native.NativeApplication.updateTimer","lime/_backend/native/NativeApplication.hx",596,0xb13849fd)
            	HX_STACK_THIS(this)
HXLINE( 596)		Bool _hx_tmp = (::haxe::Timer_obj::sRunningTimers->length > (int)0);
HXDLIN( 596)		if (_hx_tmp) {
HXLINE( 598)			HX_VARI( Int,currentTime) = ::lime::_hx_system::System_obj::getTimer();
HXLINE( 599)			HX_VARI( Bool,foundNull) = false;
HXLINE( 600)			HX_VAR(  ::haxe::Timer,timer);
HXLINE( 602)			{
HXLINE( 602)				HX_VARI( Int,_g1) = (int)0;
HXDLIN( 602)				HX_VARI( Int,_g) = ::haxe::Timer_obj::sRunningTimers->length;
HXDLIN( 602)				while((_g1 < _g)){
HXLINE( 602)					HX_VARI( Int,i) = _g1++;
HXLINE( 604)					timer = ::haxe::Timer_obj::sRunningTimers->__get(i).StaticCast<  ::haxe::Timer >();
HXLINE( 606)					Bool _hx_tmp1 = hx::IsNotNull( timer );
HXDLIN( 606)					if (_hx_tmp1) {
HXLINE( 608)						Bool _hx_tmp2 = (currentTime >= timer->mFireAt);
HXDLIN( 608)						if (_hx_tmp2) {
HXLINE( 610)							hx::AddEq(timer->mFireAt,timer->mTime);
HXLINE( 611)							timer->run();
            						}
            					}
            					else {
HXLINE( 617)						foundNull = true;
            					}
            				}
            			}
HXLINE( 623)			if (foundNull) {
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            				Bool _hx_run( ::haxe::Timer val){
            					HX_STACK_FRAME("lime._backend.native.NativeApplication","updateTimer",0x8a9bcb30,"lime._backend.native.NativeApplication.updateTimer","lime/_backend/native/NativeApplication.hx",625,0xb13849fd)
            					HX_STACK_ARG(val,"val")
HXLINE( 625)					return hx::IsNotNull( val );
            				}
            				HX_END_LOCAL_FUNC1(return)

HXLINE( 625)				::haxe::Timer_obj::sRunningTimers = ::haxe::Timer_obj::sRunningTimers->filter( ::Dynamic(new _hx_Closure_0()));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(NativeApplication_obj,updateTimer,(void))

 ::Dynamic NativeApplication_obj::lime_application_create( ::Dynamic config){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","lime_application_create",0xc9ec45a9,"lime._backend.native.NativeApplication.lime_application_create","lime/_backend/native/NativeApplication.hx",635,0xb13849fd)
            	HX_STACK_ARG(config,"config")
HXLINE( 635)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::_backend::native::NativeApplication_obj::cffi_lime_application_create(hx::DynamicPtr(config))) );
HXDLIN( 635)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeApplication_obj,lime_application_create,return )

void NativeApplication_obj::lime_application_event_manager_register( ::Dynamic callback, ::Dynamic eventObject){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","lime_application_event_manager_register",0x68200767,"lime._backend.native.NativeApplication.lime_application_event_manager_register","lime/_backend/native/NativeApplication.hx",636,0xb13849fd)
            	HX_STACK_ARG(callback,"callback")
            	HX_STACK_ARG(eventObject,"eventObject")
HXLINE( 636)		 ::hx::Object * _hx_tmp = hx::DynamicPtr(callback);
HXDLIN( 636)		::lime::_backend::native::NativeApplication_obj::cffi_lime_application_event_manager_register(_hx_tmp,hx::DynamicPtr(eventObject));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeApplication_obj,lime_application_event_manager_register,(void))

Int NativeApplication_obj::lime_application_exec( ::Dynamic handle){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","lime_application_exec",0x469bdcfe,"lime._backend.native.NativeApplication.lime_application_exec","lime/_backend/native/NativeApplication.hx",637,0xb13849fd)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 637)		return ( (Int)(::lime::_backend::native::NativeApplication_obj::cffi_lime_application_exec(hx::DynamicPtr(handle))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeApplication_obj,lime_application_exec,return )

void NativeApplication_obj::lime_application_init( ::Dynamic handle){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","lime_application_init",0x4939247d,"lime._backend.native.NativeApplication.lime_application_init","lime/_backend/native/NativeApplication.hx",638,0xb13849fd)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 638)		::lime::_backend::native::NativeApplication_obj::cffi_lime_application_init(hx::DynamicPtr(handle));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeApplication_obj,lime_application_init,(void))

Int NativeApplication_obj::lime_application_quit( ::Dynamic handle){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","lime_application_quit",0x4e88293c,"lime._backend.native.NativeApplication.lime_application_quit","lime/_backend/native/NativeApplication.hx",639,0xb13849fd)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 639)		return ( (Int)(::lime::_backend::native::NativeApplication_obj::cffi_lime_application_quit(hx::DynamicPtr(handle))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeApplication_obj,lime_application_quit,return )

void NativeApplication_obj::lime_application_set_frame_rate( ::Dynamic handle,Float value){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","lime_application_set_frame_rate",0x54d277dc,"lime._backend.native.NativeApplication.lime_application_set_frame_rate","lime/_backend/native/NativeApplication.hx",640,0xb13849fd)
            	HX_STACK_ARG(handle,"handle")
            	HX_STACK_ARG(value,"value")
HXLINE( 640)		::lime::_backend::native::NativeApplication_obj::cffi_lime_application_set_frame_rate(hx::DynamicPtr(handle),value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeApplication_obj,lime_application_set_frame_rate,(void))

Bool NativeApplication_obj::lime_application_update( ::Dynamic handle){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","lime_application_update",0xd4e264b6,"lime._backend.native.NativeApplication.lime_application_update","lime/_backend/native/NativeApplication.hx",641,0xb13849fd)
            	HX_STACK_ARG(handle,"handle")
HXLINE( 641)		return ( (Bool)(::lime::_backend::native::NativeApplication_obj::cffi_lime_application_update(hx::DynamicPtr(handle))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(NativeApplication_obj,lime_application_update,return )

void NativeApplication_obj::lime_drop_event_manager_register( ::Dynamic callback, ::Dynamic eventObject){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","lime_drop_event_manager_register",0x245381ec,"lime._backend.native.NativeApplication.lime_drop_event_manager_register","lime/_backend/native/NativeApplication.hx",642,0xb13849fd)
            	HX_STACK_ARG(callback,"callback")
            	HX_STACK_ARG(eventObject,"eventObject")
HXLINE( 642)		 ::hx::Object * _hx_tmp = hx::DynamicPtr(callback);
HXDLIN( 642)		::lime::_backend::native::NativeApplication_obj::cffi_lime_drop_event_manager_register(_hx_tmp,hx::DynamicPtr(eventObject));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeApplication_obj,lime_drop_event_manager_register,(void))

void NativeApplication_obj::lime_gamepad_event_manager_register( ::Dynamic callback, ::Dynamic eventObject){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","lime_gamepad_event_manager_register",0x8dba5536,"lime._backend.native.NativeApplication.lime_gamepad_event_manager_register","lime/_backend/native/NativeApplication.hx",643,0xb13849fd)
            	HX_STACK_ARG(callback,"callback")
            	HX_STACK_ARG(eventObject,"eventObject")
HXLINE( 643)		 ::hx::Object * _hx_tmp = hx::DynamicPtr(callback);
HXDLIN( 643)		::lime::_backend::native::NativeApplication_obj::cffi_lime_gamepad_event_manager_register(_hx_tmp,hx::DynamicPtr(eventObject));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeApplication_obj,lime_gamepad_event_manager_register,(void))

void NativeApplication_obj::lime_joystick_event_manager_register( ::Dynamic callback, ::Dynamic eventObject){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","lime_joystick_event_manager_register",0xdfabe3ff,"lime._backend.native.NativeApplication.lime_joystick_event_manager_register","lime/_backend/native/NativeApplication.hx",644,0xb13849fd)
            	HX_STACK_ARG(callback,"callback")
            	HX_STACK_ARG(eventObject,"eventObject")
HXLINE( 644)		 ::hx::Object * _hx_tmp = hx::DynamicPtr(callback);
HXDLIN( 644)		::lime::_backend::native::NativeApplication_obj::cffi_lime_joystick_event_manager_register(_hx_tmp,hx::DynamicPtr(eventObject));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeApplication_obj,lime_joystick_event_manager_register,(void))

void NativeApplication_obj::lime_key_event_manager_register( ::Dynamic callback, ::Dynamic eventObject){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","lime_key_event_manager_register",0x6e7184f8,"lime._backend.native.NativeApplication.lime_key_event_manager_register","lime/_backend/native/NativeApplication.hx",645,0xb13849fd)
            	HX_STACK_ARG(callback,"callback")
            	HX_STACK_ARG(eventObject,"eventObject")
HXLINE( 645)		 ::hx::Object * _hx_tmp = hx::DynamicPtr(callback);
HXDLIN( 645)		::lime::_backend::native::NativeApplication_obj::cffi_lime_key_event_manager_register(_hx_tmp,hx::DynamicPtr(eventObject));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeApplication_obj,lime_key_event_manager_register,(void))

void NativeApplication_obj::lime_mouse_event_manager_register( ::Dynamic callback, ::Dynamic eventObject){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","lime_mouse_event_manager_register",0x6e6b1cb2,"lime._backend.native.NativeApplication.lime_mouse_event_manager_register","lime/_backend/native/NativeApplication.hx",646,0xb13849fd)
            	HX_STACK_ARG(callback,"callback")
            	HX_STACK_ARG(eventObject,"eventObject")
HXLINE( 646)		 ::hx::Object * _hx_tmp = hx::DynamicPtr(callback);
HXDLIN( 646)		::lime::_backend::native::NativeApplication_obj::cffi_lime_mouse_event_manager_register(_hx_tmp,hx::DynamicPtr(eventObject));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeApplication_obj,lime_mouse_event_manager_register,(void))

void NativeApplication_obj::lime_render_event_manager_register( ::Dynamic callback, ::Dynamic eventObject){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","lime_render_event_manager_register",0xd5f19025,"lime._backend.native.NativeApplication.lime_render_event_manager_register","lime/_backend/native/NativeApplication.hx",647,0xb13849fd)
            	HX_STACK_ARG(callback,"callback")
            	HX_STACK_ARG(eventObject,"eventObject")
HXLINE( 647)		 ::hx::Object * _hx_tmp = hx::DynamicPtr(callback);
HXDLIN( 647)		::lime::_backend::native::NativeApplication_obj::cffi_lime_render_event_manager_register(_hx_tmp,hx::DynamicPtr(eventObject));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeApplication_obj,lime_render_event_manager_register,(void))

void NativeApplication_obj::lime_sensor_event_manager_register( ::Dynamic callback, ::Dynamic eventObject){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","lime_sensor_event_manager_register",0xf7db25c1,"lime._backend.native.NativeApplication.lime_sensor_event_manager_register","lime/_backend/native/NativeApplication.hx",648,0xb13849fd)
            	HX_STACK_ARG(callback,"callback")
            	HX_STACK_ARG(eventObject,"eventObject")
HXLINE( 648)		 ::hx::Object * _hx_tmp = hx::DynamicPtr(callback);
HXDLIN( 648)		::lime::_backend::native::NativeApplication_obj::cffi_lime_sensor_event_manager_register(_hx_tmp,hx::DynamicPtr(eventObject));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeApplication_obj,lime_sensor_event_manager_register,(void))

void NativeApplication_obj::lime_text_event_manager_register( ::Dynamic callback, ::Dynamic eventObject){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","lime_text_event_manager_register",0x4272bd2e,"lime._backend.native.NativeApplication.lime_text_event_manager_register","lime/_backend/native/NativeApplication.hx",649,0xb13849fd)
            	HX_STACK_ARG(callback,"callback")
            	HX_STACK_ARG(eventObject,"eventObject")
HXLINE( 649)		 ::hx::Object * _hx_tmp = hx::DynamicPtr(callback);
HXDLIN( 649)		::lime::_backend::native::NativeApplication_obj::cffi_lime_text_event_manager_register(_hx_tmp,hx::DynamicPtr(eventObject));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeApplication_obj,lime_text_event_manager_register,(void))

void NativeApplication_obj::lime_touch_event_manager_register( ::Dynamic callback, ::Dynamic eventObject){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","lime_touch_event_manager_register",0x79dc0e58,"lime._backend.native.NativeApplication.lime_touch_event_manager_register","lime/_backend/native/NativeApplication.hx",650,0xb13849fd)
            	HX_STACK_ARG(callback,"callback")
            	HX_STACK_ARG(eventObject,"eventObject")
HXLINE( 650)		 ::hx::Object * _hx_tmp = hx::DynamicPtr(callback);
HXDLIN( 650)		::lime::_backend::native::NativeApplication_obj::cffi_lime_touch_event_manager_register(_hx_tmp,hx::DynamicPtr(eventObject));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeApplication_obj,lime_touch_event_manager_register,(void))

void NativeApplication_obj::lime_window_event_manager_register( ::Dynamic callback, ::Dynamic eventObject){
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","lime_window_event_manager_register",0xf4923acb,"lime._backend.native.NativeApplication.lime_window_event_manager_register","lime/_backend/native/NativeApplication.hx",651,0xb13849fd)
            	HX_STACK_ARG(callback,"callback")
            	HX_STACK_ARG(eventObject,"eventObject")
HXLINE( 651)		 ::hx::Object * _hx_tmp = hx::DynamicPtr(callback);
HXDLIN( 651)		::lime::_backend::native::NativeApplication_obj::cffi_lime_window_event_manager_register(_hx_tmp,hx::DynamicPtr(eventObject));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(NativeApplication_obj,lime_window_event_manager_register,(void))

::cpp::Function<   ::hx::Object *( ::hx::Object *) > NativeApplication_obj::cffi_lime_application_create;

::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > NativeApplication_obj::cffi_lime_application_event_manager_register;

::cpp::Function<  Int( ::hx::Object *) > NativeApplication_obj::cffi_lime_application_exec;

::cpp::Function<  void( ::hx::Object *) > NativeApplication_obj::cffi_lime_application_init;

::cpp::Function<  Int( ::hx::Object *) > NativeApplication_obj::cffi_lime_application_quit;

::cpp::Function<  void( ::hx::Object *,Float) > NativeApplication_obj::cffi_lime_application_set_frame_rate;

::cpp::Function<  Bool( ::hx::Object *) > NativeApplication_obj::cffi_lime_application_update;

::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > NativeApplication_obj::cffi_lime_drop_event_manager_register;

::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > NativeApplication_obj::cffi_lime_gamepad_event_manager_register;

::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > NativeApplication_obj::cffi_lime_joystick_event_manager_register;

::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > NativeApplication_obj::cffi_lime_key_event_manager_register;

::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > NativeApplication_obj::cffi_lime_mouse_event_manager_register;

::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > NativeApplication_obj::cffi_lime_render_event_manager_register;

::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > NativeApplication_obj::cffi_lime_sensor_event_manager_register;

::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > NativeApplication_obj::cffi_lime_text_event_manager_register;

::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > NativeApplication_obj::cffi_lime_touch_event_manager_register;

::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > NativeApplication_obj::cffi_lime_window_event_manager_register;


NativeApplication_obj::NativeApplication_obj()
{
}

void NativeApplication_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(NativeApplication);
	HX_MARK_MEMBER_NAME(applicationEventInfo,"applicationEventInfo");
	HX_MARK_MEMBER_NAME(currentTouches,"currentTouches");
	HX_MARK_MEMBER_NAME(dropEventInfo,"dropEventInfo");
	HX_MARK_MEMBER_NAME(gamepadEventInfo,"gamepadEventInfo");
	HX_MARK_MEMBER_NAME(joystickEventInfo,"joystickEventInfo");
	HX_MARK_MEMBER_NAME(keyEventInfo,"keyEventInfo");
	HX_MARK_MEMBER_NAME(mouseEventInfo,"mouseEventInfo");
	HX_MARK_MEMBER_NAME(renderEventInfo,"renderEventInfo");
	HX_MARK_MEMBER_NAME(sensorEventInfo,"sensorEventInfo");
	HX_MARK_MEMBER_NAME(textEventInfo,"textEventInfo");
	HX_MARK_MEMBER_NAME(touchEventInfo,"touchEventInfo");
	HX_MARK_MEMBER_NAME(unusedTouchesPool,"unusedTouchesPool");
	HX_MARK_MEMBER_NAME(windowEventInfo,"windowEventInfo");
	HX_MARK_MEMBER_NAME(handle,"handle");
	HX_MARK_MEMBER_NAME(frameRate,"frameRate");
	HX_MARK_MEMBER_NAME(parent,"parent");
	HX_MARK_END_CLASS();
}

void NativeApplication_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(applicationEventInfo,"applicationEventInfo");
	HX_VISIT_MEMBER_NAME(currentTouches,"currentTouches");
	HX_VISIT_MEMBER_NAME(dropEventInfo,"dropEventInfo");
	HX_VISIT_MEMBER_NAME(gamepadEventInfo,"gamepadEventInfo");
	HX_VISIT_MEMBER_NAME(joystickEventInfo,"joystickEventInfo");
	HX_VISIT_MEMBER_NAME(keyEventInfo,"keyEventInfo");
	HX_VISIT_MEMBER_NAME(mouseEventInfo,"mouseEventInfo");
	HX_VISIT_MEMBER_NAME(renderEventInfo,"renderEventInfo");
	HX_VISIT_MEMBER_NAME(sensorEventInfo,"sensorEventInfo");
	HX_VISIT_MEMBER_NAME(textEventInfo,"textEventInfo");
	HX_VISIT_MEMBER_NAME(touchEventInfo,"touchEventInfo");
	HX_VISIT_MEMBER_NAME(unusedTouchesPool,"unusedTouchesPool");
	HX_VISIT_MEMBER_NAME(windowEventInfo,"windowEventInfo");
	HX_VISIT_MEMBER_NAME(handle,"handle");
	HX_VISIT_MEMBER_NAME(frameRate,"frameRate");
	HX_VISIT_MEMBER_NAME(parent,"parent");
}

hx::Val NativeApplication_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"exec") ) { return hx::Val( exec_dyn()); }
		if (HX_FIELD_EQ(inName,"exit") ) { return hx::Val( exit_dyn()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"handle") ) { return hx::Val( handle); }
		if (HX_FIELD_EQ(inName,"parent") ) { return hx::Val( parent); }
		if (HX_FIELD_EQ(inName,"create") ) { return hx::Val( create_dyn()); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"frameRate") ) { return hx::Val( frameRate); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"updateTimer") ) { return hx::Val( updateTimer_dyn()); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"keyEventInfo") ) { return hx::Val( keyEventInfo); }
		if (HX_FIELD_EQ(inName,"getFrameRate") ) { return hx::Val( getFrameRate_dyn()); }
		if (HX_FIELD_EQ(inName,"setFrameRate") ) { return hx::Val( setFrameRate_dyn()); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"dropEventInfo") ) { return hx::Val( dropEventInfo); }
		if (HX_FIELD_EQ(inName,"textEventInfo") ) { return hx::Val( textEventInfo); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"currentTouches") ) { return hx::Val( currentTouches); }
		if (HX_FIELD_EQ(inName,"mouseEventInfo") ) { return hx::Val( mouseEventInfo); }
		if (HX_FIELD_EQ(inName,"touchEventInfo") ) { return hx::Val( touchEventInfo); }
		if (HX_FIELD_EQ(inName,"handleKeyEvent") ) { return hx::Val( handleKeyEvent_dyn()); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"renderEventInfo") ) { return hx::Val( renderEventInfo); }
		if (HX_FIELD_EQ(inName,"sensorEventInfo") ) { return hx::Val( sensorEventInfo); }
		if (HX_FIELD_EQ(inName,"windowEventInfo") ) { return hx::Val( windowEventInfo); }
		if (HX_FIELD_EQ(inName,"handleDropEvent") ) { return hx::Val( handleDropEvent_dyn()); }
		if (HX_FIELD_EQ(inName,"handleTextEvent") ) { return hx::Val( handleTextEvent_dyn()); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"gamepadEventInfo") ) { return hx::Val( gamepadEventInfo); }
		if (HX_FIELD_EQ(inName,"handleMouseEvent") ) { return hx::Val( handleMouseEvent_dyn()); }
		if (HX_FIELD_EQ(inName,"handleTouchEvent") ) { return hx::Val( handleTouchEvent_dyn()); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"joystickEventInfo") ) { return hx::Val( joystickEventInfo); }
		if (HX_FIELD_EQ(inName,"unusedTouchesPool") ) { return hx::Val( unusedTouchesPool); }
		if (HX_FIELD_EQ(inName,"handleRenderEvent") ) { return hx::Val( handleRenderEvent_dyn()); }
		if (HX_FIELD_EQ(inName,"handleSensorEvent") ) { return hx::Val( handleSensorEvent_dyn()); }
		if (HX_FIELD_EQ(inName,"handleWindowEvent") ) { return hx::Val( handleWindowEvent_dyn()); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"handleGamepadEvent") ) { return hx::Val( handleGamepadEvent_dyn()); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"handleJoystickEvent") ) { return hx::Val( handleJoystickEvent_dyn()); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"applicationEventInfo") ) { return hx::Val( applicationEventInfo); }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"handleApplicationEvent") ) { return hx::Val( handleApplicationEvent_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

bool NativeApplication_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 21:
		if (HX_FIELD_EQ(inName,"lime_application_exec") ) { outValue = lime_application_exec_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_application_init") ) { outValue = lime_application_init_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_application_quit") ) { outValue = lime_application_quit_dyn(); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"lime_application_create") ) { outValue = lime_application_create_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_application_update") ) { outValue = lime_application_update_dyn(); return true; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"cffi_lime_application_exec") ) { outValue = cffi_lime_application_exec; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_application_init") ) { outValue = cffi_lime_application_init; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_application_quit") ) { outValue = cffi_lime_application_quit; return true; }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"cffi_lime_application_create") ) { outValue = cffi_lime_application_create; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_application_update") ) { outValue = cffi_lime_application_update; return true; }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"lime_application_set_frame_rate") ) { outValue = lime_application_set_frame_rate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_key_event_manager_register") ) { outValue = lime_key_event_manager_register_dyn(); return true; }
		break;
	case 32:
		if (HX_FIELD_EQ(inName,"lime_drop_event_manager_register") ) { outValue = lime_drop_event_manager_register_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_text_event_manager_register") ) { outValue = lime_text_event_manager_register_dyn(); return true; }
		break;
	case 33:
		if (HX_FIELD_EQ(inName,"lime_mouse_event_manager_register") ) { outValue = lime_mouse_event_manager_register_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_touch_event_manager_register") ) { outValue = lime_touch_event_manager_register_dyn(); return true; }
		break;
	case 34:
		if (HX_FIELD_EQ(inName,"lime_render_event_manager_register") ) { outValue = lime_render_event_manager_register_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_sensor_event_manager_register") ) { outValue = lime_sensor_event_manager_register_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_window_event_manager_register") ) { outValue = lime_window_event_manager_register_dyn(); return true; }
		break;
	case 35:
		if (HX_FIELD_EQ(inName,"lime_gamepad_event_manager_register") ) { outValue = lime_gamepad_event_manager_register_dyn(); return true; }
		break;
	case 36:
		if (HX_FIELD_EQ(inName,"lime_joystick_event_manager_register") ) { outValue = lime_joystick_event_manager_register_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_application_set_frame_rate") ) { outValue = cffi_lime_application_set_frame_rate; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_key_event_manager_register") ) { outValue = cffi_lime_key_event_manager_register; return true; }
		break;
	case 37:
		if (HX_FIELD_EQ(inName,"cffi_lime_drop_event_manager_register") ) { outValue = cffi_lime_drop_event_manager_register; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_text_event_manager_register") ) { outValue = cffi_lime_text_event_manager_register; return true; }
		break;
	case 38:
		if (HX_FIELD_EQ(inName,"cffi_lime_mouse_event_manager_register") ) { outValue = cffi_lime_mouse_event_manager_register; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_touch_event_manager_register") ) { outValue = cffi_lime_touch_event_manager_register; return true; }
		break;
	case 39:
		if (HX_FIELD_EQ(inName,"lime_application_event_manager_register") ) { outValue = lime_application_event_manager_register_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_render_event_manager_register") ) { outValue = cffi_lime_render_event_manager_register; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_sensor_event_manager_register") ) { outValue = cffi_lime_sensor_event_manager_register; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_event_manager_register") ) { outValue = cffi_lime_window_event_manager_register; return true; }
		break;
	case 40:
		if (HX_FIELD_EQ(inName,"cffi_lime_gamepad_event_manager_register") ) { outValue = cffi_lime_gamepad_event_manager_register; return true; }
		break;
	case 41:
		if (HX_FIELD_EQ(inName,"cffi_lime_joystick_event_manager_register") ) { outValue = cffi_lime_joystick_event_manager_register; return true; }
		break;
	case 44:
		if (HX_FIELD_EQ(inName,"cffi_lime_application_event_manager_register") ) { outValue = cffi_lime_application_event_manager_register; return true; }
	}
	return false;
}

hx::Val NativeApplication_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"handle") ) { handle=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"parent") ) { parent=inValue.Cast<  ::lime::app::Application >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"frameRate") ) { frameRate=inValue.Cast< Float >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"keyEventInfo") ) { keyEventInfo=inValue.Cast<  ::lime::_backend::native::_NativeApplication::KeyEventInfo >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"dropEventInfo") ) { dropEventInfo=inValue.Cast<  ::lime::_backend::native::_NativeApplication::DropEventInfo >(); return inValue; }
		if (HX_FIELD_EQ(inName,"textEventInfo") ) { textEventInfo=inValue.Cast<  ::lime::_backend::native::_NativeApplication::TextEventInfo >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"currentTouches") ) { currentTouches=inValue.Cast<  ::haxe::ds::IntMap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"mouseEventInfo") ) { mouseEventInfo=inValue.Cast<  ::lime::_backend::native::_NativeApplication::MouseEventInfo >(); return inValue; }
		if (HX_FIELD_EQ(inName,"touchEventInfo") ) { touchEventInfo=inValue.Cast<  ::lime::_backend::native::_NativeApplication::TouchEventInfo >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"renderEventInfo") ) { renderEventInfo=inValue.Cast<  ::lime::_backend::native::_NativeApplication::RenderEventInfo >(); return inValue; }
		if (HX_FIELD_EQ(inName,"sensorEventInfo") ) { sensorEventInfo=inValue.Cast<  ::lime::_backend::native::_NativeApplication::SensorEventInfo >(); return inValue; }
		if (HX_FIELD_EQ(inName,"windowEventInfo") ) { windowEventInfo=inValue.Cast<  ::lime::_backend::native::_NativeApplication::WindowEventInfo >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"gamepadEventInfo") ) { gamepadEventInfo=inValue.Cast<  ::lime::_backend::native::_NativeApplication::GamepadEventInfo >(); return inValue; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"joystickEventInfo") ) { joystickEventInfo=inValue.Cast<  ::lime::_backend::native::_NativeApplication::JoystickEventInfo >(); return inValue; }
		if (HX_FIELD_EQ(inName,"unusedTouchesPool") ) { unusedTouchesPool=inValue.Cast<  ::List >(); return inValue; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"applicationEventInfo") ) { applicationEventInfo=inValue.Cast<  ::lime::_backend::native::_NativeApplication::ApplicationEventInfo >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool NativeApplication_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 26:
		if (HX_FIELD_EQ(inName,"cffi_lime_application_exec") ) { cffi_lime_application_exec=ioValue.Cast< ::cpp::Function<  Int( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_application_init") ) { cffi_lime_application_init=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_application_quit") ) { cffi_lime_application_quit=ioValue.Cast< ::cpp::Function<  Int( ::hx::Object *) > >(); return true; }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"cffi_lime_application_create") ) { cffi_lime_application_create=ioValue.Cast< ::cpp::Function<   ::hx::Object *( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_application_update") ) { cffi_lime_application_update=ioValue.Cast< ::cpp::Function<  Bool( ::hx::Object *) > >(); return true; }
		break;
	case 36:
		if (HX_FIELD_EQ(inName,"cffi_lime_application_set_frame_rate") ) { cffi_lime_application_set_frame_rate=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *,Float) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_key_event_manager_register") ) { cffi_lime_key_event_manager_register=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > >(); return true; }
		break;
	case 37:
		if (HX_FIELD_EQ(inName,"cffi_lime_drop_event_manager_register") ) { cffi_lime_drop_event_manager_register=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_text_event_manager_register") ) { cffi_lime_text_event_manager_register=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > >(); return true; }
		break;
	case 38:
		if (HX_FIELD_EQ(inName,"cffi_lime_mouse_event_manager_register") ) { cffi_lime_mouse_event_manager_register=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_touch_event_manager_register") ) { cffi_lime_touch_event_manager_register=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > >(); return true; }
		break;
	case 39:
		if (HX_FIELD_EQ(inName,"cffi_lime_render_event_manager_register") ) { cffi_lime_render_event_manager_register=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_sensor_event_manager_register") ) { cffi_lime_sensor_event_manager_register=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_window_event_manager_register") ) { cffi_lime_window_event_manager_register=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > >(); return true; }
		break;
	case 40:
		if (HX_FIELD_EQ(inName,"cffi_lime_gamepad_event_manager_register") ) { cffi_lime_gamepad_event_manager_register=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > >(); return true; }
		break;
	case 41:
		if (HX_FIELD_EQ(inName,"cffi_lime_joystick_event_manager_register") ) { cffi_lime_joystick_event_manager_register=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > >(); return true; }
		break;
	case 44:
		if (HX_FIELD_EQ(inName,"cffi_lime_application_event_manager_register") ) { cffi_lime_application_event_manager_register=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > >(); return true; }
	}
	return false;
}

void NativeApplication_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("applicationEventInfo","\x38","\x8c","\xf4","\x09"));
	outFields->push(HX_HCSTRING("currentTouches","\xb4","\x92","\x8c","\xe6"));
	outFields->push(HX_HCSTRING("dropEventInfo","\x79","\xeb","\x0f","\x1e"));
	outFields->push(HX_HCSTRING("gamepadEventInfo","\xc7","\xa4","\x2e","\x4c"));
	outFields->push(HX_HCSTRING("joystickEventInfo","\x4c","\x49","\x1d","\xd4"));
	outFields->push(HX_HCSTRING("keyEventInfo","\x09","\xec","\x90","\xcc"));
	outFields->push(HX_HCSTRING("mouseEventInfo","\xc3","\x9e","\xa6","\x86"));
	outFields->push(HX_HCSTRING("renderEventInfo","\x72","\x9b","\x70","\xdd"));
	outFields->push(HX_HCSTRING("sensorEventInfo","\x0e","\xd8","\x53","\x55"));
	outFields->push(HX_HCSTRING("textEventInfo","\x3b","\xd7","\x5a","\xac"));
	outFields->push(HX_HCSTRING("touchEventInfo","\xe9","\x99","\x5c","\x0c"));
	outFields->push(HX_HCSTRING("unusedTouchesPool","\xf3","\xcf","\xdf","\x11"));
	outFields->push(HX_HCSTRING("windowEventInfo","\x98","\x8f","\x34","\x9b"));
	outFields->push(HX_HCSTRING("handle","\xa8","\x83","\xfd","\xb7"));
	outFields->push(HX_HCSTRING("frameRate","\xad","\x11","\x25","\x39"));
	outFields->push(HX_HCSTRING("parent","\x2a","\x05","\x7e","\xed"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo NativeApplication_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::lime::_backend::native::_NativeApplication::ApplicationEventInfo*/ ,(int)offsetof(NativeApplication_obj,applicationEventInfo),HX_HCSTRING("applicationEventInfo","\x38","\x8c","\xf4","\x09")},
	{hx::fsObject /*::haxe::ds::IntMap*/ ,(int)offsetof(NativeApplication_obj,currentTouches),HX_HCSTRING("currentTouches","\xb4","\x92","\x8c","\xe6")},
	{hx::fsObject /*::lime::_backend::native::_NativeApplication::DropEventInfo*/ ,(int)offsetof(NativeApplication_obj,dropEventInfo),HX_HCSTRING("dropEventInfo","\x79","\xeb","\x0f","\x1e")},
	{hx::fsObject /*::lime::_backend::native::_NativeApplication::GamepadEventInfo*/ ,(int)offsetof(NativeApplication_obj,gamepadEventInfo),HX_HCSTRING("gamepadEventInfo","\xc7","\xa4","\x2e","\x4c")},
	{hx::fsObject /*::lime::_backend::native::_NativeApplication::JoystickEventInfo*/ ,(int)offsetof(NativeApplication_obj,joystickEventInfo),HX_HCSTRING("joystickEventInfo","\x4c","\x49","\x1d","\xd4")},
	{hx::fsObject /*::lime::_backend::native::_NativeApplication::KeyEventInfo*/ ,(int)offsetof(NativeApplication_obj,keyEventInfo),HX_HCSTRING("keyEventInfo","\x09","\xec","\x90","\xcc")},
	{hx::fsObject /*::lime::_backend::native::_NativeApplication::MouseEventInfo*/ ,(int)offsetof(NativeApplication_obj,mouseEventInfo),HX_HCSTRING("mouseEventInfo","\xc3","\x9e","\xa6","\x86")},
	{hx::fsObject /*::lime::_backend::native::_NativeApplication::RenderEventInfo*/ ,(int)offsetof(NativeApplication_obj,renderEventInfo),HX_HCSTRING("renderEventInfo","\x72","\x9b","\x70","\xdd")},
	{hx::fsObject /*::lime::_backend::native::_NativeApplication::SensorEventInfo*/ ,(int)offsetof(NativeApplication_obj,sensorEventInfo),HX_HCSTRING("sensorEventInfo","\x0e","\xd8","\x53","\x55")},
	{hx::fsObject /*::lime::_backend::native::_NativeApplication::TextEventInfo*/ ,(int)offsetof(NativeApplication_obj,textEventInfo),HX_HCSTRING("textEventInfo","\x3b","\xd7","\x5a","\xac")},
	{hx::fsObject /*::lime::_backend::native::_NativeApplication::TouchEventInfo*/ ,(int)offsetof(NativeApplication_obj,touchEventInfo),HX_HCSTRING("touchEventInfo","\xe9","\x99","\x5c","\x0c")},
	{hx::fsObject /*::List*/ ,(int)offsetof(NativeApplication_obj,unusedTouchesPool),HX_HCSTRING("unusedTouchesPool","\xf3","\xcf","\xdf","\x11")},
	{hx::fsObject /*::lime::_backend::native::_NativeApplication::WindowEventInfo*/ ,(int)offsetof(NativeApplication_obj,windowEventInfo),HX_HCSTRING("windowEventInfo","\x98","\x8f","\x34","\x9b")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(NativeApplication_obj,handle),HX_HCSTRING("handle","\xa8","\x83","\xfd","\xb7")},
	{hx::fsFloat,(int)offsetof(NativeApplication_obj,frameRate),HX_HCSTRING("frameRate","\xad","\x11","\x25","\x39")},
	{hx::fsObject /*::lime::app::Application*/ ,(int)offsetof(NativeApplication_obj,parent),HX_HCSTRING("parent","\x2a","\x05","\x7e","\xed")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo NativeApplication_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeApplication_obj::cffi_lime_application_create,HX_HCSTRING("cffi_lime_application_create","\x9c","\x71","\x49","\x96")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeApplication_obj::cffi_lime_application_event_manager_register,HX_HCSTRING("cffi_lime_application_event_manager_register","\x5a","\x89","\x33","\xc0")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeApplication_obj::cffi_lime_application_exec,HX_HCSTRING("cffi_lime_application_exec","\x31","\x16","\x12","\x9e")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeApplication_obj::cffi_lime_application_init,HX_HCSTRING("cffi_lime_application_init","\xb0","\x5d","\xaf","\xa0")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeApplication_obj::cffi_lime_application_quit,HX_HCSTRING("cffi_lime_application_quit","\x6f","\x62","\xfe","\xa5")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeApplication_obj::cffi_lime_application_set_frame_rate,HX_HCSTRING("cffi_lime_application_set_frame_rate","\xcf","\x4e","\xf9","\x0d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeApplication_obj::cffi_lime_application_update,HX_HCSTRING("cffi_lime_application_update","\xa9","\x90","\x3f","\xa1")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeApplication_obj::cffi_lime_drop_event_manager_register,HX_HCSTRING("cffi_lime_drop_event_manager_register","\x99","\xbf","\x28","\x6d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeApplication_obj::cffi_lime_gamepad_event_manager_register,HX_HCSTRING("cffi_lime_gamepad_event_manager_register","\xa9","\x21","\x63","\x7c")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeApplication_obj::cffi_lime_joystick_event_manager_register,HX_HCSTRING("cffi_lime_joystick_event_manager_register","\x2c","\xfc","\xb5","\xc4")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeApplication_obj::cffi_lime_key_event_manager_register,HX_HCSTRING("cffi_lime_key_event_manager_register","\xeb","\x5b","\x98","\x27")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeApplication_obj::cffi_lime_mouse_event_manager_register,HX_HCSTRING("cffi_lime_mouse_event_manager_register","\x65","\xd6","\x2b","\xe0")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeApplication_obj::cffi_lime_render_event_manager_register,HX_HCSTRING("cffi_lime_render_event_manager_register","\x12","\x53","\xd3","\xec")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeApplication_obj::cffi_lime_sensor_event_manager_register,HX_HCSTRING("cffi_lime_sensor_event_manager_register","\xae","\xe8","\xbc","\x0e")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeApplication_obj::cffi_lime_text_event_manager_register,HX_HCSTRING("cffi_lime_text_event_manager_register","\xdb","\xfa","\x47","\x8b")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeApplication_obj::cffi_lime_touch_event_manager_register,HX_HCSTRING("cffi_lime_touch_event_manager_register","\x0b","\xc8","\x9c","\xeb")},
	{hx::fsObject /*Dynamic*/ ,(void *) &NativeApplication_obj::cffi_lime_window_event_manager_register,HX_HCSTRING("cffi_lime_window_event_manager_register","\xb8","\xfd","\x73","\x0b")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String NativeApplication_obj_sMemberFields[] = {
	HX_HCSTRING("applicationEventInfo","\x38","\x8c","\xf4","\x09"),
	HX_HCSTRING("currentTouches","\xb4","\x92","\x8c","\xe6"),
	HX_HCSTRING("dropEventInfo","\x79","\xeb","\x0f","\x1e"),
	HX_HCSTRING("gamepadEventInfo","\xc7","\xa4","\x2e","\x4c"),
	HX_HCSTRING("joystickEventInfo","\x4c","\x49","\x1d","\xd4"),
	HX_HCSTRING("keyEventInfo","\x09","\xec","\x90","\xcc"),
	HX_HCSTRING("mouseEventInfo","\xc3","\x9e","\xa6","\x86"),
	HX_HCSTRING("renderEventInfo","\x72","\x9b","\x70","\xdd"),
	HX_HCSTRING("sensorEventInfo","\x0e","\xd8","\x53","\x55"),
	HX_HCSTRING("textEventInfo","\x3b","\xd7","\x5a","\xac"),
	HX_HCSTRING("touchEventInfo","\xe9","\x99","\x5c","\x0c"),
	HX_HCSTRING("unusedTouchesPool","\xf3","\xcf","\xdf","\x11"),
	HX_HCSTRING("windowEventInfo","\x98","\x8f","\x34","\x9b"),
	HX_HCSTRING("handle","\xa8","\x83","\xfd","\xb7"),
	HX_HCSTRING("frameRate","\xad","\x11","\x25","\x39"),
	HX_HCSTRING("parent","\x2a","\x05","\x7e","\xed"),
	HX_HCSTRING("create","\xfc","\x66","\x0f","\x7c"),
	HX_HCSTRING("exec","\x91","\xf3","\x1d","\x43"),
	HX_HCSTRING("exit","\x1e","\xf7","\x1d","\x43"),
	HX_HCSTRING("getFrameRate","\x37","\xae","\x7b","\x48"),
	HX_HCSTRING("handleApplicationEvent","\x72","\xba","\xa4","\x11"),
	HX_HCSTRING("handleDropEvent","\xa3","\x9c","\xe8","\x85"),
	HX_HCSTRING("handleGamepadEvent","\x81","\x1b","\xb0","\x7b"),
	HX_HCSTRING("handleJoystickEvent","\xf6","\xd0","\x87","\xa8"),
	HX_HCSTRING("handleKeyEvent","\xc3","\x95","\x05","\x08"),
	HX_HCSTRING("handleMouseEvent","\x7d","\x65","\x58","\x63"),
	HX_HCSTRING("handleRenderEvent","\x1c","\xda","\x83","\x3f"),
	HX_HCSTRING("handleSensorEvent","\xb8","\x98","\x2d","\xba"),
	HX_HCSTRING("handleTextEvent","\x65","\xff","\x1d","\xdd"),
	HX_HCSTRING("handleTouchEvent","\xa3","\x55","\x1c","\x3f"),
	HX_HCSTRING("handleWindowEvent","\x42","\x43","\xa5","\x64"),
	HX_HCSTRING("setFrameRate","\xab","\xd1","\x74","\x5d"),
	HX_HCSTRING("updateTimer","\xfc","\x28","\xce","\xf5"),
	::String(null()) };

static void NativeApplication_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(NativeApplication_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(NativeApplication_obj::cffi_lime_application_create,"cffi_lime_application_create");
	HX_MARK_MEMBER_NAME(NativeApplication_obj::cffi_lime_application_event_manager_register,"cffi_lime_application_event_manager_register");
	HX_MARK_MEMBER_NAME(NativeApplication_obj::cffi_lime_application_exec,"cffi_lime_application_exec");
	HX_MARK_MEMBER_NAME(NativeApplication_obj::cffi_lime_application_init,"cffi_lime_application_init");
	HX_MARK_MEMBER_NAME(NativeApplication_obj::cffi_lime_application_quit,"cffi_lime_application_quit");
	HX_MARK_MEMBER_NAME(NativeApplication_obj::cffi_lime_application_set_frame_rate,"cffi_lime_application_set_frame_rate");
	HX_MARK_MEMBER_NAME(NativeApplication_obj::cffi_lime_application_update,"cffi_lime_application_update");
	HX_MARK_MEMBER_NAME(NativeApplication_obj::cffi_lime_drop_event_manager_register,"cffi_lime_drop_event_manager_register");
	HX_MARK_MEMBER_NAME(NativeApplication_obj::cffi_lime_gamepad_event_manager_register,"cffi_lime_gamepad_event_manager_register");
	HX_MARK_MEMBER_NAME(NativeApplication_obj::cffi_lime_joystick_event_manager_register,"cffi_lime_joystick_event_manager_register");
	HX_MARK_MEMBER_NAME(NativeApplication_obj::cffi_lime_key_event_manager_register,"cffi_lime_key_event_manager_register");
	HX_MARK_MEMBER_NAME(NativeApplication_obj::cffi_lime_mouse_event_manager_register,"cffi_lime_mouse_event_manager_register");
	HX_MARK_MEMBER_NAME(NativeApplication_obj::cffi_lime_render_event_manager_register,"cffi_lime_render_event_manager_register");
	HX_MARK_MEMBER_NAME(NativeApplication_obj::cffi_lime_sensor_event_manager_register,"cffi_lime_sensor_event_manager_register");
	HX_MARK_MEMBER_NAME(NativeApplication_obj::cffi_lime_text_event_manager_register,"cffi_lime_text_event_manager_register");
	HX_MARK_MEMBER_NAME(NativeApplication_obj::cffi_lime_touch_event_manager_register,"cffi_lime_touch_event_manager_register");
	HX_MARK_MEMBER_NAME(NativeApplication_obj::cffi_lime_window_event_manager_register,"cffi_lime_window_event_manager_register");
};

#ifdef HXCPP_VISIT_ALLOCS
static void NativeApplication_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(NativeApplication_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(NativeApplication_obj::cffi_lime_application_create,"cffi_lime_application_create");
	HX_VISIT_MEMBER_NAME(NativeApplication_obj::cffi_lime_application_event_manager_register,"cffi_lime_application_event_manager_register");
	HX_VISIT_MEMBER_NAME(NativeApplication_obj::cffi_lime_application_exec,"cffi_lime_application_exec");
	HX_VISIT_MEMBER_NAME(NativeApplication_obj::cffi_lime_application_init,"cffi_lime_application_init");
	HX_VISIT_MEMBER_NAME(NativeApplication_obj::cffi_lime_application_quit,"cffi_lime_application_quit");
	HX_VISIT_MEMBER_NAME(NativeApplication_obj::cffi_lime_application_set_frame_rate,"cffi_lime_application_set_frame_rate");
	HX_VISIT_MEMBER_NAME(NativeApplication_obj::cffi_lime_application_update,"cffi_lime_application_update");
	HX_VISIT_MEMBER_NAME(NativeApplication_obj::cffi_lime_drop_event_manager_register,"cffi_lime_drop_event_manager_register");
	HX_VISIT_MEMBER_NAME(NativeApplication_obj::cffi_lime_gamepad_event_manager_register,"cffi_lime_gamepad_event_manager_register");
	HX_VISIT_MEMBER_NAME(NativeApplication_obj::cffi_lime_joystick_event_manager_register,"cffi_lime_joystick_event_manager_register");
	HX_VISIT_MEMBER_NAME(NativeApplication_obj::cffi_lime_key_event_manager_register,"cffi_lime_key_event_manager_register");
	HX_VISIT_MEMBER_NAME(NativeApplication_obj::cffi_lime_mouse_event_manager_register,"cffi_lime_mouse_event_manager_register");
	HX_VISIT_MEMBER_NAME(NativeApplication_obj::cffi_lime_render_event_manager_register,"cffi_lime_render_event_manager_register");
	HX_VISIT_MEMBER_NAME(NativeApplication_obj::cffi_lime_sensor_event_manager_register,"cffi_lime_sensor_event_manager_register");
	HX_VISIT_MEMBER_NAME(NativeApplication_obj::cffi_lime_text_event_manager_register,"cffi_lime_text_event_manager_register");
	HX_VISIT_MEMBER_NAME(NativeApplication_obj::cffi_lime_touch_event_manager_register,"cffi_lime_touch_event_manager_register");
	HX_VISIT_MEMBER_NAME(NativeApplication_obj::cffi_lime_window_event_manager_register,"cffi_lime_window_event_manager_register");
};

#endif

hx::Class NativeApplication_obj::__mClass;

static ::String NativeApplication_obj_sStaticFields[] = {
	HX_HCSTRING("lime_application_create","\x75","\x25","\x1a","\xbb"),
	HX_HCSTRING("lime_application_event_manager_register","\x33","\x3f","\x87","\x01"),
	HX_HCSTRING("lime_application_exec","\xca","\xf1","\x81","\xe2"),
	HX_HCSTRING("lime_application_init","\x49","\x39","\x1f","\xe5"),
	HX_HCSTRING("lime_application_quit","\x08","\x3e","\x6e","\xea"),
	HX_HCSTRING("lime_application_set_frame_rate","\xa8","\x03","\xd7","\x1d"),
	HX_HCSTRING("lime_application_update","\x82","\x44","\x10","\xc6"),
	HX_HCSTRING("lime_drop_event_manager_register","\xa0","\x48","\x49","\x3f"),
	HX_HCSTRING("lime_gamepad_event_manager_register","\x02","\xb7","\x1e","\x51"),
	HX_HCSTRING("lime_joystick_event_manager_register","\xb3","\x14","\x1d","\x14"),
	HX_HCSTRING("lime_key_event_manager_register","\xc4","\x10","\x76","\x37"),
	HX_HCSTRING("lime_mouse_event_manager_register","\x7e","\x33","\x83","\xea"),
	HX_HCSTRING("lime_render_event_manager_register","\xd9","\x6b","\xed","\xee"),
	HX_HCSTRING("lime_sensor_event_manager_register","\x75","\x01","\xd7","\x10"),
	HX_HCSTRING("lime_text_event_manager_register","\xe2","\x83","\x68","\x5d"),
	HX_HCSTRING("lime_touch_event_manager_register","\x24","\x25","\xf4","\xf5"),
	HX_HCSTRING("lime_window_event_manager_register","\x7f","\x16","\x8e","\x0d"),
	HX_HCSTRING("cffi_lime_application_create","\x9c","\x71","\x49","\x96"),
	HX_HCSTRING("cffi_lime_application_event_manager_register","\x5a","\x89","\x33","\xc0"),
	HX_HCSTRING("cffi_lime_application_exec","\x31","\x16","\x12","\x9e"),
	HX_HCSTRING("cffi_lime_application_init","\xb0","\x5d","\xaf","\xa0"),
	HX_HCSTRING("cffi_lime_application_quit","\x6f","\x62","\xfe","\xa5"),
	HX_HCSTRING("cffi_lime_application_set_frame_rate","\xcf","\x4e","\xf9","\x0d"),
	HX_HCSTRING("cffi_lime_application_update","\xa9","\x90","\x3f","\xa1"),
	HX_HCSTRING("cffi_lime_drop_event_manager_register","\x99","\xbf","\x28","\x6d"),
	HX_HCSTRING("cffi_lime_gamepad_event_manager_register","\xa9","\x21","\x63","\x7c"),
	HX_HCSTRING("cffi_lime_joystick_event_manager_register","\x2c","\xfc","\xb5","\xc4"),
	HX_HCSTRING("cffi_lime_key_event_manager_register","\xeb","\x5b","\x98","\x27"),
	HX_HCSTRING("cffi_lime_mouse_event_manager_register","\x65","\xd6","\x2b","\xe0"),
	HX_HCSTRING("cffi_lime_render_event_manager_register","\x12","\x53","\xd3","\xec"),
	HX_HCSTRING("cffi_lime_sensor_event_manager_register","\xae","\xe8","\xbc","\x0e"),
	HX_HCSTRING("cffi_lime_text_event_manager_register","\xdb","\xfa","\x47","\x8b"),
	HX_HCSTRING("cffi_lime_touch_event_manager_register","\x0b","\xc8","\x9c","\xeb"),
	HX_HCSTRING("cffi_lime_window_event_manager_register","\xb8","\xfd","\x73","\x0b"),
	::String(null())
};

void NativeApplication_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("lime._backend.native.NativeApplication","\xa2","\x84","\xe2","\x94");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &NativeApplication_obj::__GetStatic;
	__mClass->mSetStaticField = &NativeApplication_obj::__SetStatic;
	__mClass->mMarkFunc = NativeApplication_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(NativeApplication_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(NativeApplication_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< NativeApplication_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = NativeApplication_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = NativeApplication_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = NativeApplication_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void NativeApplication_obj::__boot()
{
{
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","boot",0x16d9a37e,"lime._backend.native.NativeApplication.boot","lime/_backend/native/NativeApplication.hx",635,0xb13849fd)
HXLINE( 635)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_application_create",75,25,1a,bb),HX_("oo",20,61,00,00),false);
HXDLIN( 635)		cffi_lime_application_create = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","boot",0x16d9a37e,"lime._backend.native.NativeApplication.boot","lime/_backend/native/NativeApplication.hx",636,0xb13849fd)
HXLINE( 636)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_application_event_manager_register",33,3f,87,01),HX_("oov",56,9b,54,00),false);
HXDLIN( 636)		cffi_lime_application_event_manager_register = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","boot",0x16d9a37e,"lime._backend.native.NativeApplication.boot","lime/_backend/native/NativeApplication.hx",637,0xb13849fd)
HXLINE( 637)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_application_exec",ca,f1,81,e2),HX_("oi",1a,61,00,00),false);
HXDLIN( 637)		cffi_lime_application_exec = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","boot",0x16d9a37e,"lime._backend.native.NativeApplication.boot","lime/_backend/native/NativeApplication.hx",638,0xb13849fd)
HXLINE( 638)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_application_init",49,39,1f,e5),HX_("ov",27,61,00,00),false);
HXDLIN( 638)		cffi_lime_application_init = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","boot",0x16d9a37e,"lime._backend.native.NativeApplication.boot","lime/_backend/native/NativeApplication.hx",639,0xb13849fd)
HXLINE( 639)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_application_quit",08,3e,6e,ea),HX_("oi",1a,61,00,00),false);
HXDLIN( 639)		cffi_lime_application_quit = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","boot",0x16d9a37e,"lime._backend.native.NativeApplication.boot","lime/_backend/native/NativeApplication.hx",640,0xb13849fd)
HXLINE( 640)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_application_set_frame_rate",a8,03,d7,1d),HX_("odv",c1,91,54,00),false);
HXDLIN( 640)		cffi_lime_application_set_frame_rate = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","boot",0x16d9a37e,"lime._backend.native.NativeApplication.boot","lime/_backend/native/NativeApplication.hx",641,0xb13849fd)
HXLINE( 641)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_application_update",82,44,10,c6),HX_("ob",13,61,00,00),false);
HXDLIN( 641)		cffi_lime_application_update = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","boot",0x16d9a37e,"lime._backend.native.NativeApplication.boot","lime/_backend/native/NativeApplication.hx",642,0xb13849fd)
HXLINE( 642)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_drop_event_manager_register",a0,48,49,3f),HX_("oov",56,9b,54,00),false);
HXDLIN( 642)		cffi_lime_drop_event_manager_register = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","boot",0x16d9a37e,"lime._backend.native.NativeApplication.boot","lime/_backend/native/NativeApplication.hx",643,0xb13849fd)
HXLINE( 643)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gamepad_event_manager_register",02,b7,1e,51),HX_("oov",56,9b,54,00),false);
HXDLIN( 643)		cffi_lime_gamepad_event_manager_register = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","boot",0x16d9a37e,"lime._backend.native.NativeApplication.boot","lime/_backend/native/NativeApplication.hx",644,0xb13849fd)
HXLINE( 644)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_joystick_event_manager_register",b3,14,1d,14),HX_("oov",56,9b,54,00),false);
HXDLIN( 644)		cffi_lime_joystick_event_manager_register = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","boot",0x16d9a37e,"lime._backend.native.NativeApplication.boot","lime/_backend/native/NativeApplication.hx",645,0xb13849fd)
HXLINE( 645)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_key_event_manager_register",c4,10,76,37),HX_("oov",56,9b,54,00),false);
HXDLIN( 645)		cffi_lime_key_event_manager_register = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","boot",0x16d9a37e,"lime._backend.native.NativeApplication.boot","lime/_backend/native/NativeApplication.hx",646,0xb13849fd)
HXLINE( 646)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_mouse_event_manager_register",7e,33,83,ea),HX_("oov",56,9b,54,00),false);
HXDLIN( 646)		cffi_lime_mouse_event_manager_register = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","boot",0x16d9a37e,"lime._backend.native.NativeApplication.boot","lime/_backend/native/NativeApplication.hx",647,0xb13849fd)
HXLINE( 647)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_render_event_manager_register",d9,6b,ed,ee),HX_("oov",56,9b,54,00),false);
HXDLIN( 647)		cffi_lime_render_event_manager_register = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","boot",0x16d9a37e,"lime._backend.native.NativeApplication.boot","lime/_backend/native/NativeApplication.hx",648,0xb13849fd)
HXLINE( 648)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_sensor_event_manager_register",75,01,d7,10),HX_("oov",56,9b,54,00),false);
HXDLIN( 648)		cffi_lime_sensor_event_manager_register = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","boot",0x16d9a37e,"lime._backend.native.NativeApplication.boot","lime/_backend/native/NativeApplication.hx",649,0xb13849fd)
HXLINE( 649)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_text_event_manager_register",e2,83,68,5d),HX_("oov",56,9b,54,00),false);
HXDLIN( 649)		cffi_lime_text_event_manager_register = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","boot",0x16d9a37e,"lime._backend.native.NativeApplication.boot","lime/_backend/native/NativeApplication.hx",650,0xb13849fd)
HXLINE( 650)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_touch_event_manager_register",24,25,f4,f5),HX_("oov",56,9b,54,00),false);
HXDLIN( 650)		cffi_lime_touch_event_manager_register = inValue;
            	}
{
            	HX_STACK_FRAME("lime._backend.native.NativeApplication","boot",0x16d9a37e,"lime._backend.native.NativeApplication.boot","lime/_backend/native/NativeApplication.hx",651,0xb13849fd)
HXLINE( 651)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_window_event_manager_register",7f,16,8e,0d),HX_("oov",56,9b,54,00),false);
HXDLIN( 651)		cffi_lime_window_event_manager_register = inValue;
            	}
}

} // end namespace lime
} // end namespace _backend
} // end namespace native
