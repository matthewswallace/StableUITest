// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_lime_project_NDLLType
#include <lime/project/NDLLType.h>
#endif
namespace lime{
namespace project{

::lime::project::NDLLType NDLLType_obj::AUTO;

::lime::project::NDLLType NDLLType_obj::DYNAMIC;

::lime::project::NDLLType NDLLType_obj::STATIC;

bool NDLLType_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("AUTO",6f,a7,37,2b)) { outValue = NDLLType_obj::AUTO; return true; }
	if (inName==HX_("DYNAMIC",5f,73,e9,b5)) { outValue = NDLLType_obj::DYNAMIC; return true; }
	if (inName==HX_("STATIC",ae,88,7e,b8)) { outValue = NDLLType_obj::STATIC; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(NDLLType_obj)

int NDLLType_obj::__FindIndex(::String inName)
{
	if (inName==HX_("AUTO",6f,a7,37,2b)) return 0;
	if (inName==HX_("DYNAMIC",5f,73,e9,b5)) return 1;
	if (inName==HX_("STATIC",ae,88,7e,b8)) return 2;
	return super::__FindIndex(inName);
}

int NDLLType_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("AUTO",6f,a7,37,2b)) return 0;
	if (inName==HX_("DYNAMIC",5f,73,e9,b5)) return 0;
	if (inName==HX_("STATIC",ae,88,7e,b8)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val NDLLType_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("AUTO",6f,a7,37,2b)) return AUTO;
	if (inName==HX_("DYNAMIC",5f,73,e9,b5)) return DYNAMIC;
	if (inName==HX_("STATIC",ae,88,7e,b8)) return STATIC;
	return super::__Field(inName,inCallProp);
}

static ::String NDLLType_obj_sStaticFields[] = {
	HX_("AUTO",6f,a7,37,2b),
	HX_("DYNAMIC",5f,73,e9,b5),
	HX_("STATIC",ae,88,7e,b8),
	::String(null())
};

static void NDLLType_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(NDLLType_obj::AUTO,"AUTO");
	HX_MARK_MEMBER_NAME(NDLLType_obj::DYNAMIC,"DYNAMIC");
	HX_MARK_MEMBER_NAME(NDLLType_obj::STATIC,"STATIC");
};

#ifdef HXCPP_VISIT_ALLOCS
static void NDLLType_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(NDLLType_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(NDLLType_obj::AUTO,"AUTO");
	HX_VISIT_MEMBER_NAME(NDLLType_obj::DYNAMIC,"DYNAMIC");
	HX_VISIT_MEMBER_NAME(NDLLType_obj::STATIC,"STATIC");
};
#endif

hx::Class NDLLType_obj::__mClass;

Dynamic __Create_NDLLType_obj() { return new NDLLType_obj; }

void NDLLType_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("lime.project.NDLLType","\xbe","\x77","\x90","\x51"), hx::TCanCast< NDLLType_obj >,NDLLType_obj_sStaticFields,0,
	&__Create_NDLLType_obj, &__Create,
	&super::__SGetClass(), &CreateNDLLType_obj, NDLLType_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , NDLLType_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &NDLLType_obj::__GetStatic;
}

void NDLLType_obj::__boot()
{
AUTO = hx::CreateEnum< NDLLType_obj >(HX_HCSTRING("AUTO","\x6f","\xa7","\x37","\x2b"),0,0);
DYNAMIC = hx::CreateEnum< NDLLType_obj >(HX_HCSTRING("DYNAMIC","\x5f","\x73","\xe9","\xb5"),1,0);
STATIC = hx::CreateEnum< NDLLType_obj >(HX_HCSTRING("STATIC","\xae","\x88","\x7e","\xb8"),2,0);
}


} // end namespace lime
} // end namespace project
