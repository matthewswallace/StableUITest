// Generated by Haxe 3.3.0
#include <hxcpp.h>

#ifndef INCLUDED_cpp_Prime
#include <cpp/Prime.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_GL
#include <lime/graphics/opengl/GL.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_GLBuffer
#include <lime/graphics/opengl/GLBuffer.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_GLFramebuffer
#include <lime/graphics/opengl/GLFramebuffer.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_GLObject
#include <lime/graphics/opengl/GLObject.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_GLProgram
#include <lime/graphics/opengl/GLProgram.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_GLRenderbuffer
#include <lime/graphics/opengl/GLRenderbuffer.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_GLShader
#include <lime/graphics/opengl/GLShader.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_GLTexture
#include <lime/graphics/opengl/GLTexture.h>
#endif
#ifndef INCLUDED_lime_system__CFFIPointer_CFFIPointer_Impl_
#include <lime/system/_CFFIPointer/CFFIPointer_Impl_.h>
#endif
#ifndef INCLUDED_lime_utils_ArrayBufferView
#include <lime/utils/ArrayBufferView.h>
#endif

namespace lime{
namespace graphics{
namespace opengl{

void GL_obj::__construct() { }

Dynamic GL_obj::__CreateEmpty() { return new GL_obj; }

hx::ObjectPtr< GL_obj > GL_obj::__new()
{
	hx::ObjectPtr< GL_obj > _hx_result = new GL_obj();
	_hx_result->__construct();
	return _hx_result;
}

Dynamic GL_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< GL_obj > _hx_result = new GL_obj();
	_hx_result->__construct();
	return _hx_result;
}

Int GL_obj::DEPTH_BUFFER_BIT;

Int GL_obj::STENCIL_BUFFER_BIT;

Int GL_obj::COLOR_BUFFER_BIT;

Int GL_obj::POINTS;

Int GL_obj::LINES;

Int GL_obj::LINE_LOOP;

Int GL_obj::LINE_STRIP;

Int GL_obj::TRIANGLES;

Int GL_obj::TRIANGLE_STRIP;

Int GL_obj::TRIANGLE_FAN;

Int GL_obj::ZERO;

Int GL_obj::ONE;

Int GL_obj::SRC_COLOR;

Int GL_obj::ONE_MINUS_SRC_COLOR;

Int GL_obj::SRC_ALPHA;

Int GL_obj::ONE_MINUS_SRC_ALPHA;

Int GL_obj::DST_ALPHA;

Int GL_obj::ONE_MINUS_DST_ALPHA;

Int GL_obj::DST_COLOR;

Int GL_obj::ONE_MINUS_DST_COLOR;

Int GL_obj::SRC_ALPHA_SATURATE;

Int GL_obj::FUNC_ADD;

Int GL_obj::BLEND_EQUATION;

Int GL_obj::BLEND_EQUATION_RGB;

Int GL_obj::BLEND_EQUATION_ALPHA;

Int GL_obj::FUNC_SUBTRACT;

Int GL_obj::FUNC_REVERSE_SUBTRACT;

Int GL_obj::BLEND_DST_RGB;

Int GL_obj::BLEND_SRC_RGB;

Int GL_obj::BLEND_DST_ALPHA;

Int GL_obj::BLEND_SRC_ALPHA;

Int GL_obj::CONSTANT_COLOR;

Int GL_obj::ONE_MINUS_CONSTANT_COLOR;

Int GL_obj::CONSTANT_ALPHA;

Int GL_obj::ONE_MINUS_CONSTANT_ALPHA;

Int GL_obj::BLEND_COLOR;

Int GL_obj::ARRAY_BUFFER;

Int GL_obj::ELEMENT_ARRAY_BUFFER;

Int GL_obj::ARRAY_BUFFER_BINDING;

Int GL_obj::ELEMENT_ARRAY_BUFFER_BINDING;

Int GL_obj::STREAM_DRAW;

Int GL_obj::STATIC_DRAW;

Int GL_obj::DYNAMIC_DRAW;

Int GL_obj::BUFFER_SIZE;

Int GL_obj::BUFFER_USAGE;

Int GL_obj::CURRENT_VERTEX_ATTRIB;

Int GL_obj::FRONT;

Int GL_obj::BACK;

Int GL_obj::FRONT_AND_BACK;

Int GL_obj::CULL_FACE;

Int GL_obj::BLEND;

Int GL_obj::DITHER;

Int GL_obj::STENCIL_TEST;

Int GL_obj::DEPTH_TEST;

Int GL_obj::SCISSOR_TEST;

Int GL_obj::POLYGON_OFFSET_FILL;

Int GL_obj::SAMPLE_ALPHA_TO_COVERAGE;

Int GL_obj::SAMPLE_COVERAGE;

Int GL_obj::NO_ERROR;

Int GL_obj::INVALID_ENUM;

Int GL_obj::INVALID_VALUE;

Int GL_obj::INVALID_OPERATION;

Int GL_obj::OUT_OF_MEMORY;

Int GL_obj::CW;

Int GL_obj::CCW;

Int GL_obj::LINE_WIDTH;

Int GL_obj::ALIASED_POINT_SIZE_RANGE;

Int GL_obj::ALIASED_LINE_WIDTH_RANGE;

Int GL_obj::CULL_FACE_MODE;

Int GL_obj::FRONT_FACE;

Int GL_obj::DEPTH_RANGE;

Int GL_obj::DEPTH_WRITEMASK;

Int GL_obj::DEPTH_CLEAR_VALUE;

Int GL_obj::DEPTH_FUNC;

Int GL_obj::STENCIL_CLEAR_VALUE;

Int GL_obj::STENCIL_FUNC;

Int GL_obj::STENCIL_FAIL;

Int GL_obj::STENCIL_PASS_DEPTH_FAIL;

Int GL_obj::STENCIL_PASS_DEPTH_PASS;

Int GL_obj::STENCIL_REF;

Int GL_obj::STENCIL_VALUE_MASK;

Int GL_obj::STENCIL_WRITEMASK;

Int GL_obj::STENCIL_BACK_FUNC;

Int GL_obj::STENCIL_BACK_FAIL;

Int GL_obj::STENCIL_BACK_PASS_DEPTH_FAIL;

Int GL_obj::STENCIL_BACK_PASS_DEPTH_PASS;

Int GL_obj::STENCIL_BACK_REF;

Int GL_obj::STENCIL_BACK_VALUE_MASK;

Int GL_obj::STENCIL_BACK_WRITEMASK;

Int GL_obj::VIEWPORT;

Int GL_obj::SCISSOR_BOX;

Int GL_obj::COLOR_CLEAR_VALUE;

Int GL_obj::COLOR_WRITEMASK;

Int GL_obj::UNPACK_ALIGNMENT;

Int GL_obj::PACK_ALIGNMENT;

Int GL_obj::MAX_TEXTURE_SIZE;

Int GL_obj::MAX_VIEWPORT_DIMS;

Int GL_obj::SUBPIXEL_BITS;

Int GL_obj::RED_BITS;

Int GL_obj::GREEN_BITS;

Int GL_obj::BLUE_BITS;

Int GL_obj::ALPHA_BITS;

Int GL_obj::DEPTH_BITS;

Int GL_obj::STENCIL_BITS;

Int GL_obj::POLYGON_OFFSET_UNITS;

Int GL_obj::POLYGON_OFFSET_FACTOR;

Int GL_obj::TEXTURE_BINDING_2D;

Int GL_obj::SAMPLE_BUFFERS;

Int GL_obj::SAMPLES;

Int GL_obj::SAMPLE_COVERAGE_VALUE;

Int GL_obj::SAMPLE_COVERAGE_INVERT;

Int GL_obj::COMPRESSED_TEXTURE_FORMATS;

Int GL_obj::DONT_CARE;

Int GL_obj::FASTEST;

Int GL_obj::NICEST;

Int GL_obj::GENERATE_MIPMAP_HINT;

Int GL_obj::BYTE;

Int GL_obj::UNSIGNED_BYTE;

Int GL_obj::SHORT;

Int GL_obj::UNSIGNED_SHORT;

Int GL_obj::INT;

Int GL_obj::UNSIGNED_INT;

Int GL_obj::FLOAT;

Int GL_obj::DEPTH_COMPONENT;

Int GL_obj::ALPHA;

Int GL_obj::RGB;

Int GL_obj::RGBA;

Int GL_obj::BGR_EXT;

Int GL_obj::BGRA_EXT;

Int GL_obj::LUMINANCE;

Int GL_obj::LUMINANCE_ALPHA;

Int GL_obj::UNSIGNED_SHORT_4_4_4_4;

Int GL_obj::UNSIGNED_SHORT_5_5_5_1;

Int GL_obj::UNSIGNED_SHORT_5_6_5;

Int GL_obj::FRAGMENT_SHADER;

Int GL_obj::VERTEX_SHADER;

Int GL_obj::MAX_VERTEX_ATTRIBS;

Int GL_obj::MAX_VERTEX_UNIFORM_VECTORS;

Int GL_obj::MAX_VARYING_VECTORS;

Int GL_obj::MAX_COMBINED_TEXTURE_IMAGE_UNITS;

Int GL_obj::MAX_VERTEX_TEXTURE_IMAGE_UNITS;

Int GL_obj::MAX_TEXTURE_IMAGE_UNITS;

Int GL_obj::MAX_FRAGMENT_UNIFORM_VECTORS;

Int GL_obj::SHADER_TYPE;

Int GL_obj::DELETE_STATUS;

Int GL_obj::LINK_STATUS;

Int GL_obj::VALIDATE_STATUS;

Int GL_obj::ATTACHED_SHADERS;

Int GL_obj::ACTIVE_UNIFORMS;

Int GL_obj::ACTIVE_ATTRIBUTES;

Int GL_obj::SHADING_LANGUAGE_VERSION;

Int GL_obj::CURRENT_PROGRAM;

Int GL_obj::NEVER;

Int GL_obj::LESS;

Int GL_obj::EQUAL;

Int GL_obj::LEQUAL;

Int GL_obj::GREATER;

Int GL_obj::NOTEQUAL;

Int GL_obj::GEQUAL;

Int GL_obj::ALWAYS;

Int GL_obj::KEEP;

Int GL_obj::REPLACE;

Int GL_obj::INCR;

Int GL_obj::DECR;

Int GL_obj::INVERT;

Int GL_obj::INCR_WRAP;

Int GL_obj::DECR_WRAP;

Int GL_obj::VENDOR;

Int GL_obj::RENDERER;

Int GL_obj::VERSION;

Int GL_obj::NEAREST;

Int GL_obj::LINEAR;

Int GL_obj::NEAREST_MIPMAP_NEAREST;

Int GL_obj::LINEAR_MIPMAP_NEAREST;

Int GL_obj::NEAREST_MIPMAP_LINEAR;

Int GL_obj::LINEAR_MIPMAP_LINEAR;

Int GL_obj::TEXTURE_MAG_FILTER;

Int GL_obj::TEXTURE_MIN_FILTER;

Int GL_obj::TEXTURE_WRAP_S;

Int GL_obj::TEXTURE_WRAP_T;

Int GL_obj::TEXTURE_2D;

Int GL_obj::TEXTURE;

Int GL_obj::TEXTURE_CUBE_MAP;

Int GL_obj::TEXTURE_BINDING_CUBE_MAP;

Int GL_obj::TEXTURE_CUBE_MAP_POSITIVE_X;

Int GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_X;

Int GL_obj::TEXTURE_CUBE_MAP_POSITIVE_Y;

Int GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_Y;

Int GL_obj::TEXTURE_CUBE_MAP_POSITIVE_Z;

Int GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_Z;

Int GL_obj::MAX_CUBE_MAP_TEXTURE_SIZE;

Int GL_obj::TEXTURE0;

Int GL_obj::TEXTURE1;

Int GL_obj::TEXTURE2;

Int GL_obj::TEXTURE3;

Int GL_obj::TEXTURE4;

Int GL_obj::TEXTURE5;

Int GL_obj::TEXTURE6;

Int GL_obj::TEXTURE7;

Int GL_obj::TEXTURE8;

Int GL_obj::TEXTURE9;

Int GL_obj::TEXTURE10;

Int GL_obj::TEXTURE11;

Int GL_obj::TEXTURE12;

Int GL_obj::TEXTURE13;

Int GL_obj::TEXTURE14;

Int GL_obj::TEXTURE15;

Int GL_obj::TEXTURE16;

Int GL_obj::TEXTURE17;

Int GL_obj::TEXTURE18;

Int GL_obj::TEXTURE19;

Int GL_obj::TEXTURE20;

Int GL_obj::TEXTURE21;

Int GL_obj::TEXTURE22;

Int GL_obj::TEXTURE23;

Int GL_obj::TEXTURE24;

Int GL_obj::TEXTURE25;

Int GL_obj::TEXTURE26;

Int GL_obj::TEXTURE27;

Int GL_obj::TEXTURE28;

Int GL_obj::TEXTURE29;

Int GL_obj::TEXTURE30;

Int GL_obj::TEXTURE31;

Int GL_obj::ACTIVE_TEXTURE;

Int GL_obj::REPEAT;

Int GL_obj::CLAMP_TO_EDGE;

Int GL_obj::MIRRORED_REPEAT;

Int GL_obj::FLOAT_VEC2;

Int GL_obj::FLOAT_VEC3;

Int GL_obj::FLOAT_VEC4;

Int GL_obj::INT_VEC2;

Int GL_obj::INT_VEC3;

Int GL_obj::INT_VEC4;

Int GL_obj::BOOL;

Int GL_obj::BOOL_VEC2;

Int GL_obj::BOOL_VEC3;

Int GL_obj::BOOL_VEC4;

Int GL_obj::FLOAT_MAT2;

Int GL_obj::FLOAT_MAT3;

Int GL_obj::FLOAT_MAT4;

Int GL_obj::SAMPLER_2D;

Int GL_obj::SAMPLER_CUBE;

Int GL_obj::VERTEX_ATTRIB_ARRAY_ENABLED;

Int GL_obj::VERTEX_ATTRIB_ARRAY_SIZE;

Int GL_obj::VERTEX_ATTRIB_ARRAY_STRIDE;

Int GL_obj::VERTEX_ATTRIB_ARRAY_TYPE;

Int GL_obj::VERTEX_ATTRIB_ARRAY_NORMALIZED;

Int GL_obj::VERTEX_ATTRIB_ARRAY_POINTER;

Int GL_obj::VERTEX_ATTRIB_ARRAY_BUFFER_BINDING;

Int GL_obj::VERTEX_PROGRAM_POINT_SIZE;

Int GL_obj::POINT_SPRITE;

Int GL_obj::COMPILE_STATUS;

Int GL_obj::LOW_FLOAT;

Int GL_obj::MEDIUM_FLOAT;

Int GL_obj::HIGH_FLOAT;

Int GL_obj::LOW_INT;

Int GL_obj::MEDIUM_INT;

Int GL_obj::HIGH_INT;

Int GL_obj::FRAMEBUFFER;

Int GL_obj::RENDERBUFFER;

Int GL_obj::RGBA4;

Int GL_obj::RGB5_A1;

Int GL_obj::RGB565;

Int GL_obj::DEPTH_COMPONENT16;

Int GL_obj::STENCIL_INDEX;

Int GL_obj::STENCIL_INDEX8;

Int GL_obj::DEPTH_STENCIL;

Int GL_obj::RENDERBUFFER_WIDTH;

Int GL_obj::RENDERBUFFER_HEIGHT;

Int GL_obj::RENDERBUFFER_INTERNAL_FORMAT;

Int GL_obj::RENDERBUFFER_RED_SIZE;

Int GL_obj::RENDERBUFFER_GREEN_SIZE;

Int GL_obj::RENDERBUFFER_BLUE_SIZE;

Int GL_obj::RENDERBUFFER_ALPHA_SIZE;

Int GL_obj::RENDERBUFFER_DEPTH_SIZE;

Int GL_obj::RENDERBUFFER_STENCIL_SIZE;

Int GL_obj::FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE;

Int GL_obj::FRAMEBUFFER_ATTACHMENT_OBJECT_NAME;

Int GL_obj::FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL;

Int GL_obj::FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE;

Int GL_obj::COLOR_ATTACHMENT0;

Int GL_obj::DEPTH_ATTACHMENT;

Int GL_obj::STENCIL_ATTACHMENT;

Int GL_obj::DEPTH_STENCIL_ATTACHMENT;

Int GL_obj::NONE;

Int GL_obj::FRAMEBUFFER_COMPLETE;

Int GL_obj::FRAMEBUFFER_INCOMPLETE_ATTACHMENT;

Int GL_obj::FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT;

Int GL_obj::FRAMEBUFFER_INCOMPLETE_DIMENSIONS;

Int GL_obj::FRAMEBUFFER_UNSUPPORTED;

Int GL_obj::FRAMEBUFFER_BINDING;

Int GL_obj::RENDERBUFFER_BINDING;

Int GL_obj::MAX_RENDERBUFFER_SIZE;

Int GL_obj::INVALID_FRAMEBUFFER_OPERATION;

Int GL_obj::UNPACK_FLIP_Y_WEBGL;

Int GL_obj::UNPACK_PREMULTIPLY_ALPHA_WEBGL;

Int GL_obj::CONTEXT_LOST_WEBGL;

Int GL_obj::UNPACK_COLORSPACE_CONVERSION_WEBGL;

Int GL_obj::BROWSER_DEFAULT_WEBGL;

Int GL_obj::version;

 ::lime::graphics::opengl::GLProgram GL_obj::_hx___currentProgram;

void GL_obj::activeTexture(Int texture){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","activeTexture",0x4f66f561,"lime.graphics.opengl.GL.activeTexture","lime/graphics/opengl/GL.hx",402,0xa5aa2623)
            	HX_STACK_ARG(texture,"texture")
HXLINE( 402)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_active_texture(texture);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,activeTexture,(void))

void GL_obj::attachShader( ::lime::graphics::opengl::GLProgram program, ::lime::graphics::opengl::GLShader shader){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","attachShader",0xfe33c89e,"lime.graphics.opengl.GL.attachShader","lime/graphics/opengl/GL.hx",410,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
            	HX_STACK_ARG(shader,"shader")
HXLINE( 415)		program->attach(shader);
HXLINE( 416)		{
HXLINE( 416)			 ::Dynamic program1 = program->id;
HXDLIN( 416)			 ::Dynamic shader1 = shader->id;
HXDLIN( 416)			 ::hx::Object * _hx_tmp = hx::DynamicPtr(program1);
HXDLIN( 416)			::lime::graphics::opengl::GL_obj::cffi_lime_gl_attach_shader(_hx_tmp,hx::DynamicPtr(shader1));
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,attachShader,(void))

void GL_obj::bindAttribLocation( ::lime::graphics::opengl::GLProgram program,Int index,::String name){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","bindAttribLocation",0x0d863510,"lime.graphics.opengl.GL.bindAttribLocation","lime/graphics/opengl/GL.hx",430,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
            	HX_STACK_ARG(index,"index")
            	HX_STACK_ARG(name,"name")
HXLINE( 430)		 ::Dynamic program1 = program->id;
HXDLIN( 430)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_bind_attrib_location(hx::DynamicPtr(program1),index,name);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,bindAttribLocation,(void))

void GL_obj::bindBuffer(Int target, ::lime::graphics::opengl::GLBuffer buffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","bindBuffer",0xbeff2d71,"lime.graphics.opengl.GL.bindBuffer","lime/graphics/opengl/GL.hx",443,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(buffer,"buffer")
HXLINE( 443)		 ::Dynamic buffer1;
HXDLIN( 443)		Bool _hx_tmp = hx::IsNull( buffer );
HXDLIN( 443)		if (_hx_tmp) {
HXLINE( 443)			buffer1 = null();
            		}
            		else {
HXLINE( 443)			buffer1 = buffer->id;
            		}
HXDLIN( 443)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_bind_buffer(target,hx::DynamicPtr(buffer1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,bindBuffer,(void))

void GL_obj::bindFramebuffer(Int target, ::lime::graphics::opengl::GLFramebuffer framebuffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","bindFramebuffer",0x325b6adc,"lime.graphics.opengl.GL.bindFramebuffer","lime/graphics/opengl/GL.hx",456,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(framebuffer,"framebuffer")
HXLINE( 456)		 ::Dynamic framebuffer1;
HXDLIN( 456)		Bool _hx_tmp = hx::IsNull( framebuffer );
HXDLIN( 456)		if (_hx_tmp) {
HXLINE( 456)			framebuffer1 = null();
            		}
            		else {
HXLINE( 456)			framebuffer1 = framebuffer->id;
            		}
HXDLIN( 456)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_bind_framebuffer(target,hx::DynamicPtr(framebuffer1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,bindFramebuffer,(void))

void GL_obj::bindRenderbuffer(Int target, ::lime::graphics::opengl::GLRenderbuffer renderbuffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","bindRenderbuffer",0x642e2807,"lime.graphics.opengl.GL.bindRenderbuffer","lime/graphics/opengl/GL.hx",469,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(renderbuffer,"renderbuffer")
HXLINE( 469)		 ::Dynamic renderbuffer1;
HXDLIN( 469)		Bool _hx_tmp = hx::IsNull( renderbuffer );
HXDLIN( 469)		if (_hx_tmp) {
HXLINE( 469)			renderbuffer1 = null();
            		}
            		else {
HXLINE( 469)			renderbuffer1 = renderbuffer->id;
            		}
HXDLIN( 469)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_bind_renderbuffer(target,hx::DynamicPtr(renderbuffer1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,bindRenderbuffer,(void))

void GL_obj::bindTexture(Int target, ::lime::graphics::opengl::GLTexture texture){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","bindTexture",0x4d98bb4a,"lime.graphics.opengl.GL.bindTexture","lime/graphics/opengl/GL.hx",482,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(texture,"texture")
HXLINE( 482)		 ::Dynamic texture1;
HXDLIN( 482)		Bool _hx_tmp = hx::IsNull( texture );
HXDLIN( 482)		if (_hx_tmp) {
HXLINE( 482)			texture1 = null();
            		}
            		else {
HXLINE( 482)			texture1 = texture->id;
            		}
HXDLIN( 482)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_bind_texture(target,hx::DynamicPtr(texture1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,bindTexture,(void))

void GL_obj::blendColor(Float red,Float green,Float blue,Float alpha){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","blendColor",0xa8f4ce26,"lime.graphics.opengl.GL.blendColor","lime/graphics/opengl/GL.hx",495,0xa5aa2623)
            	HX_STACK_ARG(red,"red")
            	HX_STACK_ARG(green,"green")
            	HX_STACK_ARG(blue,"blue")
            	HX_STACK_ARG(alpha,"alpha")
HXLINE( 495)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_blend_color(red,green,blue,alpha);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,blendColor,(void))

void GL_obj::blendEquation(Int mode){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","blendEquation",0xfb6a7aa9,"lime.graphics.opengl.GL.blendEquation","lime/graphics/opengl/GL.hx",508,0xa5aa2623)
            	HX_STACK_ARG(mode,"mode")
HXLINE( 508)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_blend_equation(mode);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,blendEquation,(void))

void GL_obj::blendEquationSeparate(Int modeRGB,Int modeAlpha){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","blendEquationSeparate",0xa3a0a72c,"lime.graphics.opengl.GL.blendEquationSeparate","lime/graphics/opengl/GL.hx",521,0xa5aa2623)
            	HX_STACK_ARG(modeRGB,"modeRGB")
            	HX_STACK_ARG(modeAlpha,"modeAlpha")
HXLINE( 521)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_blend_equation_separate(modeRGB,modeAlpha);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,blendEquationSeparate,(void))

void GL_obj::blendFunc(Int sfactor,Int dfactor){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","blendFunc",0x1c0397e1,"lime.graphics.opengl.GL.blendFunc","lime/graphics/opengl/GL.hx",534,0xa5aa2623)
            	HX_STACK_ARG(sfactor,"sfactor")
            	HX_STACK_ARG(dfactor,"dfactor")
HXLINE( 534)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_blend_func(sfactor,dfactor);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,blendFunc,(void))

void GL_obj::blendFuncSeparate(Int srcRGB,Int dstRGB,Int srcAlpha,Int dstAlpha){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","blendFuncSeparate",0x02edbc64,"lime.graphics.opengl.GL.blendFuncSeparate","lime/graphics/opengl/GL.hx",547,0xa5aa2623)
            	HX_STACK_ARG(srcRGB,"srcRGB")
            	HX_STACK_ARG(dstRGB,"dstRGB")
            	HX_STACK_ARG(srcAlpha,"srcAlpha")
            	HX_STACK_ARG(dstAlpha,"dstAlpha")
HXLINE( 547)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_blend_func_separate(srcRGB,dstRGB,srcAlpha,dstAlpha);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,blendFuncSeparate,(void))

void GL_obj::bufferData(Int target, ::lime::utils::ArrayBufferView data,Int usage){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","bufferData",0x59b45a1e,"lime.graphics.opengl.GL.bufferData","lime/graphics/opengl/GL.hx",560,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(data,"data")
            	HX_STACK_ARG(usage,"usage")
HXLINE( 560)		Int byteOffset = data->byteOffset;
HXDLIN( 560)		Int size = data->byteLength;
HXDLIN( 560)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_buffer_data(target,hx::DynamicPtr(data->buffer),byteOffset,size,usage);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,bufferData,(void))

void GL_obj::bufferSubData(Int target,Int offset, ::lime::utils::ArrayBufferView data){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","bufferSubData",0x3ea1d856,"lime.graphics.opengl.GL.bufferSubData","lime/graphics/opengl/GL.hx",575,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(offset,"offset")
            	HX_STACK_ARG(data,"data")
HXLINE( 575)		Int byteOffset = data->byteOffset;
HXDLIN( 575)		Int size = data->byteLength;
HXDLIN( 575)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_buffer_sub_data(target,offset,hx::DynamicPtr(data->buffer),byteOffset,size);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,bufferSubData,(void))

Int GL_obj::checkFramebufferStatus(Int target){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","checkFramebufferStatus",0xbf9caeeb,"lime.graphics.opengl.GL.checkFramebufferStatus","lime/graphics/opengl/GL.hx",590,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
HXLINE( 590)		return ( (Int)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_check_framebuffer_status(target)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,checkFramebufferStatus,return )

void GL_obj::clear(Int mask){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","clear",0x6a08c739,"lime.graphics.opengl.GL.clear","lime/graphics/opengl/GL.hx",605,0xa5aa2623)
            	HX_STACK_ARG(mask,"mask")
HXLINE( 605)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_clear(mask);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,clear,(void))

void GL_obj::clearColor(Float red,Float green,Float blue,Float alpha){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","clearColor",0xe5a74b6a,"lime.graphics.opengl.GL.clearColor","lime/graphics/opengl/GL.hx",618,0xa5aa2623)
            	HX_STACK_ARG(red,"red")
            	HX_STACK_ARG(green,"green")
            	HX_STACK_ARG(blue,"blue")
            	HX_STACK_ARG(alpha,"alpha")
HXLINE( 618)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_clear_color(red,green,blue,alpha);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,clearColor,(void))

void GL_obj::clearDepth(Float depth){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","clearDepth",0x7274cb0a,"lime.graphics.opengl.GL.clearDepth","lime/graphics/opengl/GL.hx",631,0xa5aa2623)
            	HX_STACK_ARG(depth,"depth")
HXLINE( 631)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_clear_depth(depth);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,clearDepth,(void))

void GL_obj::clearStencil(Int s){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","clearStencil",0xa73e67c3,"lime.graphics.opengl.GL.clearStencil","lime/graphics/opengl/GL.hx",644,0xa5aa2623)
            	HX_STACK_ARG(s,"s")
HXLINE( 644)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_clear_stencil(s);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,clearStencil,(void))

void GL_obj::colorMask(Bool red,Bool green,Bool blue,Bool alpha){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","colorMask",0x382b679b,"lime.graphics.opengl.GL.colorMask","lime/graphics/opengl/GL.hx",657,0xa5aa2623)
            	HX_STACK_ARG(red,"red")
            	HX_STACK_ARG(green,"green")
            	HX_STACK_ARG(blue,"blue")
            	HX_STACK_ARG(alpha,"alpha")
HXLINE( 657)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_color_mask(red,green,blue,alpha);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,colorMask,(void))

void GL_obj::compileShader( ::lime::graphics::opengl::GLShader shader){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","compileShader",0xd36f52a4,"lime.graphics.opengl.GL.compileShader","lime/graphics/opengl/GL.hx",670,0xa5aa2623)
            	HX_STACK_ARG(shader,"shader")
HXLINE( 670)		 ::Dynamic shader1 = shader->id;
HXDLIN( 670)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_compile_shader(hx::DynamicPtr(shader1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,compileShader,(void))

void GL_obj::compressedTexImage2D(Int target,Int level,Int internalformat,Int width,Int height,Int border, ::lime::utils::ArrayBufferView data){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","compressedTexImage2D",0xbf53c47b,"lime.graphics.opengl.GL.compressedTexImage2D","lime/graphics/opengl/GL.hx",678,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(level,"level")
            	HX_STACK_ARG(internalformat,"internalformat")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
            	HX_STACK_ARG(border,"border")
            	HX_STACK_ARG(data,"data")
HXLINE( 683)		HX_VAR(  ::haxe::io::Bytes,buffer);
HXDLIN( 683)		Bool _hx_tmp = hx::IsNull( data );
HXDLIN( 683)		if (_hx_tmp) {
HXLINE( 683)			buffer = null();
            		}
            		else {
HXLINE( 683)			buffer = data->buffer;
            		}
HXLINE( 684)		{
HXLINE( 684)			Int byteOffset;
HXDLIN( 684)			Bool _hx_tmp1 = hx::IsNull( data );
HXDLIN( 684)			if (_hx_tmp1) {
HXLINE( 684)				byteOffset = (int)0;
            			}
            			else {
HXLINE( 684)				byteOffset = data->byteOffset;
            			}
HXDLIN( 684)			::lime::graphics::opengl::GL_obj::cffi_lime_gl_compressed_tex_image_2d(target,level,internalformat,width,height,border,hx::DynamicPtr(buffer),byteOffset);
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC7(GL_obj,compressedTexImage2D,(void))

void GL_obj::compressedTexSubImage2D(Int target,Int level,Int xoffset,Int yoffset,Int width,Int height,Int format, ::lime::utils::ArrayBufferView data){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","compressedTexSubImage2D",0x03ede67f,"lime.graphics.opengl.GL.compressedTexSubImage2D","lime/graphics/opengl/GL.hx",694,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(level,"level")
            	HX_STACK_ARG(xoffset,"xoffset")
            	HX_STACK_ARG(yoffset,"yoffset")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
            	HX_STACK_ARG(format,"format")
            	HX_STACK_ARG(data,"data")
HXLINE( 699)		HX_VAR(  ::haxe::io::Bytes,buffer);
HXDLIN( 699)		Bool _hx_tmp = hx::IsNull( data );
HXDLIN( 699)		if (_hx_tmp) {
HXLINE( 699)			buffer = null();
            		}
            		else {
HXLINE( 699)			buffer = data->buffer;
            		}
HXLINE( 700)		{
HXLINE( 700)			Int byteOffset;
HXDLIN( 700)			Bool _hx_tmp1 = hx::IsNull( data );
HXDLIN( 700)			if (_hx_tmp1) {
HXLINE( 700)				byteOffset = (int)0;
            			}
            			else {
HXLINE( 700)				byteOffset = data->byteOffset;
            			}
HXDLIN( 700)			::lime::graphics::opengl::GL_obj::cffi_lime_gl_compressed_tex_sub_image_2d(target,level,xoffset,yoffset,width,height,format,hx::DynamicPtr(buffer),byteOffset);
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(GL_obj,compressedTexSubImage2D,(void))

void GL_obj::copyTexImage2D(Int target,Int level,Int internalformat,Int x,Int y,Int width,Int height,Int border){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","copyTexImage2D",0x90ff65af,"lime.graphics.opengl.GL.copyTexImage2D","lime/graphics/opengl/GL.hx",715,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(level,"level")
            	HX_STACK_ARG(internalformat,"internalformat")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
            	HX_STACK_ARG(border,"border")
HXLINE( 715)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_copy_tex_image_2d(target,level,internalformat,x,y,width,height,border);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(GL_obj,copyTexImage2D,(void))

void GL_obj::copyTexSubImage2D(Int target,Int level,Int xoffset,Int yoffset,Int x,Int y,Int width,Int height){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","copyTexSubImage2D",0xdcdbfdcb,"lime.graphics.opengl.GL.copyTexSubImage2D","lime/graphics/opengl/GL.hx",728,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(level,"level")
            	HX_STACK_ARG(xoffset,"xoffset")
            	HX_STACK_ARG(yoffset,"yoffset")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
HXLINE( 728)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_copy_tex_sub_image_2d(target,level,xoffset,yoffset,x,y,width,height);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(GL_obj,copyTexSubImage2D,(void))

 ::lime::graphics::opengl::GLBuffer GL_obj::createBuffer(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","createBuffer",0x3ea5f4f0,"lime.graphics.opengl.GL.createBuffer","lime/graphics/opengl/GL.hx",741,0xa5aa2623)
HXLINE( 741)		Int _hx_tmp = ::lime::graphics::opengl::GL_obj::get_version();
HXDLIN( 741)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_create_buffer()) );
HXDLIN( 741)		 ::Dynamic _hx_tmp1 = Dynamic(hx::DynamicPtr(inVal));
HXDLIN( 741)		return  ::lime::graphics::opengl::GLBuffer_obj::__new(_hx_tmp,_hx_tmp1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,createBuffer,return )

 ::lime::graphics::opengl::GLFramebuffer GL_obj::createFramebuffer(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","createFramebuffer",0x051616fd,"lime.graphics.opengl.GL.createFramebuffer","lime/graphics/opengl/GL.hx",757,0xa5aa2623)
HXLINE( 757)		Int _hx_tmp = ::lime::graphics::opengl::GL_obj::get_version();
HXDLIN( 757)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_create_framebuffer()) );
HXDLIN( 757)		 ::Dynamic _hx_tmp1 = Dynamic(hx::DynamicPtr(inVal));
HXDLIN( 757)		return  ::lime::graphics::opengl::GLFramebuffer_obj::__new(_hx_tmp,_hx_tmp1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,createFramebuffer,return )

 ::lime::graphics::opengl::GLProgram GL_obj::createProgram(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","createProgram",0xd4f90494,"lime.graphics.opengl.GL.createProgram","lime/graphics/opengl/GL.hx",773,0xa5aa2623)
HXLINE( 773)		Int _hx_tmp = ::lime::graphics::opengl::GL_obj::get_version();
HXDLIN( 773)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_create_program()) );
HXDLIN( 773)		 ::Dynamic _hx_tmp1 = Dynamic(hx::DynamicPtr(inVal));
HXDLIN( 773)		return  ::lime::graphics::opengl::GLProgram_obj::__new(_hx_tmp,_hx_tmp1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,createProgram,return )

 ::lime::graphics::opengl::GLRenderbuffer GL_obj::createRenderbuffer(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","createRenderbuffer",0xf4ca18c6,"lime.graphics.opengl.GL.createRenderbuffer","lime/graphics/opengl/GL.hx",788,0xa5aa2623)
HXLINE( 788)		Int _hx_tmp = ::lime::graphics::opengl::GL_obj::get_version();
HXDLIN( 788)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_create_render_buffer()) );
HXDLIN( 788)		 ::Dynamic _hx_tmp1 = Dynamic(hx::DynamicPtr(inVal));
HXDLIN( 788)		return  ::lime::graphics::opengl::GLRenderbuffer_obj::__new(_hx_tmp,_hx_tmp1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,createRenderbuffer,return )

 ::lime::graphics::opengl::GLShader GL_obj::createShader(Int type){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","createShader",0x8b31f715,"lime.graphics.opengl.GL.createShader","lime/graphics/opengl/GL.hx",804,0xa5aa2623)
            	HX_STACK_ARG(type,"type")
HXLINE( 804)		Int _hx_tmp = ::lime::graphics::opengl::GL_obj::get_version();
HXDLIN( 804)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_create_shader(type)) );
HXDLIN( 804)		 ::Dynamic _hx_tmp1 = Dynamic(hx::DynamicPtr(inVal));
HXDLIN( 804)		return  ::lime::graphics::opengl::GLShader_obj::__new(_hx_tmp,_hx_tmp1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,createShader,return )

 ::lime::graphics::opengl::GLTexture GL_obj::createTexture(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","createTexture",0x7fe082eb,"lime.graphics.opengl.GL.createTexture","lime/graphics/opengl/GL.hx",819,0xa5aa2623)
HXLINE( 819)		Int _hx_tmp = ::lime::graphics::opengl::GL_obj::get_version();
HXDLIN( 819)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_create_texture()) );
HXDLIN( 819)		 ::Dynamic _hx_tmp1 = Dynamic(hx::DynamicPtr(inVal));
HXDLIN( 819)		return  ::lime::graphics::opengl::GLTexture_obj::__new(_hx_tmp,_hx_tmp1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,createTexture,return )

void GL_obj::cullFace(Int mode){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","cullFace",0xb5786543,"lime.graphics.opengl.GL.cullFace","lime/graphics/opengl/GL.hx",835,0xa5aa2623)
            	HX_STACK_ARG(mode,"mode")
HXLINE( 835)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_cull_face(mode);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,cullFace,(void))

void GL_obj::deleteBuffer( ::lime::graphics::opengl::GLBuffer buffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","deleteBuffer",0x82e8db5f,"lime.graphics.opengl.GL.deleteBuffer","lime/graphics/opengl/GL.hx",843,0xa5aa2623)
            	HX_STACK_ARG(buffer,"buffer")
HXLINE( 848)		{
HXLINE( 848)			 ::Dynamic buffer1 = buffer->id;
HXDLIN( 848)			::lime::graphics::opengl::GL_obj::cffi_lime_gl_delete_buffer(hx::DynamicPtr(buffer1));
            		}
HXLINE( 849)		buffer->invalidate();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,deleteBuffer,(void))

void GL_obj::deleteFramebuffer( ::lime::graphics::opengl::GLFramebuffer framebuffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","deleteFramebuffer",0x882e7e2e,"lime.graphics.opengl.GL.deleteFramebuffer","lime/graphics/opengl/GL.hx",858,0xa5aa2623)
            	HX_STACK_ARG(framebuffer,"framebuffer")
HXLINE( 863)		{
HXLINE( 863)			 ::Dynamic framebuffer1 = framebuffer->id;
HXDLIN( 863)			::lime::graphics::opengl::GL_obj::cffi_lime_gl_delete_framebuffer(hx::DynamicPtr(framebuffer1));
            		}
HXLINE( 864)		framebuffer->invalidate();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,deleteFramebuffer,(void))

void GL_obj::deleteProgram( ::lime::graphics::opengl::GLProgram program){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","deleteProgram",0x4b3fbf45,"lime.graphics.opengl.GL.deleteProgram","lime/graphics/opengl/GL.hx",873,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
HXLINE( 878)		{
HXLINE( 878)			 ::Dynamic program1 = program->id;
HXDLIN( 878)			::lime::graphics::opengl::GL_obj::cffi_lime_gl_delete_program(hx::DynamicPtr(program1));
            		}
HXLINE( 879)		program->invalidate();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,deleteProgram,(void))

void GL_obj::deleteRenderbuffer( ::lime::graphics::opengl::GLRenderbuffer renderbuffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","deleteRenderbuffer",0x270bfc75,"lime.graphics.opengl.GL.deleteRenderbuffer","lime/graphics/opengl/GL.hx",888,0xa5aa2623)
            	HX_STACK_ARG(renderbuffer,"renderbuffer")
HXLINE( 893)		{
HXLINE( 893)			 ::Dynamic renderbuffer1 = renderbuffer->id;
HXDLIN( 893)			::lime::graphics::opengl::GL_obj::cffi_lime_gl_delete_render_buffer(hx::DynamicPtr(renderbuffer1));
            		}
HXLINE( 894)		renderbuffer->invalidate();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,deleteRenderbuffer,(void))

void GL_obj::deleteShader( ::lime::graphics::opengl::GLShader shader){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","deleteShader",0xcf74dd84,"lime.graphics.opengl.GL.deleteShader","lime/graphics/opengl/GL.hx",903,0xa5aa2623)
            	HX_STACK_ARG(shader,"shader")
HXLINE( 908)		{
HXLINE( 908)			 ::Dynamic shader1 = shader->id;
HXDLIN( 908)			::lime::graphics::opengl::GL_obj::cffi_lime_gl_delete_shader(hx::DynamicPtr(shader1));
            		}
HXLINE( 909)		shader->invalidate();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,deleteShader,(void))

void GL_obj::deleteTexture( ::lime::graphics::opengl::GLTexture texture){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","deleteTexture",0xf6273d9c,"lime.graphics.opengl.GL.deleteTexture","lime/graphics/opengl/GL.hx",918,0xa5aa2623)
            	HX_STACK_ARG(texture,"texture")
HXLINE( 923)		{
HXLINE( 923)			 ::Dynamic texture1 = texture->id;
HXDLIN( 923)			::lime::graphics::opengl::GL_obj::cffi_lime_gl_delete_texture(hx::DynamicPtr(texture1));
            		}
HXLINE( 924)		texture->invalidate();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,deleteTexture,(void))

void GL_obj::depthFunc(Int func){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","depthFunc",0xaeafe193,"lime.graphics.opengl.GL.depthFunc","lime/graphics/opengl/GL.hx",938,0xa5aa2623)
            	HX_STACK_ARG(func,"func")
HXLINE( 938)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_depth_func(func);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,depthFunc,(void))

void GL_obj::depthMask(Bool flag){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","depthMask",0xb341373b,"lime.graphics.opengl.GL.depthMask","lime/graphics/opengl/GL.hx",951,0xa5aa2623)
            	HX_STACK_ARG(flag,"flag")
HXLINE( 951)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_depth_mask(flag);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,depthMask,(void))

void GL_obj::depthRange(Float zNear,Float zFar){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","depthRange",0x06cc348e,"lime.graphics.opengl.GL.depthRange","lime/graphics/opengl/GL.hx",964,0xa5aa2623)
            	HX_STACK_ARG(zNear,"zNear")
            	HX_STACK_ARG(zFar,"zFar")
HXLINE( 964)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_depth_range(zNear,zFar);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,depthRange,(void))

void GL_obj::detachShader( ::lime::graphics::opengl::GLProgram program, ::lime::graphics::opengl::GLShader shader){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","detachShader",0x3669c8ac,"lime.graphics.opengl.GL.detachShader","lime/graphics/opengl/GL.hx",977,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
            	HX_STACK_ARG(shader,"shader")
HXLINE( 977)		 ::Dynamic program1 = program->id;
HXDLIN( 977)		 ::Dynamic shader1 = shader->id;
HXDLIN( 977)		 ::hx::Object * _hx_tmp = hx::DynamicPtr(program1);
HXDLIN( 977)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_detach_shader(_hx_tmp,hx::DynamicPtr(shader1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,detachShader,(void))

void GL_obj::disable(Int cap){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","disable",0x99478294,"lime.graphics.opengl.GL.disable","lime/graphics/opengl/GL.hx",990,0xa5aa2623)
            	HX_STACK_ARG(cap,"cap")
HXLINE( 990)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_disable(cap);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,disable,(void))

void GL_obj::disableVertexAttribArray(Int index){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","disableVertexAttribArray",0x3f2ecfb7,"lime.graphics.opengl.GL.disableVertexAttribArray","lime/graphics/opengl/GL.hx",1003,0xa5aa2623)
            	HX_STACK_ARG(index,"index")
HXLINE(1003)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_disable_vertex_attrib_array(index);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,disableVertexAttribArray,(void))

void GL_obj::drawArrays(Int mode,Int first,Int count){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","drawArrays",0xbff48eb2,"lime.graphics.opengl.GL.drawArrays","lime/graphics/opengl/GL.hx",1016,0xa5aa2623)
            	HX_STACK_ARG(mode,"mode")
            	HX_STACK_ARG(first,"first")
            	HX_STACK_ARG(count,"count")
HXLINE(1016)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_draw_arrays(mode,first,count);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,drawArrays,(void))

void GL_obj::drawElements(Int mode,Int count,Int type,Int offset){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","drawElements",0xa573ba2f,"lime.graphics.opengl.GL.drawElements","lime/graphics/opengl/GL.hx",1029,0xa5aa2623)
            	HX_STACK_ARG(mode,"mode")
            	HX_STACK_ARG(count,"count")
            	HX_STACK_ARG(type,"type")
            	HX_STACK_ARG(offset,"offset")
HXLINE(1029)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_draw_elements(mode,count,type,offset);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,drawElements,(void))

void GL_obj::enable(Int cap){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","enable",0x4e854f57,"lime.graphics.opengl.GL.enable","lime/graphics/opengl/GL.hx",1042,0xa5aa2623)
            	HX_STACK_ARG(cap,"cap")
HXLINE(1042)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_enable(cap);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,enable,(void))

void GL_obj::enableVertexAttribArray(Int index){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","enableVertexAttribArray",0x79ca7794,"lime.graphics.opengl.GL.enableVertexAttribArray","lime/graphics/opengl/GL.hx",1055,0xa5aa2623)
            	HX_STACK_ARG(index,"index")
HXLINE(1055)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_enable_vertex_attrib_array(index);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,enableVertexAttribArray,(void))

void GL_obj::finish(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","finish",0xdc7ce127,"lime.graphics.opengl.GL.finish","lime/graphics/opengl/GL.hx",1068,0xa5aa2623)
HXLINE(1068)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_finish();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,finish,(void))

void GL_obj::flush(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","flush",0x2448b870,"lime.graphics.opengl.GL.flush","lime/graphics/opengl/GL.hx",1081,0xa5aa2623)
HXLINE(1081)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_flush();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,flush,(void))

void GL_obj::framebufferRenderbuffer(Int target,Int attachment,Int renderbuffertarget, ::lime::graphics::opengl::GLRenderbuffer renderbuffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","framebufferRenderbuffer",0x04230e0f,"lime.graphics.opengl.GL.framebufferRenderbuffer","lime/graphics/opengl/GL.hx",1094,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(attachment,"attachment")
            	HX_STACK_ARG(renderbuffertarget,"renderbuffertarget")
            	HX_STACK_ARG(renderbuffer,"renderbuffer")
HXLINE(1094)		 ::Dynamic renderbuffer1 = renderbuffer->id;
HXDLIN(1094)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_framebuffer_renderbuffer(target,attachment,renderbuffertarget,hx::DynamicPtr(renderbuffer1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,framebufferRenderbuffer,(void))

void GL_obj::framebufferTexture2D(Int target,Int attachment,Int textarget, ::lime::graphics::opengl::GLTexture texture,Int level){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","framebufferTexture2D",0xbf185294,"lime.graphics.opengl.GL.framebufferTexture2D","lime/graphics/opengl/GL.hx",1107,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(attachment,"attachment")
            	HX_STACK_ARG(textarget,"textarget")
            	HX_STACK_ARG(texture,"texture")
            	HX_STACK_ARG(level,"level")
HXLINE(1107)		 ::Dynamic texture1 = texture->id;
HXDLIN(1107)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_framebuffer_texture2D(target,attachment,textarget,hx::DynamicPtr(texture1),level);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(GL_obj,framebufferTexture2D,(void))

void GL_obj::frontFace(Int mode){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","frontFace",0x95289d92,"lime.graphics.opengl.GL.frontFace","lime/graphics/opengl/GL.hx",1120,0xa5aa2623)
            	HX_STACK_ARG(mode,"mode")
HXLINE(1120)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_front_face(mode);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,frontFace,(void))

void GL_obj::generateMipmap(Int target){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","generateMipmap",0x07966b71,"lime.graphics.opengl.GL.generateMipmap","lime/graphics/opengl/GL.hx",1133,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
HXLINE(1133)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_generate_mipmap(target);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,generateMipmap,(void))

 ::Dynamic GL_obj::getActiveAttrib( ::lime::graphics::opengl::GLProgram program,Int index){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getActiveAttrib",0xae1c3012,"lime.graphics.opengl.GL.getActiveAttrib","lime/graphics/opengl/GL.hx",1141,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
            	HX_STACK_ARG(index,"index")
HXLINE(1146)		 ::Dynamic program1 = program->id;
HXDLIN(1146)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_active_attrib(hx::DynamicPtr(program1),index)) );
HXDLIN(1146)		HX_VARI(  ::Dynamic,result) = Dynamic(hx::DynamicPtr(inVal));
HXLINE(1147)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getActiveAttrib,return )

 ::Dynamic GL_obj::getActiveUniform( ::lime::graphics::opengl::GLProgram program,Int index){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getActiveUniform",0x26c4a76c,"lime.graphics.opengl.GL.getActiveUniform","lime/graphics/opengl/GL.hx",1158,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
            	HX_STACK_ARG(index,"index")
HXLINE(1163)		 ::Dynamic program1 = program->id;
HXDLIN(1163)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_active_uniform(hx::DynamicPtr(program1),index)) );
HXDLIN(1163)		HX_VARI(  ::Dynamic,result) = Dynamic(hx::DynamicPtr(inVal));
HXLINE(1164)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getActiveUniform,return )

::Array< ::Dynamic> GL_obj::getAttachedShaders( ::lime::graphics::opengl::GLProgram program){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getAttachedShaders",0x82ccbd88,"lime.graphics.opengl.GL.getAttachedShaders","lime/graphics/opengl/GL.hx",1180,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
HXLINE(1180)		return program->getShaders();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,getAttachedShaders,return )

Int GL_obj::getAttribLocation( ::lime::graphics::opengl::GLProgram program,::String name){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getAttribLocation",0x953d4281,"lime.graphics.opengl.GL.getAttribLocation","lime/graphics/opengl/GL.hx",1195,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
            	HX_STACK_ARG(name,"name")
HXLINE(1195)		 ::Dynamic program1 = program->id;
HXDLIN(1195)		return ( (Int)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_attrib_location(hx::DynamicPtr(program1),name)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getAttribLocation,return )

Int GL_obj::getBufferParameter(Int target,Int pname){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getBufferParameter",0x0409e767,"lime.graphics.opengl.GL.getBufferParameter","lime/graphics/opengl/GL.hx",1210,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(pname,"pname")
HXLINE(1210)		return ( (Int)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_buffer_parameter(target,pname)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getBufferParameter,return )

 ::Dynamic GL_obj::getContextAttributes(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getContextAttributes",0x48d7c604,"lime.graphics.opengl.GL.getContextAttributes","lime/graphics/opengl/GL.hx",1221,0xa5aa2623)
HXLINE(1226)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_context_attributes()) );
HXDLIN(1226)		HX_VARI(  ::Dynamic,base) = Dynamic(hx::DynamicPtr(inVal));
HXLINE(1227)		base->__SetField(HX_("premultipliedAlpha",28,8e,5c,1a),false,hx::paccDynamic);
HXLINE(1228)		base->__SetField(HX_("preserveDrawingBuffer",92,bb,1e,4b),false,hx::paccDynamic);
HXLINE(1229)		return base;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,getContextAttributes,return )

Int GL_obj::getError(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getError",0xdc475926,"lime.graphics.opengl.GL.getError","lime/graphics/opengl/GL.hx",1248,0xa5aa2623)
HXLINE(1248)		return ( (Int)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_error()) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,getError,return )

 ::Dynamic GL_obj::getExtension(::String name){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getExtension",0x402327dd,"lime.graphics.opengl.GL.getExtension","lime/graphics/opengl/GL.hx",1263,0xa5aa2623)
            	HX_STACK_ARG(name,"name")
HXLINE(1263)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_extension(name)) );
HXDLIN(1263)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,getExtension,return )

Int GL_obj::getFramebufferAttachmentParameter(Int target,Int attachment,Int pname){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getFramebufferAttachmentParameter",0x4289ff3b,"lime.graphics.opengl.GL.getFramebufferAttachmentParameter","lime/graphics/opengl/GL.hx",1276,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(attachment,"attachment")
            	HX_STACK_ARG(pname,"pname")
HXLINE(1276)		return ( (Int)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_framebuffer_attachment_parameter(target,attachment,pname)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,getFramebufferAttachmentParameter,return )

 ::Dynamic GL_obj::getParameter(Int pname){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getParameter",0xa3c2ca07,"lime.graphics.opengl.GL.getParameter","lime/graphics/opengl/GL.hx",1292,0xa5aa2623)
            	HX_STACK_ARG(pname,"pname")
HXLINE(1292)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_parameter(pname)) );
HXDLIN(1292)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,getParameter,return )

::String GL_obj::getProgramInfoLog( ::lime::graphics::opengl::GLProgram program){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getProgramInfoLog",0x06201974,"lime.graphics.opengl.GL.getProgramInfoLog","lime/graphics/opengl/GL.hx",1307,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
HXLINE(1307)		 ::Dynamic program1 = program->id;
HXDLIN(1307)		return ( (::String)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_program_info_log(hx::DynamicPtr(program1))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,getProgramInfoLog,return )

Int GL_obj::getProgramParameter( ::lime::graphics::opengl::GLProgram program,Int pname){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getProgramParameter",0x12242de7,"lime.graphics.opengl.GL.getProgramParameter","lime/graphics/opengl/GL.hx",1322,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
            	HX_STACK_ARG(pname,"pname")
HXLINE(1322)		 ::Dynamic program1 = program->id;
HXDLIN(1322)		return ( (Int)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_program_parameter(hx::DynamicPtr(program1),pname)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getProgramParameter,return )

Int GL_obj::getRenderbufferParameter(Int target,Int pname){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getRenderbufferParameter",0x31922751,"lime.graphics.opengl.GL.getRenderbufferParameter","lime/graphics/opengl/GL.hx",1338,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(pname,"pname")
HXLINE(1338)		return ( (Int)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_render_buffer_parameter(target,pname)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getRenderbufferParameter,return )

::String GL_obj::getShaderInfoLog( ::lime::graphics::opengl::GLShader shader){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getShaderInfoLog",0x433f2f6f,"lime.graphics.opengl.GL.getShaderInfoLog","lime/graphics/opengl/GL.hx",1354,0xa5aa2623)
            	HX_STACK_ARG(shader,"shader")
HXLINE(1354)		 ::Dynamic shader1 = shader->id;
HXDLIN(1354)		return ( (::String)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_shader_info_log(hx::DynamicPtr(shader1))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,getShaderInfoLog,return )

Int GL_obj::getShaderParameter( ::lime::graphics::opengl::GLShader shader,Int pname){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getShaderParameter",0x25b0f8a2,"lime.graphics.opengl.GL.getShaderParameter","lime/graphics/opengl/GL.hx",1369,0xa5aa2623)
            	HX_STACK_ARG(shader,"shader")
            	HX_STACK_ARG(pname,"pname")
HXLINE(1369)		 ::Dynamic shader1 = shader->id;
HXDLIN(1369)		return ( (Int)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_shader_parameter(hx::DynamicPtr(shader1),pname)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getShaderParameter,return )

 ::Dynamic GL_obj::getShaderPrecisionFormat(Int shadertype,Int precisiontype){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getShaderPrecisionFormat",0xc38a1ece,"lime.graphics.opengl.GL.getShaderPrecisionFormat","lime/graphics/opengl/GL.hx",1380,0xa5aa2623)
            	HX_STACK_ARG(shadertype,"shadertype")
            	HX_STACK_ARG(precisiontype,"precisiontype")
HXLINE(1385)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_shader_precision_format(shadertype,precisiontype)) );
HXDLIN(1385)		HX_VARI(  ::Dynamic,result) = Dynamic(hx::DynamicPtr(inVal));
HXLINE(1386)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getShaderPrecisionFormat,return )

::String GL_obj::getShaderSource( ::lime::graphics::opengl::GLShader shader){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getShaderSource",0x0ffe4842,"lime.graphics.opengl.GL.getShaderSource","lime/graphics/opengl/GL.hx",1402,0xa5aa2623)
            	HX_STACK_ARG(shader,"shader")
HXLINE(1402)		 ::Dynamic shader1 = shader->id;
HXDLIN(1402)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_shader_source(hx::DynamicPtr(shader1))) );
HXDLIN(1402)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,getShaderSource,return )

::Array< ::String > GL_obj::getSupportedExtensions(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getSupportedExtensions",0x569501c0,"lime.graphics.opengl.GL.getSupportedExtensions","lime/graphics/opengl/GL.hx",1412,0xa5aa2623)
HXLINE(1417)		HX_VARI( ::Array< ::String >,result) = ::Array_obj< ::String >::__new();
HXLINE(1418)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_supported_extensions(hx::DynamicPtr(result));
HXLINE(1419)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,getSupportedExtensions,return )

Int GL_obj::getTexParameter(Int target,Int pname){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getTexParameter",0x1dcd3d24,"lime.graphics.opengl.GL.getTexParameter","lime/graphics/opengl/GL.hx",1434,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(pname,"pname")
HXLINE(1434)		return ( (Int)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_tex_parameter(target,pname)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getTexParameter,return )

 ::Dynamic GL_obj::getUniform( ::lime::graphics::opengl::GLProgram program,Int location){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getUniform",0xcb066212,"lime.graphics.opengl.GL.getUniform","lime/graphics/opengl/GL.hx",1450,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
            	HX_STACK_ARG(location,"location")
HXLINE(1450)		 ::Dynamic program1 = program->id;
HXDLIN(1450)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_uniform(hx::DynamicPtr(program1),location)) );
HXDLIN(1450)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getUniform,return )

Int GL_obj::getUniformLocation( ::lime::graphics::opengl::GLProgram program,::String name){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getUniformLocation",0x3f29ee67,"lime.graphics.opengl.GL.getUniformLocation","lime/graphics/opengl/GL.hx",1466,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
            	HX_STACK_ARG(name,"name")
HXLINE(1466)		 ::Dynamic program1 = program->id;
HXDLIN(1466)		return ( (Int)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_uniform_location(hx::DynamicPtr(program1),name)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getUniformLocation,return )

Int GL_obj::getVertexAttrib(Int index,Int pname){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getVertexAttrib",0xee15d430,"lime.graphics.opengl.GL.getVertexAttrib","lime/graphics/opengl/GL.hx",1481,0xa5aa2623)
            	HX_STACK_ARG(index,"index")
            	HX_STACK_ARG(pname,"pname")
HXLINE(1481)		return ( (Int)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_vertex_attrib(index,pname)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getVertexAttrib,return )

Int GL_obj::getVertexAttribOffset(Int index,Int pname){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","getVertexAttribOffset",0x530723e3,"lime.graphics.opengl.GL.getVertexAttribOffset","lime/graphics/opengl/GL.hx",1496,0xa5aa2623)
            	HX_STACK_ARG(index,"index")
            	HX_STACK_ARG(pname,"pname")
HXLINE(1496)		return ( (Int)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_vertex_attrib_offset(index,pname)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,getVertexAttribOffset,return )

void GL_obj::hint(Int target,Int mode){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","hint",0x86a4415b,"lime.graphics.opengl.GL.hint","lime/graphics/opengl/GL.hx",1511,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(mode,"mode")
HXLINE(1511)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_hint(target,mode);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,hint,(void))

Bool GL_obj::isBuffer( ::lime::graphics::opengl::GLBuffer buffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","isBuffer",0x3244d65e,"lime.graphics.opengl.GL.isBuffer","lime/graphics/opengl/GL.hx",1522,0xa5aa2623)
            	HX_STACK_ARG(buffer,"buffer")
HXLINE(1522)		Bool _hx_tmp;
HXDLIN(1522)		Bool _hx_tmp1 = hx::IsNotNull( buffer );
HXDLIN(1522)		if (_hx_tmp1) {
HXLINE(1522)			 ::Dynamic a = buffer->id;
HXDLIN(1522)			Float _hx_tmp2 = ::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(a);
HXDLIN(1522)			_hx_tmp = (_hx_tmp2 > (int)0);
            		}
            		else {
HXLINE(1522)			_hx_tmp = false;
            		}
HXDLIN(1522)		if (_hx_tmp) {
HXLINE(1522)			 ::Dynamic buffer1 = buffer->id;
HXDLIN(1522)			return ( (Bool)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_is_buffer(hx::DynamicPtr(buffer1))) );
            		}
            		else {
HXLINE(1522)			return false;
            		}
HXDLIN(1522)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,isBuffer,return )

Bool GL_obj::isContextLost(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","isContextLost",0x269cc155,"lime.graphics.opengl.GL.isContextLost","lime/graphics/opengl/GL.hx",1535,0xa5aa2623)
HXLINE(1535)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,isContextLost,return )

Bool GL_obj::isEnabled(Int cap){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","isEnabled",0x96971d63,"lime.graphics.opengl.GL.isEnabled","lime/graphics/opengl/GL.hx",1546,0xa5aa2623)
            	HX_STACK_ARG(cap,"cap")
HXLINE(1546)		return ( (Bool)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_is_enabled(cap)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,isEnabled,return )

Bool GL_obj::isFramebuffer( ::lime::graphics::opengl::GLFramebuffer framebuffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","isFramebuffer",0x7c2946cf,"lime.graphics.opengl.GL.isFramebuffer","lime/graphics/opengl/GL.hx",1559,0xa5aa2623)
            	HX_STACK_ARG(framebuffer,"framebuffer")
HXLINE(1559)		Bool _hx_tmp;
HXDLIN(1559)		Bool _hx_tmp1 = hx::IsNotNull( framebuffer );
HXDLIN(1559)		if (_hx_tmp1) {
HXLINE(1559)			 ::Dynamic a = framebuffer->id;
HXDLIN(1559)			Float _hx_tmp2 = ::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(a);
HXDLIN(1559)			_hx_tmp = (_hx_tmp2 > (int)0);
            		}
            		else {
HXLINE(1559)			_hx_tmp = false;
            		}
HXDLIN(1559)		if (_hx_tmp) {
HXLINE(1559)			 ::Dynamic framebuffer1 = framebuffer->id;
HXDLIN(1559)			return ( (Bool)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_is_framebuffer(hx::DynamicPtr(framebuffer1))) );
            		}
            		else {
HXLINE(1559)			return false;
            		}
HXDLIN(1559)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,isFramebuffer,return )

Bool GL_obj::isProgram( ::lime::graphics::opengl::GLProgram program){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","isProgram",0x0c5f6366,"lime.graphics.opengl.GL.isProgram","lime/graphics/opengl/GL.hx",1572,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
HXLINE(1572)		Bool _hx_tmp;
HXDLIN(1572)		Bool _hx_tmp1 = hx::IsNotNull( program );
HXDLIN(1572)		if (_hx_tmp1) {
HXLINE(1572)			 ::Dynamic a = program->id;
HXDLIN(1572)			Float _hx_tmp2 = ::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(a);
HXDLIN(1572)			_hx_tmp = (_hx_tmp2 > (int)0);
            		}
            		else {
HXLINE(1572)			_hx_tmp = false;
            		}
HXDLIN(1572)		if (_hx_tmp) {
HXLINE(1572)			 ::Dynamic program1 = program->id;
HXDLIN(1572)			return ( (Bool)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_is_program(hx::DynamicPtr(program1))) );
            		}
            		else {
HXLINE(1572)			return false;
            		}
HXDLIN(1572)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,isProgram,return )

Bool GL_obj::isRenderbuffer( ::lime::graphics::opengl::GLRenderbuffer renderbuffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","isRenderbuffer",0xae80c0b4,"lime.graphics.opengl.GL.isRenderbuffer","lime/graphics/opengl/GL.hx",1585,0xa5aa2623)
            	HX_STACK_ARG(renderbuffer,"renderbuffer")
HXLINE(1585)		Bool _hx_tmp;
HXDLIN(1585)		Bool _hx_tmp1 = hx::IsNotNull( renderbuffer );
HXDLIN(1585)		if (_hx_tmp1) {
HXLINE(1585)			 ::Dynamic a = renderbuffer->id;
HXDLIN(1585)			Float _hx_tmp2 = ::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(a);
HXDLIN(1585)			_hx_tmp = (_hx_tmp2 > (int)0);
            		}
            		else {
HXLINE(1585)			_hx_tmp = false;
            		}
HXDLIN(1585)		if (_hx_tmp) {
HXLINE(1585)			 ::Dynamic renderbuffer1 = renderbuffer->id;
HXDLIN(1585)			return ( (Bool)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_is_renderbuffer(hx::DynamicPtr(renderbuffer1))) );
            		}
            		else {
HXLINE(1585)			return false;
            		}
HXDLIN(1585)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,isRenderbuffer,return )

Bool GL_obj::isShader( ::lime::graphics::opengl::GLShader shader){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","isShader",0x7ed0d883,"lime.graphics.opengl.GL.isShader","lime/graphics/opengl/GL.hx",1598,0xa5aa2623)
            	HX_STACK_ARG(shader,"shader")
HXLINE(1598)		Bool _hx_tmp;
HXDLIN(1598)		Bool _hx_tmp1 = hx::IsNotNull( shader );
HXDLIN(1598)		if (_hx_tmp1) {
HXLINE(1598)			 ::Dynamic a = shader->id;
HXDLIN(1598)			Float _hx_tmp2 = ::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(a);
HXDLIN(1598)			_hx_tmp = (_hx_tmp2 > (int)0);
            		}
            		else {
HXLINE(1598)			_hx_tmp = false;
            		}
HXDLIN(1598)		if (_hx_tmp) {
HXLINE(1598)			 ::Dynamic shader1 = shader->id;
HXDLIN(1598)			return ( (Bool)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_is_shader(hx::DynamicPtr(shader1))) );
            		}
            		else {
HXLINE(1598)			return false;
            		}
HXDLIN(1598)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,isShader,return )

Bool GL_obj::isTexture( ::lime::graphics::opengl::GLTexture texture){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","isTexture",0xb746e1bd,"lime.graphics.opengl.GL.isTexture","lime/graphics/opengl/GL.hx",1611,0xa5aa2623)
            	HX_STACK_ARG(texture,"texture")
HXLINE(1611)		Bool _hx_tmp;
HXDLIN(1611)		Bool _hx_tmp1 = hx::IsNotNull( texture );
HXDLIN(1611)		if (_hx_tmp1) {
HXLINE(1611)			 ::Dynamic a = texture->id;
HXDLIN(1611)			Float _hx_tmp2 = ::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(a);
HXDLIN(1611)			_hx_tmp = (_hx_tmp2 > (int)0);
            		}
            		else {
HXLINE(1611)			_hx_tmp = false;
            		}
HXDLIN(1611)		if (_hx_tmp) {
HXLINE(1611)			 ::Dynamic texture1 = texture->id;
HXDLIN(1611)			return ( (Bool)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_is_texture(hx::DynamicPtr(texture1))) );
            		}
            		else {
HXLINE(1611)			return false;
            		}
HXDLIN(1611)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,isTexture,return )

void GL_obj::lineWidth(Float width){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lineWidth",0x25c5551e,"lime.graphics.opengl.GL.lineWidth","lime/graphics/opengl/GL.hx",1624,0xa5aa2623)
            	HX_STACK_ARG(width,"width")
HXLINE(1624)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_line_width(width);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lineWidth,(void))

void GL_obj::linkProgram( ::lime::graphics::opengl::GLProgram program){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","linkProgram",0x3bc28c56,"lime.graphics.opengl.GL.linkProgram","lime/graphics/opengl/GL.hx",1635,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
HXLINE(1635)		 ::Dynamic program1 = program->id;
HXDLIN(1635)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_link_program(hx::DynamicPtr(program1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,linkProgram,(void))

void GL_obj::pixelStorei(Int pname,Int param){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","pixelStorei",0x330f133a,"lime.graphics.opengl.GL.pixelStorei","lime/graphics/opengl/GL.hx",1646,0xa5aa2623)
            	HX_STACK_ARG(pname,"pname")
            	HX_STACK_ARG(param,"param")
HXLINE(1646)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_pixel_storei(pname,param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,pixelStorei,(void))

void GL_obj::polygonOffset(Float factor,Float units){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","polygonOffset",0x5f0a0759,"lime.graphics.opengl.GL.polygonOffset","lime/graphics/opengl/GL.hx",1657,0xa5aa2623)
            	HX_STACK_ARG(factor,"factor")
            	HX_STACK_ARG(units,"units")
HXLINE(1657)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_polygon_offset(factor,units);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,polygonOffset,(void))

void GL_obj::readPixels(Int x,Int y,Int width,Int height,Int format,Int type, ::lime::utils::ArrayBufferView pixels){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","readPixels",0x4c666df7,"lime.graphics.opengl.GL.readPixels","lime/graphics/opengl/GL.hx",1663,0xa5aa2623)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
            	HX_STACK_ARG(format,"format")
            	HX_STACK_ARG(type,"type")
            	HX_STACK_ARG(pixels,"pixels")
HXLINE(1668)		HX_VAR(  ::haxe::io::Bytes,buffer);
HXDLIN(1668)		Bool _hx_tmp = hx::IsNull( pixels );
HXDLIN(1668)		if (_hx_tmp) {
HXLINE(1668)			buffer = null();
            		}
            		else {
HXLINE(1668)			buffer = pixels->buffer;
            		}
HXLINE(1669)		{
HXLINE(1669)			Int byteOffset;
HXDLIN(1669)			Bool _hx_tmp1 = hx::IsNull( pixels );
HXDLIN(1669)			if (_hx_tmp1) {
HXLINE(1669)				byteOffset = (int)0;
            			}
            			else {
HXLINE(1669)				byteOffset = pixels->byteOffset;
            			}
HXDLIN(1669)			::lime::graphics::opengl::GL_obj::cffi_lime_gl_read_pixels(x,y,width,height,format,type,hx::DynamicPtr(buffer),byteOffset);
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC7(GL_obj,readPixels,(void))

void GL_obj::renderbufferStorage(Int target,Int internalformat,Int width,Int height){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","renderbufferStorage",0x02f80bb1,"lime.graphics.opengl.GL.renderbufferStorage","lime/graphics/opengl/GL.hx",1682,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(internalformat,"internalformat")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
HXLINE(1682)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_renderbuffer_storage(target,internalformat,width,height);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,renderbufferStorage,(void))

void GL_obj::sampleCoverage(Float value,Bool invert){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","sampleCoverage",0xe809fd06,"lime.graphics.opengl.GL.sampleCoverage","lime/graphics/opengl/GL.hx",1693,0xa5aa2623)
            	HX_STACK_ARG(value,"value")
            	HX_STACK_ARG(invert,"invert")
HXLINE(1693)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_sample_coverage(value,invert);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,sampleCoverage,(void))

void GL_obj::scissor(Int x,Int y,Int width,Int height){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","scissor",0xecd640c8,"lime.graphics.opengl.GL.scissor","lime/graphics/opengl/GL.hx",1704,0xa5aa2623)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
HXLINE(1704)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_scissor(x,y,width,height);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,scissor,(void))

void GL_obj::shaderSource( ::lime::graphics::opengl::GLShader shader,::String source){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","shaderSource",0xedd645b4,"lime.graphics.opengl.GL.shaderSource","lime/graphics/opengl/GL.hx",1715,0xa5aa2623)
            	HX_STACK_ARG(shader,"shader")
            	HX_STACK_ARG(source,"source")
HXLINE(1715)		 ::Dynamic shader1 = shader->id;
HXDLIN(1715)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_shader_source(hx::DynamicPtr(shader1),source);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,shaderSource,(void))

void GL_obj::stencilFunc(Int func,Int ref,Int mask){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","stencilFunc",0xf305620c,"lime.graphics.opengl.GL.stencilFunc","lime/graphics/opengl/GL.hx",1726,0xa5aa2623)
            	HX_STACK_ARG(func,"func")
            	HX_STACK_ARG(ref,"ref")
            	HX_STACK_ARG(mask,"mask")
HXLINE(1726)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_stencil_func(func,ref,mask);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,stencilFunc,(void))

void GL_obj::stencilFuncSeparate(Int face,Int func,Int ref,Int mask){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","stencilFuncSeparate",0x2e56298f,"lime.graphics.opengl.GL.stencilFuncSeparate","lime/graphics/opengl/GL.hx",1737,0xa5aa2623)
            	HX_STACK_ARG(face,"face")
            	HX_STACK_ARG(func,"func")
            	HX_STACK_ARG(ref,"ref")
            	HX_STACK_ARG(mask,"mask")
HXLINE(1737)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_stencil_func_separate(face,func,ref,mask);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,stencilFuncSeparate,(void))

void GL_obj::stencilMask(Int mask){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","stencilMask",0xf796b7b4,"lime.graphics.opengl.GL.stencilMask","lime/graphics/opengl/GL.hx",1748,0xa5aa2623)
            	HX_STACK_ARG(mask,"mask")
HXLINE(1748)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_stencil_mask(mask);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,stencilMask,(void))

void GL_obj::stencilMaskSeparate(Int face,Int mask){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","stencilMaskSeparate",0x42316737,"lime.graphics.opengl.GL.stencilMaskSeparate","lime/graphics/opengl/GL.hx",1759,0xa5aa2623)
            	HX_STACK_ARG(face,"face")
            	HX_STACK_ARG(mask,"mask")
HXLINE(1759)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_stencil_mask_separate(face,mask);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,stencilMaskSeparate,(void))

void GL_obj::stencilOp(Int fail,Int zfail,Int zpass){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","stencilOp",0x6b5415e9,"lime.graphics.opengl.GL.stencilOp","lime/graphics/opengl/GL.hx",1770,0xa5aa2623)
            	HX_STACK_ARG(fail,"fail")
            	HX_STACK_ARG(zfail,"zfail")
            	HX_STACK_ARG(zpass,"zpass")
HXLINE(1770)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_stencil_op(fail,zfail,zpass);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,stencilOp,(void))

void GL_obj::stencilOpSeparate(Int face,Int fail,Int zfail,Int zpass){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","stencilOpSeparate",0x8b77826c,"lime.graphics.opengl.GL.stencilOpSeparate","lime/graphics/opengl/GL.hx",1781,0xa5aa2623)
            	HX_STACK_ARG(face,"face")
            	HX_STACK_ARG(fail,"fail")
            	HX_STACK_ARG(zfail,"zfail")
            	HX_STACK_ARG(zpass,"zpass")
HXLINE(1781)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_stencil_op_separate(face,fail,zfail,zpass);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,stencilOpSeparate,(void))

void GL_obj::texImage2D(Int target,Int level,Int internalformat,Int width,Int height,Int border,Int format,Int type, ::lime::utils::ArrayBufferView pixels){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","texImage2D",0x7fa8179a,"lime.graphics.opengl.GL.texImage2D","lime/graphics/opengl/GL.hx",1787,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(level,"level")
            	HX_STACK_ARG(internalformat,"internalformat")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
            	HX_STACK_ARG(border,"border")
            	HX_STACK_ARG(format,"format")
            	HX_STACK_ARG(type,"type")
            	HX_STACK_ARG(pixels,"pixels")
HXLINE(1792)		HX_VAR(  ::haxe::io::Bytes,buffer);
HXDLIN(1792)		Bool _hx_tmp = hx::IsNull( pixels );
HXDLIN(1792)		if (_hx_tmp) {
HXLINE(1792)			buffer = null();
            		}
            		else {
HXLINE(1792)			buffer = pixels->buffer;
            		}
HXLINE(1793)		{
HXLINE(1793)			Int byteOffset;
HXDLIN(1793)			Bool _hx_tmp1 = hx::IsNull( pixels );
HXDLIN(1793)			if (_hx_tmp1) {
HXLINE(1793)				byteOffset = (int)0;
            			}
            			else {
HXLINE(1793)				byteOffset = pixels->byteOffset;
            			}
HXDLIN(1793)			::lime::graphics::opengl::GL_obj::cffi_lime_gl_tex_image_2d(target,level,internalformat,width,height,border,format,type,hx::DynamicPtr(buffer),byteOffset);
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC9(GL_obj,texImage2D,(void))

void GL_obj::texParameterf(Int target,Int pname,Float param){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","texParameterf",0x34ee0910,"lime.graphics.opengl.GL.texParameterf","lime/graphics/opengl/GL.hx",1806,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(pname,"pname")
            	HX_STACK_ARG(param,"param")
HXLINE(1806)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_tex_parameterf(target,pname,param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,texParameterf,(void))

void GL_obj::texParameteri(Int target,Int pname,Int param){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","texParameteri",0x34ee0913,"lime.graphics.opengl.GL.texParameteri","lime/graphics/opengl/GL.hx",1817,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(pname,"pname")
            	HX_STACK_ARG(param,"param")
HXLINE(1817)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_tex_parameteri(target,pname,param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,texParameteri,(void))

void GL_obj::texSubImage2D(Int target,Int level,Int xoffset,Int yoffset,Int width,Int height,Int format,Int type, ::lime::utils::ArrayBufferView pixels){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","texSubImage2D",0x214d10c0,"lime.graphics.opengl.GL.texSubImage2D","lime/graphics/opengl/GL.hx",1823,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(level,"level")
            	HX_STACK_ARG(xoffset,"xoffset")
            	HX_STACK_ARG(yoffset,"yoffset")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
            	HX_STACK_ARG(format,"format")
            	HX_STACK_ARG(type,"type")
            	HX_STACK_ARG(pixels,"pixels")
HXLINE(1828)		HX_VAR(  ::haxe::io::Bytes,buffer);
HXDLIN(1828)		Bool _hx_tmp = hx::IsNull( pixels );
HXDLIN(1828)		if (_hx_tmp) {
HXLINE(1828)			buffer = null();
            		}
            		else {
HXLINE(1828)			buffer = pixels->buffer;
            		}
HXLINE(1829)		{
HXLINE(1829)			Int byteOffset;
HXDLIN(1829)			Bool _hx_tmp1 = hx::IsNull( pixels );
HXDLIN(1829)			if (_hx_tmp1) {
HXLINE(1829)				byteOffset = (int)0;
            			}
            			else {
HXLINE(1829)				byteOffset = pixels->byteOffset;
            			}
HXDLIN(1829)			::lime::graphics::opengl::GL_obj::cffi_lime_gl_tex_sub_image_2d(target,level,xoffset,yoffset,width,height,format,type,hx::DynamicPtr(buffer),byteOffset);
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC9(GL_obj,texSubImage2D,(void))

void GL_obj::uniform1f(Int location,Float x){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform1f",0x1c45bcf5,"lime.graphics.opengl.GL.uniform1f","lime/graphics/opengl/GL.hx",1842,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(x,"x")
HXLINE(1842)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform1f(location,x);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform1f,(void))

void GL_obj::uniform1fv(Int location, ::lime::utils::ArrayBufferView x){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform1fv",0xa0bf99e1,"lime.graphics.opengl.GL.uniform1fv","lime/graphics/opengl/GL.hx",1853,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(x,"x")
HXLINE(1853)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform1fv(location,hx::DynamicPtr(x->buffer));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform1fv,(void))

void GL_obj::uniform1i(Int location,Int x){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform1i",0x1c45bcf8,"lime.graphics.opengl.GL.uniform1i","lime/graphics/opengl/GL.hx",1866,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(x,"x")
HXLINE(1866)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform1i(location,x);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform1i,(void))

void GL_obj::uniform1iv(Int location, ::lime::utils::ArrayBufferView v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform1iv",0xa0bf9c7e,"lime.graphics.opengl.GL.uniform1iv","lime/graphics/opengl/GL.hx",1877,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(v,"v")
HXLINE(1877)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform1iv(location,hx::DynamicPtr(v->buffer));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform1iv,(void))

void GL_obj::uniform2f(Int location,Float x,Float y){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform2f",0x1c45bdd4,"lime.graphics.opengl.GL.uniform2f","lime/graphics/opengl/GL.hx",1890,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
HXLINE(1890)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform2f(location,x,y);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,uniform2f,(void))

void GL_obj::uniform2fv(Int location, ::lime::utils::ArrayBufferView v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform2fv",0xa0c05c22,"lime.graphics.opengl.GL.uniform2fv","lime/graphics/opengl/GL.hx",1901,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(v,"v")
HXLINE(1901)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform2fv(location,hx::DynamicPtr(v->buffer));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform2fv,(void))

void GL_obj::uniform2i(Int location,Int x,Int y){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform2i",0x1c45bdd7,"lime.graphics.opengl.GL.uniform2i","lime/graphics/opengl/GL.hx",1914,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
HXLINE(1914)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform2i(location,x,y);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,uniform2i,(void))

void GL_obj::uniform2iv(Int location, ::lime::utils::ArrayBufferView v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform2iv",0xa0c05ebf,"lime.graphics.opengl.GL.uniform2iv","lime/graphics/opengl/GL.hx",1925,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(v,"v")
HXLINE(1925)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform2iv(location,hx::DynamicPtr(v->buffer));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform2iv,(void))

void GL_obj::uniform3f(Int location,Float x,Float y,Float z){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform3f",0x1c45beb3,"lime.graphics.opengl.GL.uniform3f","lime/graphics/opengl/GL.hx",1938,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(z,"z")
HXLINE(1938)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform3f(location,x,y,z);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,uniform3f,(void))

void GL_obj::uniform3fv(Int location, ::lime::utils::ArrayBufferView v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform3fv",0xa0c11e63,"lime.graphics.opengl.GL.uniform3fv","lime/graphics/opengl/GL.hx",1949,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(v,"v")
HXLINE(1949)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform3fv(location,hx::DynamicPtr(v->buffer));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform3fv,(void))

void GL_obj::uniform3i(Int location,Int x,Int y,Int z){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform3i",0x1c45beb6,"lime.graphics.opengl.GL.uniform3i","lime/graphics/opengl/GL.hx",1962,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(z,"z")
HXLINE(1962)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform3i(location,x,y,z);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,uniform3i,(void))

void GL_obj::uniform3iv(Int location, ::lime::utils::ArrayBufferView v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform3iv",0xa0c12100,"lime.graphics.opengl.GL.uniform3iv","lime/graphics/opengl/GL.hx",1973,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(v,"v")
HXLINE(1973)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform3iv(location,hx::DynamicPtr(v->buffer));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform3iv,(void))

void GL_obj::uniform4f(Int location,Float x,Float y,Float z,Float w){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform4f",0x1c45bf92,"lime.graphics.opengl.GL.uniform4f","lime/graphics/opengl/GL.hx",1986,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(z,"z")
            	HX_STACK_ARG(w,"w")
HXLINE(1986)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform4f(location,x,y,z,w);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(GL_obj,uniform4f,(void))

void GL_obj::uniform4fv(Int location, ::lime::utils::ArrayBufferView v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform4fv",0xa0c1e0a4,"lime.graphics.opengl.GL.uniform4fv","lime/graphics/opengl/GL.hx",1997,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(v,"v")
HXLINE(1997)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform4fv(location,hx::DynamicPtr(v->buffer));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform4fv,(void))

void GL_obj::uniform4i(Int location,Int x,Int y,Int z,Int w){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform4i",0x1c45bf95,"lime.graphics.opengl.GL.uniform4i","lime/graphics/opengl/GL.hx",2010,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(z,"z")
            	HX_STACK_ARG(w,"w")
HXLINE(2010)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform4i(location,x,y,z,w);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(GL_obj,uniform4i,(void))

void GL_obj::uniform4iv(Int location, ::lime::utils::ArrayBufferView v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniform4iv",0xa0c1e341,"lime.graphics.opengl.GL.uniform4iv","lime/graphics/opengl/GL.hx",2021,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(v,"v")
HXLINE(2021)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform4iv(location,hx::DynamicPtr(v->buffer));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,uniform4iv,(void))

void GL_obj::uniformMatrix2fv(Int location,Bool transpose, ::lime::utils::ArrayBufferView v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniformMatrix2fv",0x14cffc61,"lime.graphics.opengl.GL.uniformMatrix2fv","lime/graphics/opengl/GL.hx",2034,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(transpose,"transpose")
            	HX_STACK_ARG(v,"v")
HXLINE(2034)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform_matrix(location,transpose,hx::DynamicPtr(v->buffer),(int)2);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,uniformMatrix2fv,(void))

void GL_obj::uniformMatrix3fv(Int location,Bool transpose, ::lime::utils::ArrayBufferView v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniformMatrix3fv",0x14d0bea2,"lime.graphics.opengl.GL.uniformMatrix3fv","lime/graphics/opengl/GL.hx",2047,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(transpose,"transpose")
            	HX_STACK_ARG(v,"v")
HXLINE(2047)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform_matrix(location,transpose,hx::DynamicPtr(v->buffer),(int)3);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,uniformMatrix3fv,(void))

void GL_obj::uniformMatrix4fv(Int location,Bool transpose, ::lime::utils::ArrayBufferView v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","uniformMatrix4fv",0x14d180e3,"lime.graphics.opengl.GL.uniformMatrix4fv","lime/graphics/opengl/GL.hx",2060,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(transpose,"transpose")
            	HX_STACK_ARG(v,"v")
HXLINE(2060)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform_matrix(location,transpose,hx::DynamicPtr(v->buffer),(int)4);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,uniformMatrix4fv,(void))

void GL_obj::useProgram( ::lime::graphics::opengl::GLProgram program){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","useProgram",0xbced07d1,"lime.graphics.opengl.GL.useProgram","lime/graphics/opengl/GL.hx",2075,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
HXLINE(2077)		::lime::graphics::opengl::GL_obj::_hx___currentProgram = program;
HXLINE(2082)		{
HXLINE(2082)			 ::Dynamic program1;
HXDLIN(2082)			Bool _hx_tmp = hx::IsNull( program );
HXDLIN(2082)			if (_hx_tmp) {
HXLINE(2082)				program1 = null();
            			}
            			else {
HXLINE(2082)				program1 = program->id;
            			}
HXDLIN(2082)			::lime::graphics::opengl::GL_obj::cffi_lime_gl_use_program(hx::DynamicPtr(program1));
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,useProgram,(void))

void GL_obj::validateProgram( ::lime::graphics::opengl::GLProgram program){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","validateProgram",0x3a09253a,"lime.graphics.opengl.GL.validateProgram","lime/graphics/opengl/GL.hx",2093,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
HXLINE(2093)		 ::Dynamic program1 = program->id;
HXDLIN(2093)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_validate_program(hx::DynamicPtr(program1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,validateProgram,(void))

void GL_obj::vertexAttrib1f(Int indx,Float x){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","vertexAttrib1f",0x003f2937,"lime.graphics.opengl.GL.vertexAttrib1f","lime/graphics/opengl/GL.hx",2104,0xa5aa2623)
            	HX_STACK_ARG(indx,"indx")
            	HX_STACK_ARG(x,"x")
HXLINE(2104)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_vertex_attrib1f(indx,x);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,vertexAttrib1f,(void))

void GL_obj::vertexAttrib1fv(Int indx, ::lime::utils::ArrayBufferView values){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","vertexAttrib1fv",0x3704e75f,"lime.graphics.opengl.GL.vertexAttrib1fv","lime/graphics/opengl/GL.hx",2115,0xa5aa2623)
            	HX_STACK_ARG(indx,"indx")
            	HX_STACK_ARG(values,"values")
HXLINE(2115)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_vertex_attrib1fv(indx,hx::DynamicPtr(values->buffer));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,vertexAttrib1fv,(void))

void GL_obj::vertexAttrib2f(Int indx,Float x,Float y){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","vertexAttrib2f",0x003f2a16,"lime.graphics.opengl.GL.vertexAttrib2f","lime/graphics/opengl/GL.hx",2128,0xa5aa2623)
            	HX_STACK_ARG(indx,"indx")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
HXLINE(2128)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_vertex_attrib2f(indx,x,y);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,vertexAttrib2f,(void))

void GL_obj::vertexAttrib2fv(Int indx, ::lime::utils::ArrayBufferView values){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","vertexAttrib2fv",0x3705a9a0,"lime.graphics.opengl.GL.vertexAttrib2fv","lime/graphics/opengl/GL.hx",2139,0xa5aa2623)
            	HX_STACK_ARG(indx,"indx")
            	HX_STACK_ARG(values,"values")
HXLINE(2139)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_vertex_attrib2fv(indx,hx::DynamicPtr(values->buffer));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,vertexAttrib2fv,(void))

void GL_obj::vertexAttrib3f(Int indx,Float x,Float y,Float z){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","vertexAttrib3f",0x003f2af5,"lime.graphics.opengl.GL.vertexAttrib3f","lime/graphics/opengl/GL.hx",2152,0xa5aa2623)
            	HX_STACK_ARG(indx,"indx")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(z,"z")
HXLINE(2152)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_vertex_attrib3f(indx,x,y,z);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,vertexAttrib3f,(void))

void GL_obj::vertexAttrib3fv(Int indx, ::lime::utils::ArrayBufferView values){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","vertexAttrib3fv",0x37066be1,"lime.graphics.opengl.GL.vertexAttrib3fv","lime/graphics/opengl/GL.hx",2163,0xa5aa2623)
            	HX_STACK_ARG(indx,"indx")
            	HX_STACK_ARG(values,"values")
HXLINE(2163)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_vertex_attrib3fv(indx,hx::DynamicPtr(values->buffer));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,vertexAttrib3fv,(void))

void GL_obj::vertexAttrib4f(Int indx,Float x,Float y,Float z,Float w){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","vertexAttrib4f",0x003f2bd4,"lime.graphics.opengl.GL.vertexAttrib4f","lime/graphics/opengl/GL.hx",2176,0xa5aa2623)
            	HX_STACK_ARG(indx,"indx")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(z,"z")
            	HX_STACK_ARG(w,"w")
HXLINE(2176)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_vertex_attrib4f(indx,x,y,z,w);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(GL_obj,vertexAttrib4f,(void))

void GL_obj::vertexAttrib4fv(Int indx, ::lime::utils::ArrayBufferView values){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","vertexAttrib4fv",0x37072e22,"lime.graphics.opengl.GL.vertexAttrib4fv","lime/graphics/opengl/GL.hx",2187,0xa5aa2623)
            	HX_STACK_ARG(indx,"indx")
            	HX_STACK_ARG(values,"values")
HXLINE(2187)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_vertex_attrib4fv(indx,hx::DynamicPtr(values->buffer));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,vertexAttrib4fv,(void))

void GL_obj::vertexAttribPointer(Int indx,Int size,Int type,Bool normalized,Int stride,Int offset){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","vertexAttribPointer",0xbb3d6f3b,"lime.graphics.opengl.GL.vertexAttribPointer","lime/graphics/opengl/GL.hx",2200,0xa5aa2623)
            	HX_STACK_ARG(indx,"indx")
            	HX_STACK_ARG(size,"size")
            	HX_STACK_ARG(type,"type")
            	HX_STACK_ARG(normalized,"normalized")
            	HX_STACK_ARG(stride,"stride")
            	HX_STACK_ARG(offset,"offset")
HXLINE(2200)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_vertex_attrib_pointer(indx,size,type,normalized,stride,offset);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(GL_obj,vertexAttribPointer,(void))

void GL_obj::viewport(Int x,Int y,Int width,Int height){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","viewport",0xa5ebca3a,"lime.graphics.opengl.GL.viewport","lime/graphics/opengl/GL.hx",2211,0xa5aa2623)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
HXLINE(2211)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_viewport(x,y,width,height);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,viewport,(void))

Int GL_obj::get_version(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","get_version",0xb53325db,"lime.graphics.opengl.GL.get_version","lime/graphics/opengl/GL.hx",2217,0xa5aa2623)
HXLINE(2217)		return (int)2;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,get_version,return )

void GL_obj::lime_gl_active_texture(Int texture){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_active_texture",0x689f6826,"lime.graphics.opengl.GL.lime_gl_active_texture","lime/graphics/opengl/GL.hx",2221,0xa5aa2623)
            	HX_STACK_ARG(texture,"texture")
HXLINE(2221)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_active_texture(texture);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_active_texture,(void))

void GL_obj::lime_gl_attach_shader( ::Dynamic program, ::Dynamic shader){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_attach_shader",0x0241e61b,"lime.graphics.opengl.GL.lime_gl_attach_shader","lime/graphics/opengl/GL.hx",2222,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
            	HX_STACK_ARG(shader,"shader")
HXLINE(2222)		 ::hx::Object * _hx_tmp = hx::DynamicPtr(program);
HXDLIN(2222)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_attach_shader(_hx_tmp,hx::DynamicPtr(shader));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_attach_shader,(void))

void GL_obj::lime_gl_bind_attrib_location( ::Dynamic program,Int index,::String name){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_bind_attrib_location",0x7d67b04c,"lime.graphics.opengl.GL.lime_gl_bind_attrib_location","lime/graphics/opengl/GL.hx",2223,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
            	HX_STACK_ARG(index,"index")
            	HX_STACK_ARG(name,"name")
HXLINE(2223)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_bind_attrib_location(hx::DynamicPtr(program),index,name);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,lime_gl_bind_attrib_location,(void))

void GL_obj::lime_gl_bind_buffer(Int target, ::Dynamic buffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_bind_buffer",0x5e60c1fe,"lime.graphics.opengl.GL.lime_gl_bind_buffer","lime/graphics/opengl/GL.hx",2224,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(buffer,"buffer")
HXLINE(2224)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_bind_buffer(target,hx::DynamicPtr(buffer));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_bind_buffer,(void))

void GL_obj::lime_gl_bind_framebuffer(Int target, ::Dynamic framebuffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_bind_framebuffer",0x6513372f,"lime.graphics.opengl.GL.lime_gl_bind_framebuffer","lime/graphics/opengl/GL.hx",2225,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(framebuffer,"framebuffer")
HXLINE(2225)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_bind_framebuffer(target,hx::DynamicPtr(framebuffer));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_bind_framebuffer,(void))

void GL_obj::lime_gl_bind_renderbuffer(Int target, ::Dynamic renderbuffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_bind_renderbuffer",0x92492454,"lime.graphics.opengl.GL.lime_gl_bind_renderbuffer","lime/graphics/opengl/GL.hx",2226,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(renderbuffer,"renderbuffer")
HXLINE(2226)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_bind_renderbuffer(target,hx::DynamicPtr(renderbuffer));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_bind_renderbuffer,(void))

void GL_obj::lime_gl_bind_texture(Int target, ::Dynamic texture){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_bind_texture",0x2399221d,"lime.graphics.opengl.GL.lime_gl_bind_texture","lime/graphics/opengl/GL.hx",2227,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(texture,"texture")
HXLINE(2227)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_bind_texture(target,hx::DynamicPtr(texture));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_bind_texture,(void))

void GL_obj::lime_gl_blend_color(float red,float green,float blue,float alpha){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_blend_color",0xb6563b31,"lime.graphics.opengl.GL.lime_gl_blend_color","lime/graphics/opengl/GL.hx",2228,0xa5aa2623)
            	HX_STACK_ARG(red,"red")
            	HX_STACK_ARG(green,"green")
            	HX_STACK_ARG(blue,"blue")
            	HX_STACK_ARG(alpha,"alpha")
HXLINE(2228)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_blend_color(red,green,blue,alpha);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,lime_gl_blend_color,(void))

void GL_obj::lime_gl_blend_equation(Int mode){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_blend_equation",0xd430867e,"lime.graphics.opengl.GL.lime_gl_blend_equation","lime/graphics/opengl/GL.hx",2229,0xa5aa2623)
            	HX_STACK_ARG(mode,"mode")
HXLINE(2229)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_blend_equation(mode);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_blend_equation,(void))

void GL_obj::lime_gl_blend_equation_separate(Int modeRGB,Int modeAlpha){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_blend_equation_separate",0x13e7d084,"lime.graphics.opengl.GL.lime_gl_blend_equation_separate","lime/graphics/opengl/GL.hx",2230,0xa5aa2623)
            	HX_STACK_ARG(modeRGB,"modeRGB")
            	HX_STACK_ARG(modeAlpha,"modeAlpha")
HXLINE(2230)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_blend_equation_separate(modeRGB,modeAlpha);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_blend_equation_separate,(void))

void GL_obj::lime_gl_blend_func(Int sfactor,Int dfactor){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_blend_func",0xd857d536,"lime.graphics.opengl.GL.lime_gl_blend_func","lime/graphics/opengl/GL.hx",2231,0xa5aa2623)
            	HX_STACK_ARG(sfactor,"sfactor")
            	HX_STACK_ARG(dfactor,"dfactor")
HXLINE(2231)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_blend_func(sfactor,dfactor);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_blend_func,(void))

void GL_obj::lime_gl_blend_func_separate(Int srcRGB,Int dstRGB,Int srcAlpha,Int dstAlpha){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_blend_func_separate",0xb8eceacc,"lime.graphics.opengl.GL.lime_gl_blend_func_separate","lime/graphics/opengl/GL.hx",2232,0xa5aa2623)
            	HX_STACK_ARG(srcRGB,"srcRGB")
            	HX_STACK_ARG(dstRGB,"dstRGB")
            	HX_STACK_ARG(srcAlpha,"srcAlpha")
            	HX_STACK_ARG(dstAlpha,"dstAlpha")
HXLINE(2232)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_blend_func_separate(srcRGB,dstRGB,srcAlpha,dstAlpha);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,lime_gl_blend_func_separate,(void))

void GL_obj::lime_gl_buffer_data(Int target, ::Dynamic buffer,Int byteOffset,Int size,Int usage){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_buffer_data",0xefc79c85,"lime.graphics.opengl.GL.lime_gl_buffer_data","lime/graphics/opengl/GL.hx",2233,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(buffer,"buffer")
            	HX_STACK_ARG(byteOffset,"byteOffset")
            	HX_STACK_ARG(size,"size")
            	HX_STACK_ARG(usage,"usage")
HXLINE(2233)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_buffer_data(target,hx::DynamicPtr(buffer),byteOffset,size,usage);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(GL_obj,lime_gl_buffer_data,(void))

void GL_obj::lime_gl_buffer_sub_data(Int target,Int offset, ::Dynamic buffer,Int byteOffset,Int size){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_buffer_sub_data",0x78dc6864,"lime.graphics.opengl.GL.lime_gl_buffer_sub_data","lime/graphics/opengl/GL.hx",2234,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(offset,"offset")
            	HX_STACK_ARG(buffer,"buffer")
            	HX_STACK_ARG(byteOffset,"byteOffset")
            	HX_STACK_ARG(size,"size")
HXLINE(2234)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_buffer_sub_data(target,offset,hx::DynamicPtr(buffer),byteOffset,size);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(GL_obj,lime_gl_buffer_sub_data,(void))

Int GL_obj::lime_gl_check_framebuffer_status(Int target){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_check_framebuffer_status",0x17f38edf,"lime.graphics.opengl.GL.lime_gl_check_framebuffer_status","lime/graphics/opengl/GL.hx",2235,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
HXLINE(2235)		return ( (Int)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_check_framebuffer_status(target)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_check_framebuffer_status,return )

void GL_obj::lime_gl_clear(Int mask){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_clear",0x33bd7409,"lime.graphics.opengl.GL.lime_gl_clear","lime/graphics/opengl/GL.hx",2236,0xa5aa2623)
            	HX_STACK_ARG(mask,"mask")
HXLINE(2236)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_clear(mask);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_clear,(void))

void GL_obj::lime_gl_clear_color(float red,float green,float blue,float alpha){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_clear_color",0x95d1596d,"lime.graphics.opengl.GL.lime_gl_clear_color","lime/graphics/opengl/GL.hx",2237,0xa5aa2623)
            	HX_STACK_ARG(red,"red")
            	HX_STACK_ARG(green,"green")
            	HX_STACK_ARG(blue,"blue")
            	HX_STACK_ARG(alpha,"alpha")
HXLINE(2237)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_clear_color(red,green,blue,alpha);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,lime_gl_clear_color,(void))

void GL_obj::lime_gl_clear_depth(float depth){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_clear_depth",0x229ed90d,"lime.graphics.opengl.GL.lime_gl_clear_depth","lime/graphics/opengl/GL.hx",2238,0xa5aa2623)
            	HX_STACK_ARG(depth,"depth")
HXLINE(2238)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_clear_depth(depth);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_clear_depth,(void))

void GL_obj::lime_gl_clear_stencil(Int s){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_clear_stencil",0x408a3c86,"lime.graphics.opengl.GL.lime_gl_clear_stencil","lime/graphics/opengl/GL.hx",2239,0xa5aa2623)
            	HX_STACK_ARG(s,"s")
HXLINE(2239)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_clear_stencil(s);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_clear_stencil,(void))

void GL_obj::lime_gl_color_mask(Bool red,Bool green,Bool blue,Bool alpha){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_color_mask",0x68fd808c,"lime.graphics.opengl.GL.lime_gl_color_mask","lime/graphics/opengl/GL.hx",2240,0xa5aa2623)
            	HX_STACK_ARG(red,"red")
            	HX_STACK_ARG(green,"green")
            	HX_STACK_ARG(blue,"blue")
            	HX_STACK_ARG(alpha,"alpha")
HXLINE(2240)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_color_mask(red,green,blue,alpha);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,lime_gl_color_mask,(void))

void GL_obj::lime_gl_compile_shader( ::Dynamic shader){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_compile_shader",0x31905db5,"lime.graphics.opengl.GL.lime_gl_compile_shader","lime/graphics/opengl/GL.hx",2241,0xa5aa2623)
            	HX_STACK_ARG(shader,"shader")
HXLINE(2241)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_compile_shader(hx::DynamicPtr(shader));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_compile_shader,(void))

void GL_obj::lime_gl_compressed_tex_image_2d(Int target,Int level,Int internalformat,Int width,Int height,Int border, ::Dynamic buffer,Int byteOffset){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_compressed_tex_image_2d",0x320b2d68,"lime.graphics.opengl.GL.lime_gl_compressed_tex_image_2d","lime/graphics/opengl/GL.hx",2242,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(level,"level")
            	HX_STACK_ARG(internalformat,"internalformat")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
            	HX_STACK_ARG(border,"border")
            	HX_STACK_ARG(buffer,"buffer")
            	HX_STACK_ARG(byteOffset,"byteOffset")
HXLINE(2242)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_compressed_tex_image_2d(target,level,internalformat,width,height,border,hx::DynamicPtr(buffer),byteOffset);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(GL_obj,lime_gl_compressed_tex_image_2d,(void))

void GL_obj::lime_gl_compressed_tex_sub_image_2d(Int target,Int level,Int xoffset,Int yoffset,Int width,Int height,Int format, ::Dynamic buffer,Int byteOffset){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_compressed_tex_sub_image_2d",0x31799c47,"lime.graphics.opengl.GL.lime_gl_compressed_tex_sub_image_2d","lime/graphics/opengl/GL.hx",2243,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(level,"level")
            	HX_STACK_ARG(xoffset,"xoffset")
            	HX_STACK_ARG(yoffset,"yoffset")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
            	HX_STACK_ARG(format,"format")
            	HX_STACK_ARG(buffer,"buffer")
            	HX_STACK_ARG(byteOffset,"byteOffset")
HXLINE(2243)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_compressed_tex_sub_image_2d(target,level,xoffset,yoffset,width,height,format,hx::DynamicPtr(buffer),byteOffset);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC9(GL_obj,lime_gl_compressed_tex_sub_image_2d,(void))

void GL_obj::lime_gl_copy_tex_image_2d(Int target,Int level,Int internalformat,Int x,Int y,Int width,Int height,Int border){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_copy_tex_image_2d",0x6875c8b4,"lime.graphics.opengl.GL.lime_gl_copy_tex_image_2d","lime/graphics/opengl/GL.hx",2244,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(level,"level")
            	HX_STACK_ARG(internalformat,"internalformat")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
            	HX_STACK_ARG(border,"border")
HXLINE(2244)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_copy_tex_image_2d(target,level,internalformat,x,y,width,height,border);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(GL_obj,lime_gl_copy_tex_image_2d,(void))

void GL_obj::lime_gl_copy_tex_sub_image_2d(Int target,Int level,Int xoffset,Int yoffset,Int x,Int y,Int width,Int height){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_copy_tex_sub_image_2d",0xc341cd93,"lime.graphics.opengl.GL.lime_gl_copy_tex_sub_image_2d","lime/graphics/opengl/GL.hx",2245,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(level,"level")
            	HX_STACK_ARG(xoffset,"xoffset")
            	HX_STACK_ARG(yoffset,"yoffset")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
HXLINE(2245)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_copy_tex_sub_image_2d(target,level,xoffset,yoffset,x,y,width,height);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(GL_obj,lime_gl_copy_tex_sub_image_2d,(void))

 ::Dynamic GL_obj::lime_gl_create_buffer(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_create_buffer",0x87205d9f,"lime.graphics.opengl.GL.lime_gl_create_buffer","lime/graphics/opengl/GL.hx",2246,0xa5aa2623)
HXLINE(2246)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_create_buffer()) );
HXDLIN(2246)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,lime_gl_create_buffer,return )

 ::Dynamic GL_obj::lime_gl_create_framebuffer(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_create_framebuffer",0xd856d3ee,"lime.graphics.opengl.GL.lime_gl_create_framebuffer","lime/graphics/opengl/GL.hx",2247,0xa5aa2623)
HXLINE(2247)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_create_framebuffer()) );
HXDLIN(2247)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,lime_gl_create_framebuffer,return )

 ::Dynamic GL_obj::lime_gl_create_program(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_create_program",0xf79a3505,"lime.graphics.opengl.GL.lime_gl_create_program","lime/graphics/opengl/GL.hx",2248,0xa5aa2623)
HXLINE(2248)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_create_program()) );
HXDLIN(2248)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,lime_gl_create_program,return )

 ::Dynamic GL_obj::lime_gl_create_render_buffer(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_create_render_buffer",0x7c255b4a,"lime.graphics.opengl.GL.lime_gl_create_render_buffer","lime/graphics/opengl/GL.hx",2249,0xa5aa2623)
HXLINE(2249)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_create_render_buffer()) );
HXDLIN(2249)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,lime_gl_create_render_buffer,return )

 ::Dynamic GL_obj::lime_gl_create_shader(Int type){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_create_shader",0xd3ac5fc4,"lime.graphics.opengl.GL.lime_gl_create_shader","lime/graphics/opengl/GL.hx",2250,0xa5aa2623)
            	HX_STACK_ARG(type,"type")
HXLINE(2250)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_create_shader(type)) );
HXDLIN(2250)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_create_shader,return )

 ::Dynamic GL_obj::lime_gl_create_texture(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_create_texture",0xa281b35c,"lime.graphics.opengl.GL.lime_gl_create_texture","lime/graphics/opengl/GL.hx",2251,0xa5aa2623)
HXLINE(2251)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_create_texture()) );
HXDLIN(2251)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,lime_gl_create_texture,return )

void GL_obj::lime_gl_cull_face(Int mode){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_cull_face",0xdf049606,"lime.graphics.opengl.GL.lime_gl_cull_face","lime/graphics/opengl/GL.hx",2252,0xa5aa2623)
            	HX_STACK_ARG(mode,"mode")
HXLINE(2252)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_cull_face(mode);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_cull_face,(void))

void GL_obj::lime_gl_delete_buffer( ::Dynamic buffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_delete_buffer",0xfd671850,"lime.graphics.opengl.GL.lime_gl_delete_buffer","lime/graphics/opengl/GL.hx",2253,0xa5aa2623)
            	HX_STACK_ARG(buffer,"buffer")
HXLINE(2253)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_delete_buffer(hx::DynamicPtr(buffer));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_delete_buffer,(void))

void GL_obj::lime_gl_delete_framebuffer( ::Dynamic framebuffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_delete_framebuffer",0x0a98b79d,"lime.graphics.opengl.GL.lime_gl_delete_framebuffer","lime/graphics/opengl/GL.hx",2254,0xa5aa2623)
            	HX_STACK_ARG(framebuffer,"framebuffer")
HXLINE(2254)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_delete_framebuffer(hx::DynamicPtr(framebuffer));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_delete_framebuffer,(void))

void GL_obj::lime_gl_delete_program( ::Dynamic program){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_delete_program",0xff36d534,"lime.graphics.opengl.GL.lime_gl_delete_program","lime/graphics/opengl/GL.hx",2255,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
HXLINE(2255)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_delete_program(hx::DynamicPtr(program));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_delete_program,(void))

void GL_obj::lime_gl_delete_render_buffer( ::Dynamic renderbuffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_delete_render_buffer",0x2d6ac8b9,"lime.graphics.opengl.GL.lime_gl_delete_render_buffer","lime/graphics/opengl/GL.hx",2256,0xa5aa2623)
            	HX_STACK_ARG(renderbuffer,"renderbuffer")
HXLINE(2256)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_delete_render_buffer(hx::DynamicPtr(renderbuffer));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_delete_render_buffer,(void))

void GL_obj::lime_gl_delete_shader( ::Dynamic shader){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_delete_shader",0x49f31a75,"lime.graphics.opengl.GL.lime_gl_delete_shader","lime/graphics/opengl/GL.hx",2257,0xa5aa2623)
            	HX_STACK_ARG(shader,"shader")
HXLINE(2257)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_delete_shader(hx::DynamicPtr(shader));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_delete_shader,(void))

void GL_obj::lime_gl_delete_texture( ::Dynamic texture){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_delete_texture",0xaa1e538b,"lime.graphics.opengl.GL.lime_gl_delete_texture","lime/graphics/opengl/GL.hx",2258,0xa5aa2623)
            	HX_STACK_ARG(texture,"texture")
HXLINE(2258)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_delete_texture(hx::DynamicPtr(texture));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_delete_texture,(void))

void GL_obj::lime_gl_depth_func(Int func){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_depth_func",0x9c6c0744,"lime.graphics.opengl.GL.lime_gl_depth_func","lime/graphics/opengl/GL.hx",2259,0xa5aa2623)
            	HX_STACK_ARG(func,"func")
HXLINE(2259)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_depth_func(func);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_depth_func,(void))

void GL_obj::lime_gl_depth_mask(Bool flag){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_depth_mask",0xa0fd5cec,"lime.graphics.opengl.GL.lime_gl_depth_mask","lime/graphics/opengl/GL.hx",2260,0xa5aa2623)
            	HX_STACK_ARG(flag,"flag")
HXLINE(2260)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_depth_mask(flag);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_depth_mask,(void))

void GL_obj::lime_gl_depth_range(float zNear,float zFar){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_depth_range",0x1db109bd,"lime.graphics.opengl.GL.lime_gl_depth_range","lime/graphics/opengl/GL.hx",2261,0xa5aa2623)
            	HX_STACK_ARG(zNear,"zNear")
            	HX_STACK_ARG(zFar,"zFar")
HXLINE(2261)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_depth_range(zNear,zFar);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_depth_range,(void))

void GL_obj::lime_gl_detach_shader( ::Dynamic program, ::Dynamic shader){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_detach_shader",0xf94bf24d,"lime.graphics.opengl.GL.lime_gl_detach_shader","lime/graphics/opengl/GL.hx",2262,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
            	HX_STACK_ARG(shader,"shader")
HXLINE(2262)		 ::hx::Object * _hx_tmp = hx::DynamicPtr(program);
HXDLIN(2262)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_detach_shader(_hx_tmp,hx::DynamicPtr(shader));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_detach_shader,(void))

void GL_obj::lime_gl_disable(Int cap){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_disable",0xbb1d0364,"lime.graphics.opengl.GL.lime_gl_disable","lime/graphics/opengl/GL.hx",2263,0xa5aa2623)
            	HX_STACK_ARG(cap,"cap")
HXLINE(2263)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_disable(cap);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_disable,(void))

void GL_obj::lime_gl_disable_vertex_attrib_array(Int index){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_disable_vertex_attrib_array",0x34db3d04,"lime.graphics.opengl.GL.lime_gl_disable_vertex_attrib_array","lime/graphics/opengl/GL.hx",2264,0xa5aa2623)
            	HX_STACK_ARG(index,"index")
HXLINE(2264)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_disable_vertex_attrib_array(index);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_disable_vertex_attrib_array,(void))

void GL_obj::lime_gl_draw_arrays(Int mode,Int first,Int count){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_draw_arrays",0x9293ae51,"lime.graphics.opengl.GL.lime_gl_draw_arrays","lime/graphics/opengl/GL.hx",2265,0xa5aa2623)
            	HX_STACK_ARG(mode,"mode")
            	HX_STACK_ARG(first,"first")
            	HX_STACK_ARG(count,"count")
HXLINE(2265)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_draw_arrays(mode,first,count);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,lime_gl_draw_arrays,(void))

void GL_obj::lime_gl_draw_elements(Int mode,Int count,Int type,Int offset){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_draw_elements",0xb5d13f8e,"lime.graphics.opengl.GL.lime_gl_draw_elements","lime/graphics/opengl/GL.hx",2266,0xa5aa2623)
            	HX_STACK_ARG(mode,"mode")
            	HX_STACK_ARG(count,"count")
            	HX_STACK_ARG(type,"type")
            	HX_STACK_ARG(offset,"offset")
HXLINE(2266)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_draw_elements(mode,count,type,offset);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,lime_gl_draw_elements,(void))

void GL_obj::lime_gl_enable(Int cap){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_enable",0x02e7d887,"lime.graphics.opengl.GL.lime_gl_enable","lime/graphics/opengl/GL.hx",2267,0xa5aa2623)
            	HX_STACK_ARG(cap,"cap")
HXLINE(2267)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_enable(cap);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_enable,(void))

void GL_obj::lime_gl_enable_vertex_attrib_array(Int index){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_enable_vertex_attrib_array",0x445d95a7,"lime.graphics.opengl.GL.lime_gl_enable_vertex_attrib_array","lime/graphics/opengl/GL.hx",2268,0xa5aa2623)
            	HX_STACK_ARG(index,"index")
HXLINE(2268)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_enable_vertex_attrib_array(index);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_enable_vertex_attrib_array,(void))

void GL_obj::lime_gl_finish(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_finish",0x90df6a57,"lime.graphics.opengl.GL.lime_gl_finish","lime/graphics/opengl/GL.hx",2269,0xa5aa2623)
HXLINE(2269)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_finish();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,lime_gl_finish,(void))

void GL_obj::lime_gl_flush(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_flush",0xedfd6540,"lime.graphics.opengl.GL.lime_gl_flush","lime/graphics/opengl/GL.hx",2270,0xa5aa2623)
HXLINE(2270)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_flush();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,lime_gl_flush,(void))

void GL_obj::lime_gl_framebuffer_renderbuffer(Int target,Int attachment,Int renderbuffertarget, ::Dynamic renderbuffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_framebuffer_renderbuffer",0xc75d75ac,"lime.graphics.opengl.GL.lime_gl_framebuffer_renderbuffer","lime/graphics/opengl/GL.hx",2271,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(attachment,"attachment")
            	HX_STACK_ARG(renderbuffertarget,"renderbuffertarget")
            	HX_STACK_ARG(renderbuffer,"renderbuffer")
HXLINE(2271)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_framebuffer_renderbuffer(target,attachment,renderbuffertarget,hx::DynamicPtr(renderbuffer));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,lime_gl_framebuffer_renderbuffer,(void))

void GL_obj::lime_gl_framebuffer_texture2D(Int target,Int attachment,Int textarget, ::Dynamic texture,Int level){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_framebuffer_texture2D",0x829db6d7,"lime.graphics.opengl.GL.lime_gl_framebuffer_texture2D","lime/graphics/opengl/GL.hx",2272,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(attachment,"attachment")
            	HX_STACK_ARG(textarget,"textarget")
            	HX_STACK_ARG(texture,"texture")
            	HX_STACK_ARG(level,"level")
HXLINE(2272)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_framebuffer_texture2D(target,attachment,textarget,hx::DynamicPtr(texture),level);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(GL_obj,lime_gl_framebuffer_texture2D,(void))

void GL_obj::lime_gl_front_face(Int mode){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_front_face",0x6cc92f37,"lime.graphics.opengl.GL.lime_gl_front_face","lime/graphics/opengl/GL.hx",2273,0xa5aa2623)
            	HX_STACK_ARG(mode,"mode")
HXLINE(2273)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_front_face(mode);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_front_face,(void))

void GL_obj::lime_gl_generate_mipmap(Int target){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_generate_mipmap",0xb3a8d60e,"lime.graphics.opengl.GL.lime_gl_generate_mipmap","lime/graphics/opengl/GL.hx",2274,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
HXLINE(2274)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_generate_mipmap(target);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_generate_mipmap,(void))

 ::Dynamic GL_obj::lime_gl_get_active_attrib( ::Dynamic program,Int index){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_get_active_attrib",0x0015f3b6,"lime.graphics.opengl.GL.lime_gl_get_active_attrib","lime/graphics/opengl/GL.hx",2275,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
            	HX_STACK_ARG(index,"index")
HXLINE(2275)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_active_attrib(hx::DynamicPtr(program),index)) );
HXDLIN(2275)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_get_active_attrib,return )

 ::Dynamic GL_obj::lime_gl_get_active_uniform( ::Dynamic program,Int index){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_get_active_uniform",0x8f561348,"lime.graphics.opengl.GL.lime_gl_get_active_uniform","lime/graphics/opengl/GL.hx",2276,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
            	HX_STACK_ARG(index,"index")
HXLINE(2276)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_active_uniform(hx::DynamicPtr(program),index)) );
HXDLIN(2276)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_get_active_uniform,return )

Int GL_obj::lime_gl_get_attrib_location( ::Dynamic program,::String name){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_get_attrib_location",0x2ffef79d,"lime.graphics.opengl.GL.lime_gl_get_attrib_location","lime/graphics/opengl/GL.hx",2277,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
            	HX_STACK_ARG(name,"name")
HXLINE(2277)		return ( (Int)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_attrib_location(hx::DynamicPtr(program),name)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_get_attrib_location,return )

Int GL_obj::lime_gl_get_buffer_parameter(Int target,Int pname){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_get_buffer_parameter",0xd8043c77,"lime.graphics.opengl.GL.lime_gl_get_buffer_parameter","lime/graphics/opengl/GL.hx",2278,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(pname,"pname")
HXLINE(2278)		return ( (Int)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_buffer_parameter(target,pname)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_get_buffer_parameter,return )

 ::Dynamic GL_obj::lime_gl_get_context_attributes(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_get_context_attributes",0xe2a143b4,"lime.graphics.opengl.GL.lime_gl_get_context_attributes","lime/graphics/opengl/GL.hx",2279,0xa5aa2623)
HXLINE(2279)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_context_attributes()) );
HXDLIN(2279)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,lime_gl_get_context_attributes,return )

Int GL_obj::lime_gl_get_error(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_get_error",0x2e0e189b,"lime.graphics.opengl.GL.lime_gl_get_error","lime/graphics/opengl/GL.hx",2280,0xa5aa2623)
HXLINE(2280)		return ( (Int)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_error()) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,lime_gl_get_error,return )

 ::Dynamic GL_obj::lime_gl_get_extension(::String name){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_get_extension",0xd39745d2,"lime.graphics.opengl.GL.lime_gl_get_extension","lime/graphics/opengl/GL.hx",2281,0xa5aa2623)
            	HX_STACK_ARG(name,"name")
HXLINE(2281)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_extension(name)) );
HXDLIN(2281)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_get_extension,return )

Int GL_obj::lime_gl_get_framebuffer_attachment_parameter(Int target,Int attachment,Int pname){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_get_framebuffer_attachment_parameter",0x91171aec,"lime.graphics.opengl.GL.lime_gl_get_framebuffer_attachment_parameter","lime/graphics/opengl/GL.hx",2282,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(attachment,"attachment")
            	HX_STACK_ARG(pname,"pname")
HXLINE(2282)		return ( (Int)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_framebuffer_attachment_parameter(target,attachment,pname)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,lime_gl_get_framebuffer_attachment_parameter,return )

 ::Dynamic GL_obj::lime_gl_get_parameter(Int pname){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_get_parameter",0x3736e7fc,"lime.graphics.opengl.GL.lime_gl_get_parameter","lime/graphics/opengl/GL.hx",2283,0xa5aa2623)
            	HX_STACK_ARG(pname,"pname")
HXLINE(2283)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_parameter(pname)) );
HXDLIN(2283)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_get_parameter,return )

::String GL_obj::lime_gl_get_program_info_log( ::Dynamic program){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_get_program_info_log",0xab606b5b,"lime.graphics.opengl.GL.lime_gl_get_program_info_log","lime/graphics/opengl/GL.hx",2284,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
HXLINE(2284)		return ( (::String)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_program_info_log(hx::DynamicPtr(program))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_get_program_info_log,return )

Int GL_obj::lime_gl_get_program_parameter( ::Dynamic program,Int pname){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_get_program_parameter",0x8b098641,"lime.graphics.opengl.GL.lime_gl_get_program_parameter","lime/graphics/opengl/GL.hx",2285,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
            	HX_STACK_ARG(pname,"pname")
HXLINE(2285)		return ( (Int)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_program_parameter(hx::DynamicPtr(program),pname)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_get_program_parameter,return )

Int GL_obj::lime_gl_get_render_buffer_parameter(Int target,Int pname){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_get_render_buffer_parameter",0x22600e46,"lime.graphics.opengl.GL.lime_gl_get_render_buffer_parameter","lime/graphics/opengl/GL.hx",2286,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(pname,"pname")
HXLINE(2286)		return ( (Int)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_render_buffer_parameter(target,pname)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_get_render_buffer_parameter,return )

::String GL_obj::lime_gl_get_shader_info_log( ::Dynamic shader){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_get_shader_info_log",0x249eff20,"lime.graphics.opengl.GL.lime_gl_get_shader_info_log","lime/graphics/opengl/GL.hx",2287,0xa5aa2623)
            	HX_STACK_ARG(shader,"shader")
HXLINE(2287)		return ( (::String)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_shader_info_log(hx::DynamicPtr(shader))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_get_shader_info_log,return )

Int GL_obj::lime_gl_get_shader_parameter( ::Dynamic shader,Int pname){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_get_shader_parameter",0x288c3edc,"lime.graphics.opengl.GL.lime_gl_get_shader_parameter","lime/graphics/opengl/GL.hx",2288,0xa5aa2623)
            	HX_STACK_ARG(shader,"shader")
            	HX_STACK_ARG(pname,"pname")
HXLINE(2288)		return ( (Int)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_shader_parameter(hx::DynamicPtr(shader),pname)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_get_shader_parameter,return )

 ::Dynamic GL_obj::lime_gl_get_shader_precision_format(Int shadertype,Int precisiontype){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_get_shader_precision_format",0xb3fde285,"lime.graphics.opengl.GL.lime_gl_get_shader_precision_format","lime/graphics/opengl/GL.hx",2289,0xa5aa2623)
            	HX_STACK_ARG(shadertype,"shadertype")
            	HX_STACK_ARG(precisiontype,"precisiontype")
HXLINE(2289)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_shader_precision_format(shadertype,precisiontype)) );
HXDLIN(2289)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_get_shader_precision_format,return )

 ::Dynamic GL_obj::lime_gl_get_shader_source( ::Dynamic shader){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_get_shader_source",0x160239c8,"lime.graphics.opengl.GL.lime_gl_get_shader_source","lime/graphics/opengl/GL.hx",2290,0xa5aa2623)
            	HX_STACK_ARG(shader,"shader")
HXLINE(2290)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_shader_source(hx::DynamicPtr(shader))) );
HXDLIN(2290)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_get_shader_source,return )

void GL_obj::lime_gl_get_supported_extensions( ::Dynamic result){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_get_supported_extensions",0xbf430e52,"lime.graphics.opengl.GL.lime_gl_get_supported_extensions","lime/graphics/opengl/GL.hx",2291,0xa5aa2623)
            	HX_STACK_ARG(result,"result")
HXLINE(2291)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_supported_extensions(hx::DynamicPtr(result));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_get_supported_extensions,(void))

Int GL_obj::lime_gl_get_tex_parameter(Int target,Int pname){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_get_tex_parameter",0x5f5dede4,"lime.graphics.opengl.GL.lime_gl_get_tex_parameter","lime/graphics/opengl/GL.hx",2292,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(pname,"pname")
HXLINE(2292)		return ( (Int)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_tex_parameter(target,pname)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_get_tex_parameter,return )

 ::Dynamic GL_obj::lime_gl_get_uniform( ::Dynamic program,Int location){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_get_uniform",0x2b93a8c7,"lime.graphics.opengl.GL.lime_gl_get_uniform","lime/graphics/opengl/GL.hx",2293,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
            	HX_STACK_ARG(location,"location")
HXLINE(2293)		 ::hx::Object * inVal = ( ( ::hx::Object *)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_uniform(hx::DynamicPtr(program),location)) );
HXDLIN(2293)		return Dynamic(hx::DynamicPtr(inVal));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_get_uniform,return )

Int GL_obj::lime_gl_get_uniform_location( ::Dynamic program,::String name){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_get_uniform_location",0xcf76ebed,"lime.graphics.opengl.GL.lime_gl_get_uniform_location","lime/graphics/opengl/GL.hx",2294,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
            	HX_STACK_ARG(name,"name")
HXLINE(2294)		return ( (Int)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_uniform_location(hx::DynamicPtr(program),name)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_get_uniform_location,return )

Int GL_obj::lime_gl_get_vertex_attrib(Int index,Int pname){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_get_vertex_attrib",0xba8be9d8,"lime.graphics.opengl.GL.lime_gl_get_vertex_attrib","lime/graphics/opengl/GL.hx",2295,0xa5aa2623)
            	HX_STACK_ARG(index,"index")
            	HX_STACK_ARG(pname,"pname")
HXLINE(2295)		return ( (Int)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_vertex_attrib(index,pname)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_get_vertex_attrib,return )

Int GL_obj::lime_gl_get_vertex_attrib_offset(Int index,Int pname){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_get_vertex_attrib_offset",0x77fa2a5a,"lime.graphics.opengl.GL.lime_gl_get_vertex_attrib_offset","lime/graphics/opengl/GL.hx",2296,0xa5aa2623)
            	HX_STACK_ARG(index,"index")
            	HX_STACK_ARG(pname,"pname")
HXLINE(2296)		return ( (Int)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_get_vertex_attrib_offset(index,pname)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_get_vertex_attrib_offset,return )

void GL_obj::lime_gl_hint(Int target,Int mode){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_hint",0x18311e8b,"lime.graphics.opengl.GL.lime_gl_hint","lime/graphics/opengl/GL.hx",2297,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(mode,"mode")
HXLINE(2297)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_hint(target,mode);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_hint,(void))

Bool GL_obj::lime_gl_is_buffer( ::Dynamic buffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_is_buffer",0xecf41471,"lime.graphics.opengl.GL.lime_gl_is_buffer","lime/graphics/opengl/GL.hx",2298,0xa5aa2623)
            	HX_STACK_ARG(buffer,"buffer")
HXLINE(2298)		return ( (Bool)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_is_buffer(hx::DynamicPtr(buffer))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_is_buffer,return )

Bool GL_obj::lime_gl_is_enabled(Int cap){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_is_enabled",0x353e2ff0,"lime.graphics.opengl.GL.lime_gl_is_enabled","lime/graphics/opengl/GL.hx",2299,0xa5aa2623)
            	HX_STACK_ARG(cap,"cap")
HXLINE(2299)		return ( (Bool)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_is_enabled(cap)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_is_enabled,return )

Bool GL_obj::lime_gl_is_framebuffer( ::Dynamic framebuffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_is_framebuffer",0x604123dc,"lime.graphics.opengl.GL.lime_gl_is_framebuffer","lime/graphics/opengl/GL.hx",2300,0xa5aa2623)
            	HX_STACK_ARG(framebuffer,"framebuffer")
HXLINE(2300)		return ( (Bool)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_is_framebuffer(hx::DynamicPtr(framebuffer))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_is_framebuffer,return )

Bool GL_obj::lime_gl_is_program( ::Dynamic program){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_is_program",0xab0675f3,"lime.graphics.opengl.GL.lime_gl_is_program","lime/graphics/opengl/GL.hx",2301,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
HXLINE(2301)		return ( (Bool)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_is_program(hx::DynamicPtr(program))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_is_program,return )

Bool GL_obj::lime_gl_is_renderbuffer( ::Dynamic renderbuffer){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_is_renderbuffer",0x5f4a4f07,"lime.graphics.opengl.GL.lime_gl_is_renderbuffer","lime/graphics/opengl/GL.hx",2302,0xa5aa2623)
            	HX_STACK_ARG(renderbuffer,"renderbuffer")
HXLINE(2302)		return ( (Bool)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_is_renderbuffer(hx::DynamicPtr(renderbuffer))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_is_renderbuffer,return )

Bool GL_obj::lime_gl_is_shader( ::Dynamic shader){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_is_shader",0x39801696,"lime.graphics.opengl.GL.lime_gl_is_shader","lime/graphics/opengl/GL.hx",2303,0xa5aa2623)
            	HX_STACK_ARG(shader,"shader")
HXLINE(2303)		return ( (Bool)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_is_shader(hx::DynamicPtr(shader))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_is_shader,return )

Bool GL_obj::lime_gl_is_texture( ::Dynamic texture){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_is_texture",0x55edf44a,"lime.graphics.opengl.GL.lime_gl_is_texture","lime/graphics/opengl/GL.hx",2304,0xa5aa2623)
            	HX_STACK_ARG(texture,"texture")
HXLINE(2304)		return ( (Bool)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_is_texture(hx::DynamicPtr(texture))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_is_texture,return )

void GL_obj::lime_gl_line_width(float width){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_line_width",0x42b5003f,"lime.graphics.opengl.GL.lime_gl_line_width","lime/graphics/opengl/GL.hx",2305,0xa5aa2623)
            	HX_STACK_ARG(width,"width")
HXLINE(2305)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_line_width(width);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_line_width,(void))

void GL_obj::lime_gl_link_program( ::Dynamic program){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_link_program",0xcec5cb03,"lime.graphics.opengl.GL.lime_gl_link_program","lime/graphics/opengl/GL.hx",2306,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
HXLINE(2306)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_link_program(hx::DynamicPtr(program));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_link_program,(void))

void GL_obj::lime_gl_pixel_storei(Int pname,Int param){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_pixel_storei",0xd84c9e45,"lime.graphics.opengl.GL.lime_gl_pixel_storei","lime/graphics/opengl/GL.hx",2307,0xa5aa2623)
            	HX_STACK_ARG(pname,"pname")
            	HX_STACK_ARG(param,"param")
HXLINE(2307)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_pixel_storei(pname,param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_pixel_storei,(void))

void GL_obj::lime_gl_polygon_offset(float factor,float units){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_polygon_offset",0x989417fc,"lime.graphics.opengl.GL.lime_gl_polygon_offset","lime/graphics/opengl/GL.hx",2308,0xa5aa2623)
            	HX_STACK_ARG(factor,"factor")
            	HX_STACK_ARG(units,"units")
HXLINE(2308)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_polygon_offset(factor,units);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_polygon_offset,(void))

void GL_obj::lime_gl_read_pixels(Int x,Int y,Int width,Int height,Int format,Int type, ::Dynamic buffer,Int byteOffset){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_read_pixels",0x70f073b2,"lime.graphics.opengl.GL.lime_gl_read_pixels","lime/graphics/opengl/GL.hx",2309,0xa5aa2623)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
            	HX_STACK_ARG(format,"format")
            	HX_STACK_ARG(type,"type")
            	HX_STACK_ARG(buffer,"buffer")
            	HX_STACK_ARG(byteOffset,"byteOffset")
HXLINE(2309)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_read_pixels(x,y,width,height,format,type,hx::DynamicPtr(buffer),byteOffset);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC8(GL_obj,lime_gl_read_pixels,(void))

void GL_obj::lime_gl_renderbuffer_storage(Int target,Int internalformat,Int width,Int height){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_renderbuffer_storage",0xdf357496,"lime.graphics.opengl.GL.lime_gl_renderbuffer_storage","lime/graphics/opengl/GL.hx",2310,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(internalformat,"internalformat")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
HXLINE(2310)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_renderbuffer_storage(target,internalformat,width,height);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,lime_gl_renderbuffer_storage,(void))

void GL_obj::lime_gl_sample_coverage(float value,Bool invert){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_sample_coverage",0x5435c959,"lime.graphics.opengl.GL.lime_gl_sample_coverage","lime/graphics/opengl/GL.hx",2311,0xa5aa2623)
            	HX_STACK_ARG(value,"value")
            	HX_STACK_ARG(invert,"invert")
HXLINE(2311)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_sample_coverage(value,invert);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_sample_coverage,(void))

void GL_obj::lime_gl_scissor(Int x,Int y,Int width,Int height){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_scissor",0x0eabc198,"lime.graphics.opengl.GL.lime_gl_scissor","lime/graphics/opengl/GL.hx",2312,0xa5aa2623)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
HXLINE(2312)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_scissor(x,y,width,height);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,lime_gl_scissor,(void))

void GL_obj::lime_gl_shader_source( ::Dynamic shader,::String source){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_shader_source",0x7c1b4071,"lime.graphics.opengl.GL.lime_gl_shader_source","lime/graphics/opengl/GL.hx",2313,0xa5aa2623)
            	HX_STACK_ARG(shader,"shader")
            	HX_STACK_ARG(source,"source")
HXLINE(2313)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_shader_source(hx::DynamicPtr(shader),source);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_shader_source,(void))

void GL_obj::lime_gl_stencil_func(Int func,Int ref,Int mask){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_stencil_func",0xff459cab,"lime.graphics.opengl.GL.lime_gl_stencil_func","lime/graphics/opengl/GL.hx",2314,0xa5aa2623)
            	HX_STACK_ARG(func,"func")
            	HX_STACK_ARG(ref,"ref")
            	HX_STACK_ARG(mask,"mask")
HXLINE(2314)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_stencil_func(func,ref,mask);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,lime_gl_stencil_func,(void))

void GL_obj::lime_gl_stencil_func_separate(Int face,Int func,Int ref,Int mask){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_stencil_func_separate",0x91970cb7,"lime.graphics.opengl.GL.lime_gl_stencil_func_separate","lime/graphics/opengl/GL.hx",2315,0xa5aa2623)
            	HX_STACK_ARG(face,"face")
            	HX_STACK_ARG(func,"func")
            	HX_STACK_ARG(ref,"ref")
            	HX_STACK_ARG(mask,"mask")
HXLINE(2315)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_stencil_func_separate(face,func,ref,mask);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,lime_gl_stencil_func_separate,(void))

void GL_obj::lime_gl_stencil_mask(Int mask){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_stencil_mask",0x03d6f253,"lime.graphics.opengl.GL.lime_gl_stencil_mask","lime/graphics/opengl/GL.hx",2316,0xa5aa2623)
            	HX_STACK_ARG(mask,"mask")
HXLINE(2316)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_stencil_mask(mask);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_stencil_mask,(void))

void GL_obj::lime_gl_stencil_mask_separate(Int face,Int mask){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_stencil_mask_separate",0xdd91c20f,"lime.graphics.opengl.GL.lime_gl_stencil_mask_separate","lime/graphics/opengl/GL.hx",2317,0xa5aa2623)
            	HX_STACK_ARG(face,"face")
            	HX_STACK_ARG(mask,"mask")
HXLINE(2317)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_stencil_mask_separate(face,mask);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_stencil_mask_separate,(void))

void GL_obj::lime_gl_stencil_op(Int fail,Int zfail,Int zpass){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_stencil_op",0x94621ac8,"lime.graphics.opengl.GL.lime_gl_stencil_op","lime/graphics/opengl/GL.hx",2318,0xa5aa2623)
            	HX_STACK_ARG(fail,"fail")
            	HX_STACK_ARG(zfail,"zfail")
            	HX_STACK_ARG(zpass,"zpass")
HXLINE(2318)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_stencil_op(fail,zfail,zpass);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,lime_gl_stencil_op,(void))

void GL_obj::lime_gl_stencil_op_separate(Int face,Int fail,Int zfail,Int zpass){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_stencil_op_separate",0xe86a62fa,"lime.graphics.opengl.GL.lime_gl_stencil_op_separate","lime/graphics/opengl/GL.hx",2319,0xa5aa2623)
            	HX_STACK_ARG(face,"face")
            	HX_STACK_ARG(fail,"fail")
            	HX_STACK_ARG(zfail,"zfail")
            	HX_STACK_ARG(zpass,"zpass")
HXLINE(2319)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_stencil_op_separate(face,fail,zfail,zpass);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,lime_gl_stencil_op_separate,(void))

void GL_obj::lime_gl_tex_image_2d(Int target,Int level,Int internalformat,Int width,Int height,Int border,Int format,Int type, ::Dynamic buffer,Int byteOffset){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_tex_image_2d",0xcf709732,"lime.graphics.opengl.GL.lime_gl_tex_image_2d","lime/graphics/opengl/GL.hx",2320,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(level,"level")
            	HX_STACK_ARG(internalformat,"internalformat")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
            	HX_STACK_ARG(border,"border")
            	HX_STACK_ARG(format,"format")
            	HX_STACK_ARG(type,"type")
            	HX_STACK_ARG(buffer,"buffer")
            	HX_STACK_ARG(byteOffset,"byteOffset")
HXLINE(2320)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_tex_image_2d(target,level,internalformat,width,height,border,format,type,hx::DynamicPtr(buffer),byteOffset);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC10(GL_obj,lime_gl_tex_image_2d,(void))

void GL_obj::lime_gl_tex_parameterf(Int target,Int pname,float param){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_tex_parameterf",0x029f0739,"lime.graphics.opengl.GL.lime_gl_tex_parameterf","lime/graphics/opengl/GL.hx",2321,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(pname,"pname")
            	HX_STACK_ARG(param,"param")
HXLINE(2321)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_tex_parameterf(target,pname,param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,lime_gl_tex_parameterf,(void))

void GL_obj::lime_gl_tex_parameteri(Int target,Int pname,Int param){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_tex_parameteri",0x029f073c,"lime.graphics.opengl.GL.lime_gl_tex_parameteri","lime/graphics/opengl/GL.hx",2322,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(pname,"pname")
            	HX_STACK_ARG(param,"param")
HXLINE(2322)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_tex_parameteri(target,pname,param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,lime_gl_tex_parameteri,(void))

void GL_obj::lime_gl_tex_sub_image_2d(Int target,Int level,Int xoffset,Int yoffset,Int width,Int height,Int format,Int type, ::Dynamic buffer,Int byteOffset){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_tex_sub_image_2d",0x4738b311,"lime.graphics.opengl.GL.lime_gl_tex_sub_image_2d","lime/graphics/opengl/GL.hx",2323,0xa5aa2623)
            	HX_STACK_ARG(target,"target")
            	HX_STACK_ARG(level,"level")
            	HX_STACK_ARG(xoffset,"xoffset")
            	HX_STACK_ARG(yoffset,"yoffset")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
            	HX_STACK_ARG(format,"format")
            	HX_STACK_ARG(type,"type")
            	HX_STACK_ARG(buffer,"buffer")
            	HX_STACK_ARG(byteOffset,"byteOffset")
HXLINE(2323)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_tex_sub_image_2d(target,level,xoffset,yoffset,width,height,format,type,hx::DynamicPtr(buffer),byteOffset);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC10(GL_obj,lime_gl_tex_sub_image_2d,(void))

void GL_obj::lime_gl_uniform1f(Int location,float x){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_uniform1f",0x7f1911c5,"lime.graphics.opengl.GL.lime_gl_uniform1f","lime/graphics/opengl/GL.hx",2324,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(x,"x")
HXLINE(2324)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform1f(location,x);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_uniform1f,(void))

void GL_obj::lime_gl_uniform1fv(Int location, ::Dynamic v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_uniform1fv",0xb6d67b11,"lime.graphics.opengl.GL.lime_gl_uniform1fv","lime/graphics/opengl/GL.hx",2325,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(v,"v")
HXLINE(2325)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform1fv(location,hx::DynamicPtr(v));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_uniform1fv,(void))

void GL_obj::lime_gl_uniform1i(Int location,Int x){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_uniform1i",0x7f1911c8,"lime.graphics.opengl.GL.lime_gl_uniform1i","lime/graphics/opengl/GL.hx",2326,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(x,"x")
HXLINE(2326)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform1i(location,x);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_uniform1i,(void))

void GL_obj::lime_gl_uniform1iv(Int location, ::Dynamic v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_uniform1iv",0xb6d67dae,"lime.graphics.opengl.GL.lime_gl_uniform1iv","lime/graphics/opengl/GL.hx",2327,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(v,"v")
HXLINE(2327)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform1iv(location,hx::DynamicPtr(v));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_uniform1iv,(void))

void GL_obj::lime_gl_uniform2f(Int location,float x,float y){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_uniform2f",0x7f1912a4,"lime.graphics.opengl.GL.lime_gl_uniform2f","lime/graphics/opengl/GL.hx",2328,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
HXLINE(2328)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform2f(location,x,y);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,lime_gl_uniform2f,(void))

void GL_obj::lime_gl_uniform2fv(Int location, ::Dynamic v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_uniform2fv",0xb6d73d52,"lime.graphics.opengl.GL.lime_gl_uniform2fv","lime/graphics/opengl/GL.hx",2329,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(v,"v")
HXLINE(2329)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform2fv(location,hx::DynamicPtr(v));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_uniform2fv,(void))

void GL_obj::lime_gl_uniform2i(Int location,Int x,Int y){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_uniform2i",0x7f1912a7,"lime.graphics.opengl.GL.lime_gl_uniform2i","lime/graphics/opengl/GL.hx",2330,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
HXLINE(2330)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform2i(location,x,y);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,lime_gl_uniform2i,(void))

void GL_obj::lime_gl_uniform2iv(Int location, ::Dynamic v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_uniform2iv",0xb6d73fef,"lime.graphics.opengl.GL.lime_gl_uniform2iv","lime/graphics/opengl/GL.hx",2331,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(v,"v")
HXLINE(2331)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform2iv(location,hx::DynamicPtr(v));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_uniform2iv,(void))

void GL_obj::lime_gl_uniform3f(Int location,float x,float y,float z){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_uniform3f",0x7f191383,"lime.graphics.opengl.GL.lime_gl_uniform3f","lime/graphics/opengl/GL.hx",2332,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(z,"z")
HXLINE(2332)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform3f(location,x,y,z);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,lime_gl_uniform3f,(void))

void GL_obj::lime_gl_uniform3fv(Int location, ::Dynamic v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_uniform3fv",0xb6d7ff93,"lime.graphics.opengl.GL.lime_gl_uniform3fv","lime/graphics/opengl/GL.hx",2333,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(v,"v")
HXLINE(2333)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform3fv(location,hx::DynamicPtr(v));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_uniform3fv,(void))

void GL_obj::lime_gl_uniform3i(Int location,Int x,Int y,Int z){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_uniform3i",0x7f191386,"lime.graphics.opengl.GL.lime_gl_uniform3i","lime/graphics/opengl/GL.hx",2334,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(z,"z")
HXLINE(2334)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform3i(location,x,y,z);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,lime_gl_uniform3i,(void))

void GL_obj::lime_gl_uniform3iv(Int location, ::Dynamic v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_uniform3iv",0xb6d80230,"lime.graphics.opengl.GL.lime_gl_uniform3iv","lime/graphics/opengl/GL.hx",2335,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(v,"v")
HXLINE(2335)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform3iv(location,hx::DynamicPtr(v));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_uniform3iv,(void))

void GL_obj::lime_gl_uniform4f(Int location,float x,float y,float z,float w){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_uniform4f",0x7f191462,"lime.graphics.opengl.GL.lime_gl_uniform4f","lime/graphics/opengl/GL.hx",2336,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(z,"z")
            	HX_STACK_ARG(w,"w")
HXLINE(2336)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform4f(location,x,y,z,w);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(GL_obj,lime_gl_uniform4f,(void))

void GL_obj::lime_gl_uniform4fv(Int location, ::Dynamic v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_uniform4fv",0xb6d8c1d4,"lime.graphics.opengl.GL.lime_gl_uniform4fv","lime/graphics/opengl/GL.hx",2337,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(v,"v")
HXLINE(2337)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform4fv(location,hx::DynamicPtr(v));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_uniform4fv,(void))

void GL_obj::lime_gl_uniform4i(Int location,Int x,Int y,Int z,Int w){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_uniform4i",0x7f191465,"lime.graphics.opengl.GL.lime_gl_uniform4i","lime/graphics/opengl/GL.hx",2338,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(z,"z")
            	HX_STACK_ARG(w,"w")
HXLINE(2338)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform4i(location,x,y,z,w);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(GL_obj,lime_gl_uniform4i,(void))

void GL_obj::lime_gl_uniform4iv(Int location, ::Dynamic v){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_uniform4iv",0xb6d8c471,"lime.graphics.opengl.GL.lime_gl_uniform4iv","lime/graphics/opengl/GL.hx",2339,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(v,"v")
HXLINE(2339)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform4iv(location,hx::DynamicPtr(v));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_uniform4iv,(void))

void GL_obj::lime_gl_uniform_matrix(Int location,Bool transpose, ::Dynamic buffer,Int count){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_uniform_matrix",0x67f42330,"lime.graphics.opengl.GL.lime_gl_uniform_matrix","lime/graphics/opengl/GL.hx",2340,0xa5aa2623)
            	HX_STACK_ARG(location,"location")
            	HX_STACK_ARG(transpose,"transpose")
            	HX_STACK_ARG(buffer,"buffer")
            	HX_STACK_ARG(count,"count")
HXLINE(2340)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_uniform_matrix(location,transpose,hx::DynamicPtr(buffer),count);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,lime_gl_uniform_matrix,(void))

void GL_obj::lime_gl_use_program( ::Dynamic program){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_use_program",0x9e3ff6c8,"lime.graphics.opengl.GL.lime_gl_use_program","lime/graphics/opengl/GL.hx",2341,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
HXLINE(2341)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_use_program(hx::DynamicPtr(program));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_use_program,(void))

void GL_obj::lime_gl_validate_program( ::Dynamic program){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_validate_program",0x4fcb519f,"lime.graphics.opengl.GL.lime_gl_validate_program","lime/graphics/opengl/GL.hx",2342,0xa5aa2623)
            	HX_STACK_ARG(program,"program")
HXLINE(2342)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_validate_program(hx::DynamicPtr(program));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GL_obj,lime_gl_validate_program,(void))

::String GL_obj::lime_gl_version(){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_version",0x86b68094,"lime.graphics.opengl.GL.lime_gl_version","lime/graphics/opengl/GL.hx",2343,0xa5aa2623)
HXLINE(2343)		return ( (::String)(::lime::graphics::opengl::GL_obj::cffi_lime_gl_version()) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GL_obj,lime_gl_version,return )

void GL_obj::lime_gl_vertex_attrib1f(Int indx,float x){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_vertex_attrib1f",0x4822fdd6,"lime.graphics.opengl.GL.lime_gl_vertex_attrib1f","lime/graphics/opengl/GL.hx",2344,0xa5aa2623)
            	HX_STACK_ARG(indx,"indx")
            	HX_STACK_ARG(x,"x")
HXLINE(2344)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_vertex_attrib1f(indx,x);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_vertex_attrib1f,(void))

void GL_obj::lime_gl_vertex_attrib1fv(Int indx, ::Dynamic values){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_vertex_attrib1fv",0xd67b1de0,"lime.graphics.opengl.GL.lime_gl_vertex_attrib1fv","lime/graphics/opengl/GL.hx",2345,0xa5aa2623)
            	HX_STACK_ARG(indx,"indx")
            	HX_STACK_ARG(values,"values")
HXLINE(2345)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_vertex_attrib1fv(indx,hx::DynamicPtr(values));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_vertex_attrib1fv,(void))

void GL_obj::lime_gl_vertex_attrib2f(Int indx,float x,float y){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_vertex_attrib2f",0x4822feb5,"lime.graphics.opengl.GL.lime_gl_vertex_attrib2f","lime/graphics/opengl/GL.hx",2346,0xa5aa2623)
            	HX_STACK_ARG(indx,"indx")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
HXLINE(2346)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_vertex_attrib2f(indx,x,y);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(GL_obj,lime_gl_vertex_attrib2f,(void))

void GL_obj::lime_gl_vertex_attrib2fv(Int indx, ::Dynamic values){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_vertex_attrib2fv",0xd67be021,"lime.graphics.opengl.GL.lime_gl_vertex_attrib2fv","lime/graphics/opengl/GL.hx",2347,0xa5aa2623)
            	HX_STACK_ARG(indx,"indx")
            	HX_STACK_ARG(values,"values")
HXLINE(2347)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_vertex_attrib2fv(indx,hx::DynamicPtr(values));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_vertex_attrib2fv,(void))

void GL_obj::lime_gl_vertex_attrib3f(Int indx,float x,float y,float z){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_vertex_attrib3f",0x4822ff94,"lime.graphics.opengl.GL.lime_gl_vertex_attrib3f","lime/graphics/opengl/GL.hx",2348,0xa5aa2623)
            	HX_STACK_ARG(indx,"indx")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(z,"z")
HXLINE(2348)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_vertex_attrib3f(indx,x,y,z);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,lime_gl_vertex_attrib3f,(void))

void GL_obj::lime_gl_vertex_attrib3fv(Int indx, ::Dynamic values){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_vertex_attrib3fv",0xd67ca262,"lime.graphics.opengl.GL.lime_gl_vertex_attrib3fv","lime/graphics/opengl/GL.hx",2349,0xa5aa2623)
            	HX_STACK_ARG(indx,"indx")
            	HX_STACK_ARG(values,"values")
HXLINE(2349)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_vertex_attrib3fv(indx,hx::DynamicPtr(values));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_vertex_attrib3fv,(void))

void GL_obj::lime_gl_vertex_attrib4f(Int indx,float x,float y,float z,float w){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_vertex_attrib4f",0x48230073,"lime.graphics.opengl.GL.lime_gl_vertex_attrib4f","lime/graphics/opengl/GL.hx",2350,0xa5aa2623)
            	HX_STACK_ARG(indx,"indx")
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(z,"z")
            	HX_STACK_ARG(w,"w")
HXLINE(2350)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_vertex_attrib4f(indx,x,y,z,w);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(GL_obj,lime_gl_vertex_attrib4f,(void))

void GL_obj::lime_gl_vertex_attrib4fv(Int indx, ::Dynamic values){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_vertex_attrib4fv",0xd67d64a3,"lime.graphics.opengl.GL.lime_gl_vertex_attrib4fv","lime/graphics/opengl/GL.hx",2351,0xa5aa2623)
            	HX_STACK_ARG(indx,"indx")
            	HX_STACK_ARG(values,"values")
HXLINE(2351)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_vertex_attrib4fv(indx,hx::DynamicPtr(values));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GL_obj,lime_gl_vertex_attrib4fv,(void))

void GL_obj::lime_gl_vertex_attrib_pointer(Int indx,Int size,Int type,Bool normalized,Int stride,Int offset){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_vertex_attrib_pointer",0x8d94f3bf,"lime.graphics.opengl.GL.lime_gl_vertex_attrib_pointer","lime/graphics/opengl/GL.hx",2352,0xa5aa2623)
            	HX_STACK_ARG(indx,"indx")
            	HX_STACK_ARG(size,"size")
            	HX_STACK_ARG(type,"type")
            	HX_STACK_ARG(normalized,"normalized")
            	HX_STACK_ARG(stride,"stride")
            	HX_STACK_ARG(offset,"offset")
HXLINE(2352)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_vertex_attrib_pointer(indx,size,type,normalized,stride,offset);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(GL_obj,lime_gl_vertex_attrib_pointer,(void))

void GL_obj::lime_gl_viewport(Int x,Int y,Int width,Int height){
            	HX_STACK_FRAME("lime.graphics.opengl.GL","lime_gl_viewport",0x1ee6ff6a,"lime.graphics.opengl.GL.lime_gl_viewport","lime/graphics/opengl/GL.hx",2353,0xa5aa2623)
            	HX_STACK_ARG(x,"x")
            	HX_STACK_ARG(y,"y")
            	HX_STACK_ARG(width,"width")
            	HX_STACK_ARG(height,"height")
HXLINE(2353)		::lime::graphics::opengl::GL_obj::cffi_lime_gl_viewport(x,y,width,height);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(GL_obj,lime_gl_viewport,(void))

::cpp::Function<  void(Int) > GL_obj::cffi_lime_gl_active_texture;

::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > GL_obj::cffi_lime_gl_attach_shader;

::cpp::Function<  void( ::hx::Object *,Int,::String) > GL_obj::cffi_lime_gl_bind_attrib_location;

::cpp::Function<  void(Int, ::hx::Object *) > GL_obj::cffi_lime_gl_bind_buffer;

::cpp::Function<  void(Int, ::hx::Object *) > GL_obj::cffi_lime_gl_bind_framebuffer;

::cpp::Function<  void(Int, ::hx::Object *) > GL_obj::cffi_lime_gl_bind_renderbuffer;

::cpp::Function<  void(Int, ::hx::Object *) > GL_obj::cffi_lime_gl_bind_texture;

::cpp::Function<  void(float,float,float,float) > GL_obj::cffi_lime_gl_blend_color;

::cpp::Function<  void(Int) > GL_obj::cffi_lime_gl_blend_equation;

::cpp::Function<  void(Int,Int) > GL_obj::cffi_lime_gl_blend_equation_separate;

::cpp::Function<  void(Int,Int) > GL_obj::cffi_lime_gl_blend_func;

::cpp::Function<  void(Int,Int,Int,Int) > GL_obj::cffi_lime_gl_blend_func_separate;

::cpp::Function<  void(Int, ::hx::Object *,Int,Int,Int) > GL_obj::cffi_lime_gl_buffer_data;

::cpp::Function<  void(Int,Int, ::hx::Object *,Int,Int) > GL_obj::cffi_lime_gl_buffer_sub_data;

::cpp::Function<  Int(Int) > GL_obj::cffi_lime_gl_check_framebuffer_status;

::cpp::Function<  void(Int) > GL_obj::cffi_lime_gl_clear;

::cpp::Function<  void(float,float,float,float) > GL_obj::cffi_lime_gl_clear_color;

::cpp::Function<  void(float) > GL_obj::cffi_lime_gl_clear_depth;

::cpp::Function<  void(Int) > GL_obj::cffi_lime_gl_clear_stencil;

::cpp::Function<  void(Bool,Bool,Bool,Bool) > GL_obj::cffi_lime_gl_color_mask;

::cpp::Function<  void( ::hx::Object *) > GL_obj::cffi_lime_gl_compile_shader;

::cpp::Function<  void(Int,Int,Int,Int,Int,Int, ::hx::Object *,Int) > GL_obj::cffi_lime_gl_compressed_tex_image_2d;

::cpp::Function<  void(Int,Int,Int,Int,Int,Int,Int, ::hx::Object *,Int) > GL_obj::cffi_lime_gl_compressed_tex_sub_image_2d;

::cpp::Function<  void(Int,Int,Int,Int,Int,Int,Int,Int) > GL_obj::cffi_lime_gl_copy_tex_image_2d;

::cpp::Function<  void(Int,Int,Int,Int,Int,Int,Int,Int) > GL_obj::cffi_lime_gl_copy_tex_sub_image_2d;

::cpp::Function<   ::hx::Object *() > GL_obj::cffi_lime_gl_create_buffer;

::cpp::Function<   ::hx::Object *() > GL_obj::cffi_lime_gl_create_framebuffer;

::cpp::Function<   ::hx::Object *() > GL_obj::cffi_lime_gl_create_program;

::cpp::Function<   ::hx::Object *() > GL_obj::cffi_lime_gl_create_render_buffer;

::cpp::Function<   ::hx::Object *(Int) > GL_obj::cffi_lime_gl_create_shader;

::cpp::Function<   ::hx::Object *() > GL_obj::cffi_lime_gl_create_texture;

::cpp::Function<  void(Int) > GL_obj::cffi_lime_gl_cull_face;

::cpp::Function<  void( ::hx::Object *) > GL_obj::cffi_lime_gl_delete_buffer;

::cpp::Function<  void( ::hx::Object *) > GL_obj::cffi_lime_gl_delete_framebuffer;

::cpp::Function<  void( ::hx::Object *) > GL_obj::cffi_lime_gl_delete_program;

::cpp::Function<  void( ::hx::Object *) > GL_obj::cffi_lime_gl_delete_render_buffer;

::cpp::Function<  void( ::hx::Object *) > GL_obj::cffi_lime_gl_delete_shader;

::cpp::Function<  void( ::hx::Object *) > GL_obj::cffi_lime_gl_delete_texture;

::cpp::Function<  void(Int) > GL_obj::cffi_lime_gl_depth_func;

::cpp::Function<  void(Bool) > GL_obj::cffi_lime_gl_depth_mask;

::cpp::Function<  void(float,float) > GL_obj::cffi_lime_gl_depth_range;

::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > GL_obj::cffi_lime_gl_detach_shader;

::cpp::Function<  void(Int) > GL_obj::cffi_lime_gl_disable;

::cpp::Function<  void(Int) > GL_obj::cffi_lime_gl_disable_vertex_attrib_array;

::cpp::Function<  void(Int,Int,Int) > GL_obj::cffi_lime_gl_draw_arrays;

::cpp::Function<  void(Int,Int,Int,Int) > GL_obj::cffi_lime_gl_draw_elements;

::cpp::Function<  void(Int) > GL_obj::cffi_lime_gl_enable;

::cpp::Function<  void(Int) > GL_obj::cffi_lime_gl_enable_vertex_attrib_array;

::cpp::Function<  void() > GL_obj::cffi_lime_gl_finish;

::cpp::Function<  void() > GL_obj::cffi_lime_gl_flush;

::cpp::Function<  void(Int,Int,Int, ::hx::Object *) > GL_obj::cffi_lime_gl_framebuffer_renderbuffer;

::cpp::Function<  void(Int,Int,Int, ::hx::Object *,Int) > GL_obj::cffi_lime_gl_framebuffer_texture2D;

::cpp::Function<  void(Int) > GL_obj::cffi_lime_gl_front_face;

::cpp::Function<  void(Int) > GL_obj::cffi_lime_gl_generate_mipmap;

::cpp::Function<   ::hx::Object *( ::hx::Object *,Int) > GL_obj::cffi_lime_gl_get_active_attrib;

::cpp::Function<   ::hx::Object *( ::hx::Object *,Int) > GL_obj::cffi_lime_gl_get_active_uniform;

::cpp::Function<  Int( ::hx::Object *,::String) > GL_obj::cffi_lime_gl_get_attrib_location;

::cpp::Function<  Int(Int,Int) > GL_obj::cffi_lime_gl_get_buffer_parameter;

::cpp::Function<   ::hx::Object *() > GL_obj::cffi_lime_gl_get_context_attributes;

::cpp::Function<  Int() > GL_obj::cffi_lime_gl_get_error;

::cpp::Function<   ::hx::Object *(::String) > GL_obj::cffi_lime_gl_get_extension;

::cpp::Function<  Int(Int,Int,Int) > GL_obj::cffi_lime_gl_get_framebuffer_attachment_parameter;

::cpp::Function<   ::hx::Object *(Int) > GL_obj::cffi_lime_gl_get_parameter;

::cpp::Function<  ::String( ::hx::Object *) > GL_obj::cffi_lime_gl_get_program_info_log;

::cpp::Function<  Int( ::hx::Object *,Int) > GL_obj::cffi_lime_gl_get_program_parameter;

::cpp::Function<  Int(Int,Int) > GL_obj::cffi_lime_gl_get_render_buffer_parameter;

::cpp::Function<  ::String( ::hx::Object *) > GL_obj::cffi_lime_gl_get_shader_info_log;

::cpp::Function<  Int( ::hx::Object *,Int) > GL_obj::cffi_lime_gl_get_shader_parameter;

::cpp::Function<   ::hx::Object *(Int,Int) > GL_obj::cffi_lime_gl_get_shader_precision_format;

::cpp::Function<   ::hx::Object *( ::hx::Object *) > GL_obj::cffi_lime_gl_get_shader_source;

::cpp::Function<  void( ::hx::Object *) > GL_obj::cffi_lime_gl_get_supported_extensions;

::cpp::Function<  Int(Int,Int) > GL_obj::cffi_lime_gl_get_tex_parameter;

::cpp::Function<   ::hx::Object *( ::hx::Object *,Int) > GL_obj::cffi_lime_gl_get_uniform;

::cpp::Function<  Int( ::hx::Object *,::String) > GL_obj::cffi_lime_gl_get_uniform_location;

::cpp::Function<  Int(Int,Int) > GL_obj::cffi_lime_gl_get_vertex_attrib;

::cpp::Function<  Int(Int,Int) > GL_obj::cffi_lime_gl_get_vertex_attrib_offset;

::cpp::Function<  void(Int,Int) > GL_obj::cffi_lime_gl_hint;

::cpp::Function<  Bool( ::hx::Object *) > GL_obj::cffi_lime_gl_is_buffer;

::cpp::Function<  Bool(Int) > GL_obj::cffi_lime_gl_is_enabled;

::cpp::Function<  Bool( ::hx::Object *) > GL_obj::cffi_lime_gl_is_framebuffer;

::cpp::Function<  Bool( ::hx::Object *) > GL_obj::cffi_lime_gl_is_program;

::cpp::Function<  Bool( ::hx::Object *) > GL_obj::cffi_lime_gl_is_renderbuffer;

::cpp::Function<  Bool( ::hx::Object *) > GL_obj::cffi_lime_gl_is_shader;

::cpp::Function<  Bool( ::hx::Object *) > GL_obj::cffi_lime_gl_is_texture;

::cpp::Function<  void(float) > GL_obj::cffi_lime_gl_line_width;

::cpp::Function<  void( ::hx::Object *) > GL_obj::cffi_lime_gl_link_program;

::cpp::Function<  void(Int,Int) > GL_obj::cffi_lime_gl_pixel_storei;

::cpp::Function<  void(float,float) > GL_obj::cffi_lime_gl_polygon_offset;

::cpp::Function<  void(Int,Int,Int,Int,Int,Int, ::hx::Object *,Int) > GL_obj::cffi_lime_gl_read_pixels;

::cpp::Function<  void(Int,Int,Int,Int) > GL_obj::cffi_lime_gl_renderbuffer_storage;

::cpp::Function<  void(float,Bool) > GL_obj::cffi_lime_gl_sample_coverage;

::cpp::Function<  void(Int,Int,Int,Int) > GL_obj::cffi_lime_gl_scissor;

::cpp::Function<  void( ::hx::Object *,::String) > GL_obj::cffi_lime_gl_shader_source;

::cpp::Function<  void(Int,Int,Int) > GL_obj::cffi_lime_gl_stencil_func;

::cpp::Function<  void(Int,Int,Int,Int) > GL_obj::cffi_lime_gl_stencil_func_separate;

::cpp::Function<  void(Int) > GL_obj::cffi_lime_gl_stencil_mask;

::cpp::Function<  void(Int,Int) > GL_obj::cffi_lime_gl_stencil_mask_separate;

::cpp::Function<  void(Int,Int,Int) > GL_obj::cffi_lime_gl_stencil_op;

::cpp::Function<  void(Int,Int,Int,Int) > GL_obj::cffi_lime_gl_stencil_op_separate;

::cpp::Function<  void(Int,Int,Int,Int,Int,Int,Int,Int, ::hx::Object *,Int) > GL_obj::cffi_lime_gl_tex_image_2d;

::cpp::Function<  void(Int,Int,float) > GL_obj::cffi_lime_gl_tex_parameterf;

::cpp::Function<  void(Int,Int,Int) > GL_obj::cffi_lime_gl_tex_parameteri;

::cpp::Function<  void(Int,Int,Int,Int,Int,Int,Int,Int, ::hx::Object *,Int) > GL_obj::cffi_lime_gl_tex_sub_image_2d;

::cpp::Function<  void(Int,float) > GL_obj::cffi_lime_gl_uniform1f;

::cpp::Function<  void(Int, ::hx::Object *) > GL_obj::cffi_lime_gl_uniform1fv;

::cpp::Function<  void(Int,Int) > GL_obj::cffi_lime_gl_uniform1i;

::cpp::Function<  void(Int, ::hx::Object *) > GL_obj::cffi_lime_gl_uniform1iv;

::cpp::Function<  void(Int,float,float) > GL_obj::cffi_lime_gl_uniform2f;

::cpp::Function<  void(Int, ::hx::Object *) > GL_obj::cffi_lime_gl_uniform2fv;

::cpp::Function<  void(Int,Int,Int) > GL_obj::cffi_lime_gl_uniform2i;

::cpp::Function<  void(Int, ::hx::Object *) > GL_obj::cffi_lime_gl_uniform2iv;

::cpp::Function<  void(Int,float,float,float) > GL_obj::cffi_lime_gl_uniform3f;

::cpp::Function<  void(Int, ::hx::Object *) > GL_obj::cffi_lime_gl_uniform3fv;

::cpp::Function<  void(Int,Int,Int,Int) > GL_obj::cffi_lime_gl_uniform3i;

::cpp::Function<  void(Int, ::hx::Object *) > GL_obj::cffi_lime_gl_uniform3iv;

::cpp::Function<  void(Int,float,float,float,float) > GL_obj::cffi_lime_gl_uniform4f;

::cpp::Function<  void(Int, ::hx::Object *) > GL_obj::cffi_lime_gl_uniform4fv;

::cpp::Function<  void(Int,Int,Int,Int,Int) > GL_obj::cffi_lime_gl_uniform4i;

::cpp::Function<  void(Int, ::hx::Object *) > GL_obj::cffi_lime_gl_uniform4iv;

::cpp::Function<  void(Int,Bool, ::hx::Object *,Int) > GL_obj::cffi_lime_gl_uniform_matrix;

::cpp::Function<  void( ::hx::Object *) > GL_obj::cffi_lime_gl_use_program;

::cpp::Function<  void( ::hx::Object *) > GL_obj::cffi_lime_gl_validate_program;

::cpp::Function<  ::String() > GL_obj::cffi_lime_gl_version;

::cpp::Function<  void(Int,float) > GL_obj::cffi_lime_gl_vertex_attrib1f;

::cpp::Function<  void(Int, ::hx::Object *) > GL_obj::cffi_lime_gl_vertex_attrib1fv;

::cpp::Function<  void(Int,float,float) > GL_obj::cffi_lime_gl_vertex_attrib2f;

::cpp::Function<  void(Int, ::hx::Object *) > GL_obj::cffi_lime_gl_vertex_attrib2fv;

::cpp::Function<  void(Int,float,float,float) > GL_obj::cffi_lime_gl_vertex_attrib3f;

::cpp::Function<  void(Int, ::hx::Object *) > GL_obj::cffi_lime_gl_vertex_attrib3fv;

::cpp::Function<  void(Int,float,float,float,float) > GL_obj::cffi_lime_gl_vertex_attrib4f;

::cpp::Function<  void(Int, ::hx::Object *) > GL_obj::cffi_lime_gl_vertex_attrib4fv;

::cpp::Function<  void(Int,Int,Int,Bool,Int,Int) > GL_obj::cffi_lime_gl_vertex_attrib_pointer;

::cpp::Function<  void(Int,Int,Int,Int) > GL_obj::cffi_lime_gl_viewport;


GL_obj::GL_obj()
{
}

bool GL_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"hint") ) { outValue = hint_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"clear") ) { outValue = clear_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"flush") ) { outValue = flush_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"enable") ) { outValue = enable_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"finish") ) { outValue = finish_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"version") ) { outValue = inCallProp == hx::paccAlways ? get_version() : version; return true; }
		if (HX_FIELD_EQ(inName,"disable") ) { outValue = disable_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"scissor") ) { outValue = scissor_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"cullFace") ) { outValue = cullFace_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getError") ) { outValue = getError_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isBuffer") ) { outValue = isBuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isShader") ) { outValue = isShader_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"viewport") ) { outValue = viewport_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"blendFunc") ) { outValue = blendFunc_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"colorMask") ) { outValue = colorMask_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"depthFunc") ) { outValue = depthFunc_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"depthMask") ) { outValue = depthMask_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"frontFace") ) { outValue = frontFace_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isEnabled") ) { outValue = isEnabled_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isProgram") ) { outValue = isProgram_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isTexture") ) { outValue = isTexture_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lineWidth") ) { outValue = lineWidth_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stencilOp") ) { outValue = stencilOp_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform1f") ) { outValue = uniform1f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform1i") ) { outValue = uniform1i_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform2f") ) { outValue = uniform2f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform2i") ) { outValue = uniform2i_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform3f") ) { outValue = uniform3f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform3i") ) { outValue = uniform3i_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform4f") ) { outValue = uniform4f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform4i") ) { outValue = uniform4i_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"bindBuffer") ) { outValue = bindBuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"blendColor") ) { outValue = blendColor_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"bufferData") ) { outValue = bufferData_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"clearColor") ) { outValue = clearColor_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"clearDepth") ) { outValue = clearDepth_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"depthRange") ) { outValue = depthRange_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"drawArrays") ) { outValue = drawArrays_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getUniform") ) { outValue = getUniform_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"readPixels") ) { outValue = readPixels_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"texImage2D") ) { outValue = texImage2D_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform1fv") ) { outValue = uniform1fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform1iv") ) { outValue = uniform1iv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform2fv") ) { outValue = uniform2fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform2iv") ) { outValue = uniform2iv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform3fv") ) { outValue = uniform3fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform3iv") ) { outValue = uniform3iv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform4fv") ) { outValue = uniform4fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniform4iv") ) { outValue = uniform4iv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"useProgram") ) { outValue = useProgram_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"bindTexture") ) { outValue = bindTexture_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"linkProgram") ) { outValue = linkProgram_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"pixelStorei") ) { outValue = pixelStorei_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stencilFunc") ) { outValue = stencilFunc_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stencilMask") ) { outValue = stencilMask_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_version") ) { outValue = get_version_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"attachShader") ) { outValue = attachShader_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"clearStencil") ) { outValue = clearStencil_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"createBuffer") ) { outValue = createBuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"createShader") ) { outValue = createShader_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteBuffer") ) { outValue = deleteBuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteShader") ) { outValue = deleteShader_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"detachShader") ) { outValue = detachShader_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"drawElements") ) { outValue = drawElements_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getExtension") ) { outValue = getExtension_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getParameter") ) { outValue = getParameter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"shaderSource") ) { outValue = shaderSource_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_hint") ) { outValue = lime_gl_hint_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"activeTexture") ) { outValue = activeTexture_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"blendEquation") ) { outValue = blendEquation_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"bufferSubData") ) { outValue = bufferSubData_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"compileShader") ) { outValue = compileShader_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"createProgram") ) { outValue = createProgram_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"createTexture") ) { outValue = createTexture_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteProgram") ) { outValue = deleteProgram_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteTexture") ) { outValue = deleteTexture_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isContextLost") ) { outValue = isContextLost_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isFramebuffer") ) { outValue = isFramebuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"polygonOffset") ) { outValue = polygonOffset_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"texParameterf") ) { outValue = texParameterf_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"texParameteri") ) { outValue = texParameteri_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"texSubImage2D") ) { outValue = texSubImage2D_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_clear") ) { outValue = lime_gl_clear_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_flush") ) { outValue = lime_gl_flush_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"copyTexImage2D") ) { outValue = copyTexImage2D_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"generateMipmap") ) { outValue = generateMipmap_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isRenderbuffer") ) { outValue = isRenderbuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sampleCoverage") ) { outValue = sampleCoverage_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"vertexAttrib1f") ) { outValue = vertexAttrib1f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"vertexAttrib2f") ) { outValue = vertexAttrib2f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"vertexAttrib3f") ) { outValue = vertexAttrib3f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"vertexAttrib4f") ) { outValue = vertexAttrib4f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_enable") ) { outValue = lime_gl_enable_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_finish") ) { outValue = lime_gl_finish_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"bindFramebuffer") ) { outValue = bindFramebuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getActiveAttrib") ) { outValue = getActiveAttrib_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getShaderSource") ) { outValue = getShaderSource_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getTexParameter") ) { outValue = getTexParameter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getVertexAttrib") ) { outValue = getVertexAttrib_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"validateProgram") ) { outValue = validateProgram_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"vertexAttrib1fv") ) { outValue = vertexAttrib1fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"vertexAttrib2fv") ) { outValue = vertexAttrib2fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"vertexAttrib3fv") ) { outValue = vertexAttrib3fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"vertexAttrib4fv") ) { outValue = vertexAttrib4fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_disable") ) { outValue = lime_gl_disable_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_scissor") ) { outValue = lime_gl_scissor_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_version") ) { outValue = lime_gl_version_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"__currentProgram") ) { outValue = _hx___currentProgram; return true; }
		if (HX_FIELD_EQ(inName,"bindRenderbuffer") ) { outValue = bindRenderbuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getActiveUniform") ) { outValue = getActiveUniform_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getShaderInfoLog") ) { outValue = getShaderInfoLog_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniformMatrix2fv") ) { outValue = uniformMatrix2fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniformMatrix3fv") ) { outValue = uniformMatrix3fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"uniformMatrix4fv") ) { outValue = uniformMatrix4fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_viewport") ) { outValue = lime_gl_viewport_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"blendFuncSeparate") ) { outValue = blendFuncSeparate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"copyTexSubImage2D") ) { outValue = copyTexSubImage2D_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"createFramebuffer") ) { outValue = createFramebuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteFramebuffer") ) { outValue = deleteFramebuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getAttribLocation") ) { outValue = getAttribLocation_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getProgramInfoLog") ) { outValue = getProgramInfoLog_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stencilOpSeparate") ) { outValue = stencilOpSeparate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_cull_face") ) { outValue = lime_gl_cull_face_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_error") ) { outValue = lime_gl_get_error_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_is_buffer") ) { outValue = lime_gl_is_buffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_is_shader") ) { outValue = lime_gl_is_shader_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform1f") ) { outValue = lime_gl_uniform1f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform1i") ) { outValue = lime_gl_uniform1i_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform2f") ) { outValue = lime_gl_uniform2f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform2i") ) { outValue = lime_gl_uniform2i_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform3f") ) { outValue = lime_gl_uniform3f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform3i") ) { outValue = lime_gl_uniform3i_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform4f") ) { outValue = lime_gl_uniform4f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform4i") ) { outValue = lime_gl_uniform4i_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_hint") ) { outValue = cffi_lime_gl_hint; return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"bindAttribLocation") ) { outValue = bindAttribLocation_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"createRenderbuffer") ) { outValue = createRenderbuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteRenderbuffer") ) { outValue = deleteRenderbuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getAttachedShaders") ) { outValue = getAttachedShaders_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getBufferParameter") ) { outValue = getBufferParameter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getShaderParameter") ) { outValue = getShaderParameter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getUniformLocation") ) { outValue = getUniformLocation_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_blend_func") ) { outValue = lime_gl_blend_func_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_color_mask") ) { outValue = lime_gl_color_mask_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_depth_func") ) { outValue = lime_gl_depth_func_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_depth_mask") ) { outValue = lime_gl_depth_mask_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_front_face") ) { outValue = lime_gl_front_face_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_is_enabled") ) { outValue = lime_gl_is_enabled_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_is_program") ) { outValue = lime_gl_is_program_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_is_texture") ) { outValue = lime_gl_is_texture_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_line_width") ) { outValue = lime_gl_line_width_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_stencil_op") ) { outValue = lime_gl_stencil_op_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform1fv") ) { outValue = lime_gl_uniform1fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform1iv") ) { outValue = lime_gl_uniform1iv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform2fv") ) { outValue = lime_gl_uniform2fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform2iv") ) { outValue = lime_gl_uniform2iv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform3fv") ) { outValue = lime_gl_uniform3fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform3iv") ) { outValue = lime_gl_uniform3iv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform4fv") ) { outValue = lime_gl_uniform4fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform4iv") ) { outValue = lime_gl_uniform4iv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_clear") ) { outValue = cffi_lime_gl_clear; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_flush") ) { outValue = cffi_lime_gl_flush; return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"getProgramParameter") ) { outValue = getProgramParameter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"renderbufferStorage") ) { outValue = renderbufferStorage_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stencilFuncSeparate") ) { outValue = stencilFuncSeparate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"stencilMaskSeparate") ) { outValue = stencilMaskSeparate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"vertexAttribPointer") ) { outValue = vertexAttribPointer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_bind_buffer") ) { outValue = lime_gl_bind_buffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_blend_color") ) { outValue = lime_gl_blend_color_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_buffer_data") ) { outValue = lime_gl_buffer_data_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_clear_color") ) { outValue = lime_gl_clear_color_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_clear_depth") ) { outValue = lime_gl_clear_depth_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_depth_range") ) { outValue = lime_gl_depth_range_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_draw_arrays") ) { outValue = lime_gl_draw_arrays_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_uniform") ) { outValue = lime_gl_get_uniform_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_read_pixels") ) { outValue = lime_gl_read_pixels_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_use_program") ) { outValue = lime_gl_use_program_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_enable") ) { outValue = cffi_lime_gl_enable; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_finish") ) { outValue = cffi_lime_gl_finish; return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"compressedTexImage2D") ) { outValue = compressedTexImage2D_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"framebufferTexture2D") ) { outValue = framebufferTexture2D_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getContextAttributes") ) { outValue = getContextAttributes_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_bind_texture") ) { outValue = lime_gl_bind_texture_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_link_program") ) { outValue = lime_gl_link_program_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_pixel_storei") ) { outValue = lime_gl_pixel_storei_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_stencil_func") ) { outValue = lime_gl_stencil_func_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_stencil_mask") ) { outValue = lime_gl_stencil_mask_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_tex_image_2d") ) { outValue = lime_gl_tex_image_2d_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_disable") ) { outValue = cffi_lime_gl_disable; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_scissor") ) { outValue = cffi_lime_gl_scissor; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_version") ) { outValue = cffi_lime_gl_version; return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"blendEquationSeparate") ) { outValue = blendEquationSeparate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getVertexAttribOffset") ) { outValue = getVertexAttribOffset_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_attach_shader") ) { outValue = lime_gl_attach_shader_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_clear_stencil") ) { outValue = lime_gl_clear_stencil_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_create_buffer") ) { outValue = lime_gl_create_buffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_create_shader") ) { outValue = lime_gl_create_shader_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_delete_buffer") ) { outValue = lime_gl_delete_buffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_delete_shader") ) { outValue = lime_gl_delete_shader_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_detach_shader") ) { outValue = lime_gl_detach_shader_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_draw_elements") ) { outValue = lime_gl_draw_elements_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_extension") ) { outValue = lime_gl_get_extension_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_parameter") ) { outValue = lime_gl_get_parameter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_shader_source") ) { outValue = lime_gl_shader_source_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_viewport") ) { outValue = cffi_lime_gl_viewport; return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"checkFramebufferStatus") ) { outValue = checkFramebufferStatus_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getSupportedExtensions") ) { outValue = getSupportedExtensions_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_active_texture") ) { outValue = lime_gl_active_texture_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_blend_equation") ) { outValue = lime_gl_blend_equation_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_compile_shader") ) { outValue = lime_gl_compile_shader_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_create_program") ) { outValue = lime_gl_create_program_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_create_texture") ) { outValue = lime_gl_create_texture_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_delete_program") ) { outValue = lime_gl_delete_program_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_delete_texture") ) { outValue = lime_gl_delete_texture_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_is_framebuffer") ) { outValue = lime_gl_is_framebuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_polygon_offset") ) { outValue = lime_gl_polygon_offset_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_tex_parameterf") ) { outValue = lime_gl_tex_parameterf_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_tex_parameteri") ) { outValue = lime_gl_tex_parameteri_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_uniform_matrix") ) { outValue = lime_gl_uniform_matrix_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_cull_face") ) { outValue = cffi_lime_gl_cull_face; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_error") ) { outValue = cffi_lime_gl_get_error; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_is_buffer") ) { outValue = cffi_lime_gl_is_buffer; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_is_shader") ) { outValue = cffi_lime_gl_is_shader; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform1f") ) { outValue = cffi_lime_gl_uniform1f; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform1i") ) { outValue = cffi_lime_gl_uniform1i; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform2f") ) { outValue = cffi_lime_gl_uniform2f; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform2i") ) { outValue = cffi_lime_gl_uniform2i; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform3f") ) { outValue = cffi_lime_gl_uniform3f; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform3i") ) { outValue = cffi_lime_gl_uniform3i; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform4f") ) { outValue = cffi_lime_gl_uniform4f; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform4i") ) { outValue = cffi_lime_gl_uniform4i; return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"compressedTexSubImage2D") ) { outValue = compressedTexSubImage2D_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"enableVertexAttribArray") ) { outValue = enableVertexAttribArray_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"framebufferRenderbuffer") ) { outValue = framebufferRenderbuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_buffer_sub_data") ) { outValue = lime_gl_buffer_sub_data_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_generate_mipmap") ) { outValue = lime_gl_generate_mipmap_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_is_renderbuffer") ) { outValue = lime_gl_is_renderbuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_sample_coverage") ) { outValue = lime_gl_sample_coverage_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_vertex_attrib1f") ) { outValue = lime_gl_vertex_attrib1f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_vertex_attrib2f") ) { outValue = lime_gl_vertex_attrib2f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_vertex_attrib3f") ) { outValue = lime_gl_vertex_attrib3f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_vertex_attrib4f") ) { outValue = lime_gl_vertex_attrib4f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_blend_func") ) { outValue = cffi_lime_gl_blend_func; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_color_mask") ) { outValue = cffi_lime_gl_color_mask; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_depth_func") ) { outValue = cffi_lime_gl_depth_func; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_depth_mask") ) { outValue = cffi_lime_gl_depth_mask; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_front_face") ) { outValue = cffi_lime_gl_front_face; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_is_enabled") ) { outValue = cffi_lime_gl_is_enabled; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_is_program") ) { outValue = cffi_lime_gl_is_program; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_is_texture") ) { outValue = cffi_lime_gl_is_texture; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_line_width") ) { outValue = cffi_lime_gl_line_width; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_stencil_op") ) { outValue = cffi_lime_gl_stencil_op; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform1fv") ) { outValue = cffi_lime_gl_uniform1fv; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform1iv") ) { outValue = cffi_lime_gl_uniform1iv; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform2fv") ) { outValue = cffi_lime_gl_uniform2fv; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform2iv") ) { outValue = cffi_lime_gl_uniform2iv; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform3fv") ) { outValue = cffi_lime_gl_uniform3fv; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform3iv") ) { outValue = cffi_lime_gl_uniform3iv; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform4fv") ) { outValue = cffi_lime_gl_uniform4fv; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform4iv") ) { outValue = cffi_lime_gl_uniform4iv; return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"disableVertexAttribArray") ) { outValue = disableVertexAttribArray_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getRenderbufferParameter") ) { outValue = getRenderbufferParameter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getShaderPrecisionFormat") ) { outValue = getShaderPrecisionFormat_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_bind_framebuffer") ) { outValue = lime_gl_bind_framebuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_tex_sub_image_2d") ) { outValue = lime_gl_tex_sub_image_2d_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_validate_program") ) { outValue = lime_gl_validate_program_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_vertex_attrib1fv") ) { outValue = lime_gl_vertex_attrib1fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_vertex_attrib2fv") ) { outValue = lime_gl_vertex_attrib2fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_vertex_attrib3fv") ) { outValue = lime_gl_vertex_attrib3fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_vertex_attrib4fv") ) { outValue = lime_gl_vertex_attrib4fv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_bind_buffer") ) { outValue = cffi_lime_gl_bind_buffer; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_blend_color") ) { outValue = cffi_lime_gl_blend_color; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_buffer_data") ) { outValue = cffi_lime_gl_buffer_data; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_clear_color") ) { outValue = cffi_lime_gl_clear_color; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_clear_depth") ) { outValue = cffi_lime_gl_clear_depth; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_depth_range") ) { outValue = cffi_lime_gl_depth_range; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_draw_arrays") ) { outValue = cffi_lime_gl_draw_arrays; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_uniform") ) { outValue = cffi_lime_gl_get_uniform; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_read_pixels") ) { outValue = cffi_lime_gl_read_pixels; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_use_program") ) { outValue = cffi_lime_gl_use_program; return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"lime_gl_bind_renderbuffer") ) { outValue = lime_gl_bind_renderbuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_copy_tex_image_2d") ) { outValue = lime_gl_copy_tex_image_2d_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_active_attrib") ) { outValue = lime_gl_get_active_attrib_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_shader_source") ) { outValue = lime_gl_get_shader_source_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_tex_parameter") ) { outValue = lime_gl_get_tex_parameter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_vertex_attrib") ) { outValue = lime_gl_get_vertex_attrib_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_bind_texture") ) { outValue = cffi_lime_gl_bind_texture; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_link_program") ) { outValue = cffi_lime_gl_link_program; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_pixel_storei") ) { outValue = cffi_lime_gl_pixel_storei; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_stencil_func") ) { outValue = cffi_lime_gl_stencil_func; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_stencil_mask") ) { outValue = cffi_lime_gl_stencil_mask; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_tex_image_2d") ) { outValue = cffi_lime_gl_tex_image_2d; return true; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"lime_gl_create_framebuffer") ) { outValue = lime_gl_create_framebuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_delete_framebuffer") ) { outValue = lime_gl_delete_framebuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_active_uniform") ) { outValue = lime_gl_get_active_uniform_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_attach_shader") ) { outValue = cffi_lime_gl_attach_shader; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_clear_stencil") ) { outValue = cffi_lime_gl_clear_stencil; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_create_buffer") ) { outValue = cffi_lime_gl_create_buffer; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_create_shader") ) { outValue = cffi_lime_gl_create_shader; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_delete_buffer") ) { outValue = cffi_lime_gl_delete_buffer; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_delete_shader") ) { outValue = cffi_lime_gl_delete_shader; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_detach_shader") ) { outValue = cffi_lime_gl_detach_shader; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_draw_elements") ) { outValue = cffi_lime_gl_draw_elements; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_extension") ) { outValue = cffi_lime_gl_get_extension; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_parameter") ) { outValue = cffi_lime_gl_get_parameter; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_shader_source") ) { outValue = cffi_lime_gl_shader_source; return true; }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"lime_gl_blend_func_separate") ) { outValue = lime_gl_blend_func_separate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_attrib_location") ) { outValue = lime_gl_get_attrib_location_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_shader_info_log") ) { outValue = lime_gl_get_shader_info_log_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_stencil_op_separate") ) { outValue = lime_gl_stencil_op_separate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_active_texture") ) { outValue = cffi_lime_gl_active_texture; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_blend_equation") ) { outValue = cffi_lime_gl_blend_equation; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_compile_shader") ) { outValue = cffi_lime_gl_compile_shader; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_create_program") ) { outValue = cffi_lime_gl_create_program; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_create_texture") ) { outValue = cffi_lime_gl_create_texture; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_delete_program") ) { outValue = cffi_lime_gl_delete_program; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_delete_texture") ) { outValue = cffi_lime_gl_delete_texture; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_is_framebuffer") ) { outValue = cffi_lime_gl_is_framebuffer; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_polygon_offset") ) { outValue = cffi_lime_gl_polygon_offset; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_tex_parameterf") ) { outValue = cffi_lime_gl_tex_parameterf; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_tex_parameteri") ) { outValue = cffi_lime_gl_tex_parameteri; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform_matrix") ) { outValue = cffi_lime_gl_uniform_matrix; return true; }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"lime_gl_bind_attrib_location") ) { outValue = lime_gl_bind_attrib_location_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_create_render_buffer") ) { outValue = lime_gl_create_render_buffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_delete_render_buffer") ) { outValue = lime_gl_delete_render_buffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_buffer_parameter") ) { outValue = lime_gl_get_buffer_parameter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_program_info_log") ) { outValue = lime_gl_get_program_info_log_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_shader_parameter") ) { outValue = lime_gl_get_shader_parameter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_uniform_location") ) { outValue = lime_gl_get_uniform_location_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_renderbuffer_storage") ) { outValue = lime_gl_renderbuffer_storage_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_buffer_sub_data") ) { outValue = cffi_lime_gl_buffer_sub_data; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_generate_mipmap") ) { outValue = cffi_lime_gl_generate_mipmap; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_is_renderbuffer") ) { outValue = cffi_lime_gl_is_renderbuffer; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_sample_coverage") ) { outValue = cffi_lime_gl_sample_coverage; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_vertex_attrib1f") ) { outValue = cffi_lime_gl_vertex_attrib1f; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_vertex_attrib2f") ) { outValue = cffi_lime_gl_vertex_attrib2f; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_vertex_attrib3f") ) { outValue = cffi_lime_gl_vertex_attrib3f; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_vertex_attrib4f") ) { outValue = cffi_lime_gl_vertex_attrib4f; return true; }
		break;
	case 29:
		if (HX_FIELD_EQ(inName,"lime_gl_copy_tex_sub_image_2d") ) { outValue = lime_gl_copy_tex_sub_image_2d_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_framebuffer_texture2D") ) { outValue = lime_gl_framebuffer_texture2D_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_program_parameter") ) { outValue = lime_gl_get_program_parameter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_stencil_func_separate") ) { outValue = lime_gl_stencil_func_separate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_stencil_mask_separate") ) { outValue = lime_gl_stencil_mask_separate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_vertex_attrib_pointer") ) { outValue = lime_gl_vertex_attrib_pointer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_bind_framebuffer") ) { outValue = cffi_lime_gl_bind_framebuffer; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_tex_sub_image_2d") ) { outValue = cffi_lime_gl_tex_sub_image_2d; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_validate_program") ) { outValue = cffi_lime_gl_validate_program; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_vertex_attrib1fv") ) { outValue = cffi_lime_gl_vertex_attrib1fv; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_vertex_attrib2fv") ) { outValue = cffi_lime_gl_vertex_attrib2fv; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_vertex_attrib3fv") ) { outValue = cffi_lime_gl_vertex_attrib3fv; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_vertex_attrib4fv") ) { outValue = cffi_lime_gl_vertex_attrib4fv; return true; }
		break;
	case 30:
		if (HX_FIELD_EQ(inName,"lime_gl_get_context_attributes") ) { outValue = lime_gl_get_context_attributes_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_bind_renderbuffer") ) { outValue = cffi_lime_gl_bind_renderbuffer; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_copy_tex_image_2d") ) { outValue = cffi_lime_gl_copy_tex_image_2d; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_active_attrib") ) { outValue = cffi_lime_gl_get_active_attrib; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_shader_source") ) { outValue = cffi_lime_gl_get_shader_source; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_tex_parameter") ) { outValue = cffi_lime_gl_get_tex_parameter; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_vertex_attrib") ) { outValue = cffi_lime_gl_get_vertex_attrib; return true; }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"lime_gl_blend_equation_separate") ) { outValue = lime_gl_blend_equation_separate_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_compressed_tex_image_2d") ) { outValue = lime_gl_compressed_tex_image_2d_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_create_framebuffer") ) { outValue = cffi_lime_gl_create_framebuffer; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_delete_framebuffer") ) { outValue = cffi_lime_gl_delete_framebuffer; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_active_uniform") ) { outValue = cffi_lime_gl_get_active_uniform; return true; }
		break;
	case 32:
		if (HX_FIELD_EQ(inName,"lime_gl_check_framebuffer_status") ) { outValue = lime_gl_check_framebuffer_status_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_framebuffer_renderbuffer") ) { outValue = lime_gl_framebuffer_renderbuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_supported_extensions") ) { outValue = lime_gl_get_supported_extensions_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_vertex_attrib_offset") ) { outValue = lime_gl_get_vertex_attrib_offset_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_blend_func_separate") ) { outValue = cffi_lime_gl_blend_func_separate; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_attrib_location") ) { outValue = cffi_lime_gl_get_attrib_location; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_shader_info_log") ) { outValue = cffi_lime_gl_get_shader_info_log; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_stencil_op_separate") ) { outValue = cffi_lime_gl_stencil_op_separate; return true; }
		break;
	case 33:
		if (HX_FIELD_EQ(inName,"getFramebufferAttachmentParameter") ) { outValue = getFramebufferAttachmentParameter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_bind_attrib_location") ) { outValue = cffi_lime_gl_bind_attrib_location; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_create_render_buffer") ) { outValue = cffi_lime_gl_create_render_buffer; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_delete_render_buffer") ) { outValue = cffi_lime_gl_delete_render_buffer; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_buffer_parameter") ) { outValue = cffi_lime_gl_get_buffer_parameter; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_program_info_log") ) { outValue = cffi_lime_gl_get_program_info_log; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_shader_parameter") ) { outValue = cffi_lime_gl_get_shader_parameter; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_uniform_location") ) { outValue = cffi_lime_gl_get_uniform_location; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_renderbuffer_storage") ) { outValue = cffi_lime_gl_renderbuffer_storage; return true; }
		break;
	case 34:
		if (HX_FIELD_EQ(inName,"lime_gl_enable_vertex_attrib_array") ) { outValue = lime_gl_enable_vertex_attrib_array_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_copy_tex_sub_image_2d") ) { outValue = cffi_lime_gl_copy_tex_sub_image_2d; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_framebuffer_texture2D") ) { outValue = cffi_lime_gl_framebuffer_texture2D; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_program_parameter") ) { outValue = cffi_lime_gl_get_program_parameter; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_stencil_func_separate") ) { outValue = cffi_lime_gl_stencil_func_separate; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_stencil_mask_separate") ) { outValue = cffi_lime_gl_stencil_mask_separate; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_vertex_attrib_pointer") ) { outValue = cffi_lime_gl_vertex_attrib_pointer; return true; }
		break;
	case 35:
		if (HX_FIELD_EQ(inName,"lime_gl_compressed_tex_sub_image_2d") ) { outValue = lime_gl_compressed_tex_sub_image_2d_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_disable_vertex_attrib_array") ) { outValue = lime_gl_disable_vertex_attrib_array_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_render_buffer_parameter") ) { outValue = lime_gl_get_render_buffer_parameter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lime_gl_get_shader_precision_format") ) { outValue = lime_gl_get_shader_precision_format_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_context_attributes") ) { outValue = cffi_lime_gl_get_context_attributes; return true; }
		break;
	case 36:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_blend_equation_separate") ) { outValue = cffi_lime_gl_blend_equation_separate; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_compressed_tex_image_2d") ) { outValue = cffi_lime_gl_compressed_tex_image_2d; return true; }
		break;
	case 37:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_check_framebuffer_status") ) { outValue = cffi_lime_gl_check_framebuffer_status; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_framebuffer_renderbuffer") ) { outValue = cffi_lime_gl_framebuffer_renderbuffer; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_supported_extensions") ) { outValue = cffi_lime_gl_get_supported_extensions; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_vertex_attrib_offset") ) { outValue = cffi_lime_gl_get_vertex_attrib_offset; return true; }
		break;
	case 39:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_enable_vertex_attrib_array") ) { outValue = cffi_lime_gl_enable_vertex_attrib_array; return true; }
		break;
	case 40:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_compressed_tex_sub_image_2d") ) { outValue = cffi_lime_gl_compressed_tex_sub_image_2d; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_disable_vertex_attrib_array") ) { outValue = cffi_lime_gl_disable_vertex_attrib_array; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_render_buffer_parameter") ) { outValue = cffi_lime_gl_get_render_buffer_parameter; return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_shader_precision_format") ) { outValue = cffi_lime_gl_get_shader_precision_format; return true; }
		break;
	case 44:
		if (HX_FIELD_EQ(inName,"lime_gl_get_framebuffer_attachment_parameter") ) { outValue = lime_gl_get_framebuffer_attachment_parameter_dyn(); return true; }
		break;
	case 49:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_framebuffer_attachment_parameter") ) { outValue = cffi_lime_gl_get_framebuffer_attachment_parameter; return true; }
	}
	return false;
}

bool GL_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"version") ) { version=ioValue.Cast< Int >(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"__currentProgram") ) { _hx___currentProgram=ioValue.Cast<  ::lime::graphics::opengl::GLProgram >(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_hint") ) { cffi_lime_gl_hint=ioValue.Cast< ::cpp::Function<  void(Int,Int) > >(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_clear") ) { cffi_lime_gl_clear=ioValue.Cast< ::cpp::Function<  void(Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_flush") ) { cffi_lime_gl_flush=ioValue.Cast< ::cpp::Function<  void() > >(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_enable") ) { cffi_lime_gl_enable=ioValue.Cast< ::cpp::Function<  void(Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_finish") ) { cffi_lime_gl_finish=ioValue.Cast< ::cpp::Function<  void() > >(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_disable") ) { cffi_lime_gl_disable=ioValue.Cast< ::cpp::Function<  void(Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_scissor") ) { cffi_lime_gl_scissor=ioValue.Cast< ::cpp::Function<  void(Int,Int,Int,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_version") ) { cffi_lime_gl_version=ioValue.Cast< ::cpp::Function<  ::String() > >(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_viewport") ) { cffi_lime_gl_viewport=ioValue.Cast< ::cpp::Function<  void(Int,Int,Int,Int) > >(); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_cull_face") ) { cffi_lime_gl_cull_face=ioValue.Cast< ::cpp::Function<  void(Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_error") ) { cffi_lime_gl_get_error=ioValue.Cast< ::cpp::Function<  Int() > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_is_buffer") ) { cffi_lime_gl_is_buffer=ioValue.Cast< ::cpp::Function<  Bool( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_is_shader") ) { cffi_lime_gl_is_shader=ioValue.Cast< ::cpp::Function<  Bool( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform1f") ) { cffi_lime_gl_uniform1f=ioValue.Cast< ::cpp::Function<  void(Int,float) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform1i") ) { cffi_lime_gl_uniform1i=ioValue.Cast< ::cpp::Function<  void(Int,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform2f") ) { cffi_lime_gl_uniform2f=ioValue.Cast< ::cpp::Function<  void(Int,float,float) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform2i") ) { cffi_lime_gl_uniform2i=ioValue.Cast< ::cpp::Function<  void(Int,Int,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform3f") ) { cffi_lime_gl_uniform3f=ioValue.Cast< ::cpp::Function<  void(Int,float,float,float) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform3i") ) { cffi_lime_gl_uniform3i=ioValue.Cast< ::cpp::Function<  void(Int,Int,Int,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform4f") ) { cffi_lime_gl_uniform4f=ioValue.Cast< ::cpp::Function<  void(Int,float,float,float,float) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform4i") ) { cffi_lime_gl_uniform4i=ioValue.Cast< ::cpp::Function<  void(Int,Int,Int,Int,Int) > >(); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_blend_func") ) { cffi_lime_gl_blend_func=ioValue.Cast< ::cpp::Function<  void(Int,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_color_mask") ) { cffi_lime_gl_color_mask=ioValue.Cast< ::cpp::Function<  void(Bool,Bool,Bool,Bool) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_depth_func") ) { cffi_lime_gl_depth_func=ioValue.Cast< ::cpp::Function<  void(Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_depth_mask") ) { cffi_lime_gl_depth_mask=ioValue.Cast< ::cpp::Function<  void(Bool) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_front_face") ) { cffi_lime_gl_front_face=ioValue.Cast< ::cpp::Function<  void(Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_is_enabled") ) { cffi_lime_gl_is_enabled=ioValue.Cast< ::cpp::Function<  Bool(Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_is_program") ) { cffi_lime_gl_is_program=ioValue.Cast< ::cpp::Function<  Bool( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_is_texture") ) { cffi_lime_gl_is_texture=ioValue.Cast< ::cpp::Function<  Bool( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_line_width") ) { cffi_lime_gl_line_width=ioValue.Cast< ::cpp::Function<  void(float) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_stencil_op") ) { cffi_lime_gl_stencil_op=ioValue.Cast< ::cpp::Function<  void(Int,Int,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform1fv") ) { cffi_lime_gl_uniform1fv=ioValue.Cast< ::cpp::Function<  void(Int, ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform1iv") ) { cffi_lime_gl_uniform1iv=ioValue.Cast< ::cpp::Function<  void(Int, ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform2fv") ) { cffi_lime_gl_uniform2fv=ioValue.Cast< ::cpp::Function<  void(Int, ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform2iv") ) { cffi_lime_gl_uniform2iv=ioValue.Cast< ::cpp::Function<  void(Int, ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform3fv") ) { cffi_lime_gl_uniform3fv=ioValue.Cast< ::cpp::Function<  void(Int, ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform3iv") ) { cffi_lime_gl_uniform3iv=ioValue.Cast< ::cpp::Function<  void(Int, ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform4fv") ) { cffi_lime_gl_uniform4fv=ioValue.Cast< ::cpp::Function<  void(Int, ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform4iv") ) { cffi_lime_gl_uniform4iv=ioValue.Cast< ::cpp::Function<  void(Int, ::hx::Object *) > >(); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_bind_buffer") ) { cffi_lime_gl_bind_buffer=ioValue.Cast< ::cpp::Function<  void(Int, ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_blend_color") ) { cffi_lime_gl_blend_color=ioValue.Cast< ::cpp::Function<  void(float,float,float,float) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_buffer_data") ) { cffi_lime_gl_buffer_data=ioValue.Cast< ::cpp::Function<  void(Int, ::hx::Object *,Int,Int,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_clear_color") ) { cffi_lime_gl_clear_color=ioValue.Cast< ::cpp::Function<  void(float,float,float,float) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_clear_depth") ) { cffi_lime_gl_clear_depth=ioValue.Cast< ::cpp::Function<  void(float) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_depth_range") ) { cffi_lime_gl_depth_range=ioValue.Cast< ::cpp::Function<  void(float,float) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_draw_arrays") ) { cffi_lime_gl_draw_arrays=ioValue.Cast< ::cpp::Function<  void(Int,Int,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_uniform") ) { cffi_lime_gl_get_uniform=ioValue.Cast< ::cpp::Function<   ::hx::Object *( ::hx::Object *,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_read_pixels") ) { cffi_lime_gl_read_pixels=ioValue.Cast< ::cpp::Function<  void(Int,Int,Int,Int,Int,Int, ::hx::Object *,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_use_program") ) { cffi_lime_gl_use_program=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *) > >(); return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_bind_texture") ) { cffi_lime_gl_bind_texture=ioValue.Cast< ::cpp::Function<  void(Int, ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_link_program") ) { cffi_lime_gl_link_program=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_pixel_storei") ) { cffi_lime_gl_pixel_storei=ioValue.Cast< ::cpp::Function<  void(Int,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_stencil_func") ) { cffi_lime_gl_stencil_func=ioValue.Cast< ::cpp::Function<  void(Int,Int,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_stencil_mask") ) { cffi_lime_gl_stencil_mask=ioValue.Cast< ::cpp::Function<  void(Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_tex_image_2d") ) { cffi_lime_gl_tex_image_2d=ioValue.Cast< ::cpp::Function<  void(Int,Int,Int,Int,Int,Int,Int,Int, ::hx::Object *,Int) > >(); return true; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_attach_shader") ) { cffi_lime_gl_attach_shader=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_clear_stencil") ) { cffi_lime_gl_clear_stencil=ioValue.Cast< ::cpp::Function<  void(Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_create_buffer") ) { cffi_lime_gl_create_buffer=ioValue.Cast< ::cpp::Function<   ::hx::Object *() > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_create_shader") ) { cffi_lime_gl_create_shader=ioValue.Cast< ::cpp::Function<   ::hx::Object *(Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_delete_buffer") ) { cffi_lime_gl_delete_buffer=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_delete_shader") ) { cffi_lime_gl_delete_shader=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_detach_shader") ) { cffi_lime_gl_detach_shader=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *, ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_draw_elements") ) { cffi_lime_gl_draw_elements=ioValue.Cast< ::cpp::Function<  void(Int,Int,Int,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_extension") ) { cffi_lime_gl_get_extension=ioValue.Cast< ::cpp::Function<   ::hx::Object *(::String) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_parameter") ) { cffi_lime_gl_get_parameter=ioValue.Cast< ::cpp::Function<   ::hx::Object *(Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_shader_source") ) { cffi_lime_gl_shader_source=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *,::String) > >(); return true; }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_active_texture") ) { cffi_lime_gl_active_texture=ioValue.Cast< ::cpp::Function<  void(Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_blend_equation") ) { cffi_lime_gl_blend_equation=ioValue.Cast< ::cpp::Function<  void(Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_compile_shader") ) { cffi_lime_gl_compile_shader=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_create_program") ) { cffi_lime_gl_create_program=ioValue.Cast< ::cpp::Function<   ::hx::Object *() > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_create_texture") ) { cffi_lime_gl_create_texture=ioValue.Cast< ::cpp::Function<   ::hx::Object *() > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_delete_program") ) { cffi_lime_gl_delete_program=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_delete_texture") ) { cffi_lime_gl_delete_texture=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_is_framebuffer") ) { cffi_lime_gl_is_framebuffer=ioValue.Cast< ::cpp::Function<  Bool( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_polygon_offset") ) { cffi_lime_gl_polygon_offset=ioValue.Cast< ::cpp::Function<  void(float,float) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_tex_parameterf") ) { cffi_lime_gl_tex_parameterf=ioValue.Cast< ::cpp::Function<  void(Int,Int,float) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_tex_parameteri") ) { cffi_lime_gl_tex_parameteri=ioValue.Cast< ::cpp::Function<  void(Int,Int,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_uniform_matrix") ) { cffi_lime_gl_uniform_matrix=ioValue.Cast< ::cpp::Function<  void(Int,Bool, ::hx::Object *,Int) > >(); return true; }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_buffer_sub_data") ) { cffi_lime_gl_buffer_sub_data=ioValue.Cast< ::cpp::Function<  void(Int,Int, ::hx::Object *,Int,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_generate_mipmap") ) { cffi_lime_gl_generate_mipmap=ioValue.Cast< ::cpp::Function<  void(Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_is_renderbuffer") ) { cffi_lime_gl_is_renderbuffer=ioValue.Cast< ::cpp::Function<  Bool( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_sample_coverage") ) { cffi_lime_gl_sample_coverage=ioValue.Cast< ::cpp::Function<  void(float,Bool) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_vertex_attrib1f") ) { cffi_lime_gl_vertex_attrib1f=ioValue.Cast< ::cpp::Function<  void(Int,float) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_vertex_attrib2f") ) { cffi_lime_gl_vertex_attrib2f=ioValue.Cast< ::cpp::Function<  void(Int,float,float) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_vertex_attrib3f") ) { cffi_lime_gl_vertex_attrib3f=ioValue.Cast< ::cpp::Function<  void(Int,float,float,float) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_vertex_attrib4f") ) { cffi_lime_gl_vertex_attrib4f=ioValue.Cast< ::cpp::Function<  void(Int,float,float,float,float) > >(); return true; }
		break;
	case 29:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_bind_framebuffer") ) { cffi_lime_gl_bind_framebuffer=ioValue.Cast< ::cpp::Function<  void(Int, ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_tex_sub_image_2d") ) { cffi_lime_gl_tex_sub_image_2d=ioValue.Cast< ::cpp::Function<  void(Int,Int,Int,Int,Int,Int,Int,Int, ::hx::Object *,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_validate_program") ) { cffi_lime_gl_validate_program=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_vertex_attrib1fv") ) { cffi_lime_gl_vertex_attrib1fv=ioValue.Cast< ::cpp::Function<  void(Int, ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_vertex_attrib2fv") ) { cffi_lime_gl_vertex_attrib2fv=ioValue.Cast< ::cpp::Function<  void(Int, ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_vertex_attrib3fv") ) { cffi_lime_gl_vertex_attrib3fv=ioValue.Cast< ::cpp::Function<  void(Int, ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_vertex_attrib4fv") ) { cffi_lime_gl_vertex_attrib4fv=ioValue.Cast< ::cpp::Function<  void(Int, ::hx::Object *) > >(); return true; }
		break;
	case 30:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_bind_renderbuffer") ) { cffi_lime_gl_bind_renderbuffer=ioValue.Cast< ::cpp::Function<  void(Int, ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_copy_tex_image_2d") ) { cffi_lime_gl_copy_tex_image_2d=ioValue.Cast< ::cpp::Function<  void(Int,Int,Int,Int,Int,Int,Int,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_active_attrib") ) { cffi_lime_gl_get_active_attrib=ioValue.Cast< ::cpp::Function<   ::hx::Object *( ::hx::Object *,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_shader_source") ) { cffi_lime_gl_get_shader_source=ioValue.Cast< ::cpp::Function<   ::hx::Object *( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_tex_parameter") ) { cffi_lime_gl_get_tex_parameter=ioValue.Cast< ::cpp::Function<  Int(Int,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_vertex_attrib") ) { cffi_lime_gl_get_vertex_attrib=ioValue.Cast< ::cpp::Function<  Int(Int,Int) > >(); return true; }
		break;
	case 31:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_create_framebuffer") ) { cffi_lime_gl_create_framebuffer=ioValue.Cast< ::cpp::Function<   ::hx::Object *() > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_delete_framebuffer") ) { cffi_lime_gl_delete_framebuffer=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_active_uniform") ) { cffi_lime_gl_get_active_uniform=ioValue.Cast< ::cpp::Function<   ::hx::Object *( ::hx::Object *,Int) > >(); return true; }
		break;
	case 32:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_blend_func_separate") ) { cffi_lime_gl_blend_func_separate=ioValue.Cast< ::cpp::Function<  void(Int,Int,Int,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_attrib_location") ) { cffi_lime_gl_get_attrib_location=ioValue.Cast< ::cpp::Function<  Int( ::hx::Object *,::String) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_shader_info_log") ) { cffi_lime_gl_get_shader_info_log=ioValue.Cast< ::cpp::Function<  ::String( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_stencil_op_separate") ) { cffi_lime_gl_stencil_op_separate=ioValue.Cast< ::cpp::Function<  void(Int,Int,Int,Int) > >(); return true; }
		break;
	case 33:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_bind_attrib_location") ) { cffi_lime_gl_bind_attrib_location=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *,Int,::String) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_create_render_buffer") ) { cffi_lime_gl_create_render_buffer=ioValue.Cast< ::cpp::Function<   ::hx::Object *() > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_delete_render_buffer") ) { cffi_lime_gl_delete_render_buffer=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_buffer_parameter") ) { cffi_lime_gl_get_buffer_parameter=ioValue.Cast< ::cpp::Function<  Int(Int,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_program_info_log") ) { cffi_lime_gl_get_program_info_log=ioValue.Cast< ::cpp::Function<  ::String( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_shader_parameter") ) { cffi_lime_gl_get_shader_parameter=ioValue.Cast< ::cpp::Function<  Int( ::hx::Object *,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_uniform_location") ) { cffi_lime_gl_get_uniform_location=ioValue.Cast< ::cpp::Function<  Int( ::hx::Object *,::String) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_renderbuffer_storage") ) { cffi_lime_gl_renderbuffer_storage=ioValue.Cast< ::cpp::Function<  void(Int,Int,Int,Int) > >(); return true; }
		break;
	case 34:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_copy_tex_sub_image_2d") ) { cffi_lime_gl_copy_tex_sub_image_2d=ioValue.Cast< ::cpp::Function<  void(Int,Int,Int,Int,Int,Int,Int,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_framebuffer_texture2D") ) { cffi_lime_gl_framebuffer_texture2D=ioValue.Cast< ::cpp::Function<  void(Int,Int,Int, ::hx::Object *,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_program_parameter") ) { cffi_lime_gl_get_program_parameter=ioValue.Cast< ::cpp::Function<  Int( ::hx::Object *,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_stencil_func_separate") ) { cffi_lime_gl_stencil_func_separate=ioValue.Cast< ::cpp::Function<  void(Int,Int,Int,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_stencil_mask_separate") ) { cffi_lime_gl_stencil_mask_separate=ioValue.Cast< ::cpp::Function<  void(Int,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_vertex_attrib_pointer") ) { cffi_lime_gl_vertex_attrib_pointer=ioValue.Cast< ::cpp::Function<  void(Int,Int,Int,Bool,Int,Int) > >(); return true; }
		break;
	case 35:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_context_attributes") ) { cffi_lime_gl_get_context_attributes=ioValue.Cast< ::cpp::Function<   ::hx::Object *() > >(); return true; }
		break;
	case 36:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_blend_equation_separate") ) { cffi_lime_gl_blend_equation_separate=ioValue.Cast< ::cpp::Function<  void(Int,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_compressed_tex_image_2d") ) { cffi_lime_gl_compressed_tex_image_2d=ioValue.Cast< ::cpp::Function<  void(Int,Int,Int,Int,Int,Int, ::hx::Object *,Int) > >(); return true; }
		break;
	case 37:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_check_framebuffer_status") ) { cffi_lime_gl_check_framebuffer_status=ioValue.Cast< ::cpp::Function<  Int(Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_framebuffer_renderbuffer") ) { cffi_lime_gl_framebuffer_renderbuffer=ioValue.Cast< ::cpp::Function<  void(Int,Int,Int, ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_supported_extensions") ) { cffi_lime_gl_get_supported_extensions=ioValue.Cast< ::cpp::Function<  void( ::hx::Object *) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_vertex_attrib_offset") ) { cffi_lime_gl_get_vertex_attrib_offset=ioValue.Cast< ::cpp::Function<  Int(Int,Int) > >(); return true; }
		break;
	case 39:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_enable_vertex_attrib_array") ) { cffi_lime_gl_enable_vertex_attrib_array=ioValue.Cast< ::cpp::Function<  void(Int) > >(); return true; }
		break;
	case 40:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_compressed_tex_sub_image_2d") ) { cffi_lime_gl_compressed_tex_sub_image_2d=ioValue.Cast< ::cpp::Function<  void(Int,Int,Int,Int,Int,Int,Int, ::hx::Object *,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_disable_vertex_attrib_array") ) { cffi_lime_gl_disable_vertex_attrib_array=ioValue.Cast< ::cpp::Function<  void(Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_render_buffer_parameter") ) { cffi_lime_gl_get_render_buffer_parameter=ioValue.Cast< ::cpp::Function<  Int(Int,Int) > >(); return true; }
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_shader_precision_format") ) { cffi_lime_gl_get_shader_precision_format=ioValue.Cast< ::cpp::Function<   ::hx::Object *(Int,Int) > >(); return true; }
		break;
	case 49:
		if (HX_FIELD_EQ(inName,"cffi_lime_gl_get_framebuffer_attachment_parameter") ) { cffi_lime_gl_get_framebuffer_attachment_parameter=ioValue.Cast< ::cpp::Function<  Int(Int,Int,Int) > >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *GL_obj_sMemberStorageInfo = 0;
static hx::StaticInfo GL_obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &GL_obj::DEPTH_BUFFER_BIT,HX_HCSTRING("DEPTH_BUFFER_BIT","\xca","\x5b","\xce","\xc6")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_BUFFER_BIT,HX_HCSTRING("STENCIL_BUFFER_BIT","\x71","\x93","\x29","\xde")},
	{hx::fsInt,(void *) &GL_obj::COLOR_BUFFER_BIT,HX_HCSTRING("COLOR_BUFFER_BIT","\x6a","\xf7","\x74","\xfb")},
	{hx::fsInt,(void *) &GL_obj::POINTS,HX_HCSTRING("POINTS","\x23","\xbe","\xb0","\xa9")},
	{hx::fsInt,(void *) &GL_obj::LINES,HX_HCSTRING("LINES","\xdf","\x15","\xf0","\xf2")},
	{hx::fsInt,(void *) &GL_obj::LINE_LOOP,HX_HCSTRING("LINE_LOOP","\xcf","\x55","\xc1","\x16")},
	{hx::fsInt,(void *) &GL_obj::LINE_STRIP,HX_HCSTRING("LINE_STRIP","\xed","\x20","\x88","\xdd")},
	{hx::fsInt,(void *) &GL_obj::TRIANGLES,HX_HCSTRING("TRIANGLES","\x8b","\xa0","\x99","\x7a")},
	{hx::fsInt,(void *) &GL_obj::TRIANGLE_STRIP,HX_HCSTRING("TRIANGLE_STRIP","\xc1","\x66","\x6c","\xf6")},
	{hx::fsInt,(void *) &GL_obj::TRIANGLE_FAN,HX_HCSTRING("TRIANGLE_FAN","\x7c","\xee","\x2e","\x91")},
	{hx::fsInt,(void *) &GL_obj::ZERO,HX_HCSTRING("ZERO","\x28","\xd7","\xb1","\x3b")},
	{hx::fsInt,(void *) &GL_obj::ONE,HX_HCSTRING("ONE","\x46","\x36","\x3c","\x00")},
	{hx::fsInt,(void *) &GL_obj::SRC_COLOR,HX_HCSTRING("SRC_COLOR","\x48","\x9e","\xbd","\x5c")},
	{hx::fsInt,(void *) &GL_obj::ONE_MINUS_SRC_COLOR,HX_HCSTRING("ONE_MINUS_SRC_COLOR","\x20","\x3b","\xe1","\x48")},
	{hx::fsInt,(void *) &GL_obj::SRC_ALPHA,HX_HCSTRING("SRC_ALPHA","\x43","\xd4","\xf7","\x33")},
	{hx::fsInt,(void *) &GL_obj::ONE_MINUS_SRC_ALPHA,HX_HCSTRING("ONE_MINUS_SRC_ALPHA","\x1b","\x71","\x1b","\x20")},
	{hx::fsInt,(void *) &GL_obj::DST_ALPHA,HX_HCSTRING("DST_ALPHA","\x24","\x02","\xf2","\xd3")},
	{hx::fsInt,(void *) &GL_obj::ONE_MINUS_DST_ALPHA,HX_HCSTRING("ONE_MINUS_DST_ALPHA","\xfc","\x9e","\x15","\xc0")},
	{hx::fsInt,(void *) &GL_obj::DST_COLOR,HX_HCSTRING("DST_COLOR","\x29","\xcc","\xb7","\xfc")},
	{hx::fsInt,(void *) &GL_obj::ONE_MINUS_DST_COLOR,HX_HCSTRING("ONE_MINUS_DST_COLOR","\x01","\x69","\xdb","\xe8")},
	{hx::fsInt,(void *) &GL_obj::SRC_ALPHA_SATURATE,HX_HCSTRING("SRC_ALPHA_SATURATE","\xab","\xe2","\x3d","\x33")},
	{hx::fsInt,(void *) &GL_obj::FUNC_ADD,HX_HCSTRING("FUNC_ADD","\x46","\x78","\x17","\x75")},
	{hx::fsInt,(void *) &GL_obj::BLEND_EQUATION,HX_HCSTRING("BLEND_EQUATION","\x9a","\x14","\x92","\x71")},
	{hx::fsInt,(void *) &GL_obj::BLEND_EQUATION_RGB,HX_HCSTRING("BLEND_EQUATION_RGB","\x88","\x25","\xeb","\x90")},
	{hx::fsInt,(void *) &GL_obj::BLEND_EQUATION_ALPHA,HX_HCSTRING("BLEND_EQUATION_ALPHA","\x99","\xaa","\xae","\x37")},
	{hx::fsInt,(void *) &GL_obj::FUNC_SUBTRACT,HX_HCSTRING("FUNC_SUBTRACT","\xaf","\xc0","\xa0","\x17")},
	{hx::fsInt,(void *) &GL_obj::FUNC_REVERSE_SUBTRACT,HX_HCSTRING("FUNC_REVERSE_SUBTRACT","\xcc","\x8d","\xef","\xf3")},
	{hx::fsInt,(void *) &GL_obj::BLEND_DST_RGB,HX_HCSTRING("BLEND_DST_RGB","\x05","\x87","\xf5","\xec")},
	{hx::fsInt,(void *) &GL_obj::BLEND_SRC_RGB,HX_HCSTRING("BLEND_SRC_RGB","\x64","\x43","\x8c","\x2c")},
	{hx::fsInt,(void *) &GL_obj::BLEND_DST_ALPHA,HX_HCSTRING("BLEND_DST_ALPHA","\x56","\x25","\x32","\x74")},
	{hx::fsInt,(void *) &GL_obj::BLEND_SRC_ALPHA,HX_HCSTRING("BLEND_SRC_ALPHA","\x75","\xf7","\x37","\xd4")},
	{hx::fsInt,(void *) &GL_obj::CONSTANT_COLOR,HX_HCSTRING("CONSTANT_COLOR","\xe8","\x64","\x8a","\xc8")},
	{hx::fsInt,(void *) &GL_obj::ONE_MINUS_CONSTANT_COLOR,HX_HCSTRING("ONE_MINUS_CONSTANT_COLOR","\x10","\x39","\xe7","\x06")},
	{hx::fsInt,(void *) &GL_obj::CONSTANT_ALPHA,HX_HCSTRING("CONSTANT_ALPHA","\xe3","\x9a","\xc4","\x9f")},
	{hx::fsInt,(void *) &GL_obj::ONE_MINUS_CONSTANT_ALPHA,HX_HCSTRING("ONE_MINUS_CONSTANT_ALPHA","\x0b","\x6f","\x21","\xde")},
	{hx::fsInt,(void *) &GL_obj::BLEND_COLOR,HX_HCSTRING("BLEND_COLOR","\x75","\xcb","\xc8","\x67")},
	{hx::fsInt,(void *) &GL_obj::ARRAY_BUFFER,HX_HCSTRING("ARRAY_BUFFER","\x46","\x66","\x17","\xf4")},
	{hx::fsInt,(void *) &GL_obj::ELEMENT_ARRAY_BUFFER,HX_HCSTRING("ELEMENT_ARRAY_BUFFER","\x09","\x05","\x53","\x3d")},
	{hx::fsInt,(void *) &GL_obj::ARRAY_BUFFER_BINDING,HX_HCSTRING("ARRAY_BUFFER_BINDING","\xec","\xd4","\xa9","\x79")},
	{hx::fsInt,(void *) &GL_obj::ELEMENT_ARRAY_BUFFER_BINDING,HX_HCSTRING("ELEMENT_ARRAY_BUFFER_BINDING","\xaf","\x6e","\x96","\xa2")},
	{hx::fsInt,(void *) &GL_obj::STREAM_DRAW,HX_HCSTRING("STREAM_DRAW","\x63","\x7f","\x28","\x15")},
	{hx::fsInt,(void *) &GL_obj::STATIC_DRAW,HX_HCSTRING("STATIC_DRAW","\x75","\x50","\x2f","\xba")},
	{hx::fsInt,(void *) &GL_obj::DYNAMIC_DRAW,HX_HCSTRING("DYNAMIC_DRAW","\x24","\x04","\x1f","\x24")},
	{hx::fsInt,(void *) &GL_obj::BUFFER_SIZE,HX_HCSTRING("BUFFER_SIZE","\xa0","\x7b","\x91","\x4c")},
	{hx::fsInt,(void *) &GL_obj::BUFFER_USAGE,HX_HCSTRING("BUFFER_USAGE","\x42","\x05","\x11","\xe0")},
	{hx::fsInt,(void *) &GL_obj::CURRENT_VERTEX_ATTRIB,HX_HCSTRING("CURRENT_VERTEX_ATTRIB","\x1f","\x8c","\x2f","\xab")},
	{hx::fsInt,(void *) &GL_obj::FRONT,HX_HCSTRING("FRONT","\x89","\x50","\x7c","\x84")},
	{hx::fsInt,(void *) &GL_obj::BACK,HX_HCSTRING("BACK","\x27","\xa2","\xd1","\x2b")},
	{hx::fsInt,(void *) &GL_obj::FRONT_AND_BACK,HX_HCSTRING("FRONT_AND_BACK","\xa5","\x3d","\x6a","\xc1")},
	{hx::fsInt,(void *) &GL_obj::CULL_FACE,HX_HCSTRING("CULL_FACE","\x8a","\xa5","\xf4","\xcf")},
	{hx::fsInt,(void *) &GL_obj::BLEND,HX_HCSTRING("BLEND","\x31","\x20","\xe3","\x32")},
	{hx::fsInt,(void *) &GL_obj::DITHER,HX_HCSTRING("DITHER","\xe6","\xac","\x41","\x70")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_TEST,HX_HCSTRING("STENCIL_TEST","\xd5","\xdc","\x69","\xd5")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_TEST,HX_HCSTRING("DEPTH_TEST","\x6e","\x6c","\x25","\x28")},
	{hx::fsInt,(void *) &GL_obj::SCISSOR_TEST,HX_HCSTRING("SCISSOR_TEST","\xb5","\xbe","\x51","\x59")},
	{hx::fsInt,(void *) &GL_obj::POLYGON_OFFSET_FILL,HX_HCSTRING("POLYGON_OFFSET_FILL","\x4a","\x3d","\x32","\xac")},
	{hx::fsInt,(void *) &GL_obj::SAMPLE_ALPHA_TO_COVERAGE,HX_HCSTRING("SAMPLE_ALPHA_TO_COVERAGE","\x16","\x3e","\x56","\xe1")},
	{hx::fsInt,(void *) &GL_obj::SAMPLE_COVERAGE,HX_HCSTRING("SAMPLE_COVERAGE","\xdd","\xb7","\x0e","\xc1")},
	{hx::fsInt,(void *) &GL_obj::NO_ERROR,HX_HCSTRING("NO_ERROR","\xea","\xb5","\x7d","\x2f")},
	{hx::fsInt,(void *) &GL_obj::INVALID_ENUM,HX_HCSTRING("INVALID_ENUM","\xa9","\x74","\x70","\x13")},
	{hx::fsInt,(void *) &GL_obj::INVALID_VALUE,HX_HCSTRING("INVALID_VALUE","\xa9","\xe8","\x26","\xb0")},
	{hx::fsInt,(void *) &GL_obj::INVALID_OPERATION,HX_HCSTRING("INVALID_OPERATION","\x5f","\xb1","\xc8","\x29")},
	{hx::fsInt,(void *) &GL_obj::OUT_OF_MEMORY,HX_HCSTRING("OUT_OF_MEMORY","\x18","\xf2","\x97","\xe1")},
	{hx::fsInt,(void *) &GL_obj::CW,HX_HCSTRING("CW","\xb4","\x3a","\x00","\x00")},
	{hx::fsInt,(void *) &GL_obj::CCW,HX_HCSTRING("CCW","\xb7","\x11","\x33","\x00")},
	{hx::fsInt,(void *) &GL_obj::LINE_WIDTH,HX_HCSTRING("LINE_WIDTH","\x1b","\x84","\xd2","\x23")},
	{hx::fsInt,(void *) &GL_obj::ALIASED_POINT_SIZE_RANGE,HX_HCSTRING("ALIASED_POINT_SIZE_RANGE","\xfe","\xf6","\xa4","\x7b")},
	{hx::fsInt,(void *) &GL_obj::ALIASED_LINE_WIDTH_RANGE,HX_HCSTRING("ALIASED_LINE_WIDTH_RANGE","\xe9","\x22","\xd5","\x8a")},
	{hx::fsInt,(void *) &GL_obj::CULL_FACE_MODE,HX_HCSTRING("CULL_FACE_MODE","\x78","\xbd","\x87","\xd1")},
	{hx::fsInt,(void *) &GL_obj::FRONT_FACE,HX_HCSTRING("FRONT_FACE","\x53","\xb7","\x4d","\xef")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_RANGE,HX_HCSTRING("DEPTH_RANGE","\x01","\x9a","\x23","\xcf")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_WRITEMASK,HX_HCSTRING("DEPTH_WRITEMASK","\x8f","\x37","\x3f","\x66")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_CLEAR_VALUE,HX_HCSTRING("DEPTH_CLEAR_VALUE","\x23","\x17","\x0d","\x1b")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_FUNC,HX_HCSTRING("DEPTH_FUNC","\x60","\x8f","\xf0","\x1e")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_CLEAR_VALUE,HX_HCSTRING("STENCIL_CLEAR_VALUE","\x9c","\x91","\x82","\x73")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_FUNC,HX_HCSTRING("STENCIL_FUNC","\xc7","\xff","\x34","\xcc")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_FAIL,HX_HCSTRING("STENCIL_FAIL","\x61","\xce","\x25","\xcc")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_PASS_DEPTH_FAIL,HX_HCSTRING("STENCIL_PASS_DEPTH_FAIL","\x45","\xca","\xb9","\xc8")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_PASS_DEPTH_PASS,HX_HCSTRING("STENCIL_PASS_DEPTH_PASS","\x38","\xf5","\x55","\xcf")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_REF,HX_HCSTRING("STENCIL_REF","\x10","\x6a","\xa5","\x3c")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_VALUE_MASK,HX_HCSTRING("STENCIL_VALUE_MASK","\x9d","\x58","\x5e","\xa0")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_WRITEMASK,HX_HCSTRING("STENCIL_WRITEMASK","\xc8","\xf1","\xa6","\x49")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_BACK_FUNC,HX_HCSTRING("STENCIL_BACK_FUNC","\x39","\x78","\xa2","\x90")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_BACK_FAIL,HX_HCSTRING("STENCIL_BACK_FAIL","\xd3","\x46","\x93","\x90")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_BACK_PASS_DEPTH_FAIL,HX_HCSTRING("STENCIL_BACK_PASS_DEPTH_FAIL","\x13","\x23","\x0e","\x34")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_BACK_PASS_DEPTH_PASS,HX_HCSTRING("STENCIL_BACK_PASS_DEPTH_PASS","\x06","\x4e","\xaa","\x3a")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_BACK_REF,HX_HCSTRING("STENCIL_BACK_REF","\xde","\x45","\xb8","\x08")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_BACK_VALUE_MASK,HX_HCSTRING("STENCIL_BACK_VALUE_MASK","\x8f","\xb2","\xc4","\x88")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_BACK_WRITEMASK,HX_HCSTRING("STENCIL_BACK_WRITEMASK","\x16","\x9c","\x15","\xc2")},
	{hx::fsInt,(void *) &GL_obj::VIEWPORT,HX_HCSTRING("VIEWPORT","\x66","\xdc","\x2a","\xf6")},
	{hx::fsInt,(void *) &GL_obj::SCISSOR_BOX,HX_HCSTRING("SCISSOR_BOX","\xe8","\x48","\x4c","\x55")},
	{hx::fsInt,(void *) &GL_obj::COLOR_CLEAR_VALUE,HX_HCSTRING("COLOR_CLEAR_VALUE","\x83","\xa7","\x2e","\xf8")},
	{hx::fsInt,(void *) &GL_obj::COLOR_WRITEMASK,HX_HCSTRING("COLOR_WRITEMASK","\xef","\xef","\xf9","\x14")},
	{hx::fsInt,(void *) &GL_obj::UNPACK_ALIGNMENT,HX_HCSTRING("UNPACK_ALIGNMENT","\xb6","\x2a","\x2e","\x4b")},
	{hx::fsInt,(void *) &GL_obj::PACK_ALIGNMENT,HX_HCSTRING("PACK_ALIGNMENT","\x9d","\xd6","\x85","\xc3")},
	{hx::fsInt,(void *) &GL_obj::MAX_TEXTURE_SIZE,HX_HCSTRING("MAX_TEXTURE_SIZE","\xe0","\x0b","\x5b","\xfb")},
	{hx::fsInt,(void *) &GL_obj::MAX_VIEWPORT_DIMS,HX_HCSTRING("MAX_VIEWPORT_DIMS","\xa9","\x2d","\xfb","\x08")},
	{hx::fsInt,(void *) &GL_obj::SUBPIXEL_BITS,HX_HCSTRING("SUBPIXEL_BITS","\x1f","\xac","\x14","\x0a")},
	{hx::fsInt,(void *) &GL_obj::RED_BITS,HX_HCSTRING("RED_BITS","\x14","\xf8","\x9e","\x96")},
	{hx::fsInt,(void *) &GL_obj::GREEN_BITS,HX_HCSTRING("GREEN_BITS","\x62","\xa9","\x9b","\x94")},
	{hx::fsInt,(void *) &GL_obj::BLUE_BITS,HX_HCSTRING("BLUE_BITS","\x0b","\x26","\x60","\xa1")},
	{hx::fsInt,(void *) &GL_obj::ALPHA_BITS,HX_HCSTRING("ALPHA_BITS","\xe7","\xfe","\x7b","\xe0")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_BITS,HX_HCSTRING("DEPTH_BITS","\x22","\x9f","\x42","\x1c")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_BITS,HX_HCSTRING("STENCIL_BITS","\x89","\x0f","\x87","\xc9")},
	{hx::fsInt,(void *) &GL_obj::POLYGON_OFFSET_UNITS,HX_HCSTRING("POLYGON_OFFSET_UNITS","\xa8","\xe8","\x11","\xa6")},
	{hx::fsInt,(void *) &GL_obj::POLYGON_OFFSET_FACTOR,HX_HCSTRING("POLYGON_OFFSET_FACTOR","\x56","\x6b","\x12","\x2a")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_BINDING_2D,HX_HCSTRING("TEXTURE_BINDING_2D","\x30","\xec","\x98","\xb1")},
	{hx::fsInt,(void *) &GL_obj::SAMPLE_BUFFERS,HX_HCSTRING("SAMPLE_BUFFERS","\xfe","\x16","\x71","\x3c")},
	{hx::fsInt,(void *) &GL_obj::SAMPLES,HX_HCSTRING("SAMPLES","\xe9","\x98","\x9d","\x03")},
	{hx::fsInt,(void *) &GL_obj::SAMPLE_COVERAGE_VALUE,HX_HCSTRING("SAMPLE_COVERAGE_VALUE","\x2f","\x7a","\x07","\x69")},
	{hx::fsInt,(void *) &GL_obj::SAMPLE_COVERAGE_INVERT,HX_HCSTRING("SAMPLE_COVERAGE_INVERT","\x78","\x52","\xa5","\xcd")},
	{hx::fsInt,(void *) &GL_obj::COMPRESSED_TEXTURE_FORMATS,HX_HCSTRING("COMPRESSED_TEXTURE_FORMATS","\x7a","\x13","\xe3","\x12")},
	{hx::fsInt,(void *) &GL_obj::DONT_CARE,HX_HCSTRING("DONT_CARE","\x7f","\x9b","\xc1","\xcf")},
	{hx::fsInt,(void *) &GL_obj::FASTEST,HX_HCSTRING("FASTEST","\x0a","\xa3","\x0d","\x5e")},
	{hx::fsInt,(void *) &GL_obj::NICEST,HX_HCSTRING("NICEST","\x7e","\x6d","\x94","\x64")},
	{hx::fsInt,(void *) &GL_obj::GENERATE_MIPMAP_HINT,HX_HCSTRING("GENERATE_MIPMAP_HINT","\x94","\xd3","\xd5","\x83")},
	{hx::fsInt,(void *) &GL_obj::BYTE,HX_HCSTRING("BYTE","\x08","\xe7","\xe3","\x2b")},
	{hx::fsInt,(void *) &GL_obj::UNSIGNED_BYTE,HX_HCSTRING("UNSIGNED_BYTE","\xd2","\x79","\x6b","\x01")},
	{hx::fsInt,(void *) &GL_obj::SHORT,HX_HCSTRING("SHORT","\x5c","\xbc","\x15","\xfa")},
	{hx::fsInt,(void *) &GL_obj::UNSIGNED_SHORT,HX_HCSTRING("UNSIGNED_SHORT","\x52","\x9a","\x2e","\xfb")},
	{hx::fsInt,(void *) &GL_obj::INT,HX_HCSTRING("INT","\xcf","\xa8","\x37","\x00")},
	{hx::fsInt,(void *) &GL_obj::UNSIGNED_INT,HX_HCSTRING("UNSIGNED_INT","\x45","\xfd","\xb9","\x1c")},
	{hx::fsInt,(void *) &GL_obj::FLOAT,HX_HCSTRING("FLOAT","\x7c","\xfd","\x84","\x80")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_COMPONENT,HX_HCSTRING("DEPTH_COMPONENT","\x01","\x1f","\x62","\x0f")},
	{hx::fsInt,(void *) &GL_obj::ALPHA,HX_HCSTRING("ALPHA","\x3e","\xdf","\x84","\x9f")},
	{hx::fsInt,(void *) &GL_obj::RGB,HX_HCSTRING("RGB","\xed","\x76","\x3e","\x00")},
	{hx::fsInt,(void *) &GL_obj::RGBA,HX_HCSTRING("RGBA","\xb4","\x98","\x69","\x36")},
	{hx::fsInt,(void *) &GL_obj::BGR_EXT,HX_HCSTRING("BGR_EXT","\xef","\xba","\xba","\x91")},
	{hx::fsInt,(void *) &GL_obj::BGRA_EXT,HX_HCSTRING("BGRA_EXT","\x36","\x94","\xc4","\xbc")},
	{hx::fsInt,(void *) &GL_obj::LUMINANCE,HX_HCSTRING("LUMINANCE","\xd8","\xa7","\xe0","\x63")},
	{hx::fsInt,(void *) &GL_obj::LUMINANCE_ALPHA,HX_HCSTRING("LUMINANCE_ALPHA","\x57","\x40","\xe0","\xbd")},
	{hx::fsInt,(void *) &GL_obj::UNSIGNED_SHORT_4_4_4_4,HX_HCSTRING("UNSIGNED_SHORT_4_4_4_4","\xa6","\x33","\x71","\x7b")},
	{hx::fsInt,(void *) &GL_obj::UNSIGNED_SHORT_5_5_5_1,HX_HCSTRING("UNSIGNED_SHORT_5_5_5_1","\x26","\x01","\x6e","\x38")},
	{hx::fsInt,(void *) &GL_obj::UNSIGNED_SHORT_5_6_5,HX_HCSTRING("UNSIGNED_SHORT_5_6_5","\x75","\xbb","\x16","\x8c")},
	{hx::fsInt,(void *) &GL_obj::FRAGMENT_SHADER,HX_HCSTRING("FRAGMENT_SHADER","\xf4","\x26","\x78","\xe9")},
	{hx::fsInt,(void *) &GL_obj::VERTEX_SHADER,HX_HCSTRING("VERTEX_SHADER","\xe0","\x69","\x73","\x49")},
	{hx::fsInt,(void *) &GL_obj::MAX_VERTEX_ATTRIBS,HX_HCSTRING("MAX_VERTEX_ATTRIBS","\x49","\xc9","\x15","\x5f")},
	{hx::fsInt,(void *) &GL_obj::MAX_VERTEX_UNIFORM_VECTORS,HX_HCSTRING("MAX_VERTEX_UNIFORM_VECTORS","\x45","\x6c","\x16","\x5a")},
	{hx::fsInt,(void *) &GL_obj::MAX_VARYING_VECTORS,HX_HCSTRING("MAX_VARYING_VECTORS","\x06","\xb9","\xf7","\x37")},
	{hx::fsInt,(void *) &GL_obj::MAX_COMBINED_TEXTURE_IMAGE_UNITS,HX_HCSTRING("MAX_COMBINED_TEXTURE_IMAGE_UNITS","\xa8","\xd1","\xa6","\x77")},
	{hx::fsInt,(void *) &GL_obj::MAX_VERTEX_TEXTURE_IMAGE_UNITS,HX_HCSTRING("MAX_VERTEX_TEXTURE_IMAGE_UNITS","\xc7","\x90","\x95","\x2b")},
	{hx::fsInt,(void *) &GL_obj::MAX_TEXTURE_IMAGE_UNITS,HX_HCSTRING("MAX_TEXTURE_IMAGE_UNITS","\xcc","\x6c","\x61","\x54")},
	{hx::fsInt,(void *) &GL_obj::MAX_FRAGMENT_UNIFORM_VECTORS,HX_HCSTRING("MAX_FRAGMENT_UNIFORM_VECTORS","\x71","\x49","\xf5","\x0a")},
	{hx::fsInt,(void *) &GL_obj::SHADER_TYPE,HX_HCSTRING("SHADER_TYPE","\x54","\xe5","\x27","\x87")},
	{hx::fsInt,(void *) &GL_obj::DELETE_STATUS,HX_HCSTRING("DELETE_STATUS","\x06","\xe4","\x98","\x1e")},
	{hx::fsInt,(void *) &GL_obj::LINK_STATUS,HX_HCSTRING("LINK_STATUS","\x17","\x18","\x8f","\x45")},
	{hx::fsInt,(void *) &GL_obj::VALIDATE_STATUS,HX_HCSTRING("VALIDATE_STATUS","\xfb","\x22","\x07","\xc6")},
	{hx::fsInt,(void *) &GL_obj::ATTACHED_SHADERS,HX_HCSTRING("ATTACHED_SHADERS","\x73","\xd2","\x76","\x75")},
	{hx::fsInt,(void *) &GL_obj::ACTIVE_UNIFORMS,HX_HCSTRING("ACTIVE_UNIFORMS","\x98","\x7d","\x3a","\x2c")},
	{hx::fsInt,(void *) &GL_obj::ACTIVE_ATTRIBUTES,HX_HCSTRING("ACTIVE_ATTRIBUTES","\xf0","\xe5","\xc7","\x4a")},
	{hx::fsInt,(void *) &GL_obj::SHADING_LANGUAGE_VERSION,HX_HCSTRING("SHADING_LANGUAGE_VERSION","\xe6","\xc4","\xef","\x70")},
	{hx::fsInt,(void *) &GL_obj::CURRENT_PROGRAM,HX_HCSTRING("CURRENT_PROGRAM","\xfe","\x28","\xc0","\x3f")},
	{hx::fsInt,(void *) &GL_obj::NEVER,HX_HCSTRING("NEVER","\x6c","\x76","\x1e","\x17")},
	{hx::fsInt,(void *) &GL_obj::LESS,HX_HCSTRING("LESS","\x59","\xdb","\x70","\x32")},
	{hx::fsInt,(void *) &GL_obj::EQUAL,HX_HCSTRING("EQUAL","\x94","\x07","\x71","\xf0")},
	{hx::fsInt,(void *) &GL_obj::LEQUAL,HX_HCSTRING("LEQUAL","\xc8","\x73","\x90","\x53")},
	{hx::fsInt,(void *) &GL_obj::GREATER,HX_HCSTRING("GREATER","\xda","\x64","\x94","\x37")},
	{hx::fsInt,(void *) &GL_obj::NOTEQUAL,HX_HCSTRING("NOTEQUAL","\xc1","\xc1","\xe9","\xc8")},
	{hx::fsInt,(void *) &GL_obj::GEQUAL,HX_HCSTRING("GEQUAL","\xed","\xa5","\xc7","\x53")},
	{hx::fsInt,(void *) &GL_obj::ALWAYS,HX_HCSTRING("ALWAYS","\xcf","\xba","\x59","\xf9")},
	{hx::fsInt,(void *) &GL_obj::KEEP,HX_HCSTRING("KEEP","\x85","\x98","\xc7","\x31")},
	{hx::fsInt,(void *) &GL_obj::REPLACE,HX_HCSTRING("REPLACE","\x14","\x1c","\xfc","\x2a")},
	{hx::fsInt,(void *) &GL_obj::INCR,HX_HCSTRING("INCR","\xd4","\xfd","\x7b","\x30")},
	{hx::fsInt,(void *) &GL_obj::DECR,HX_HCSTRING("DECR","\x70","\x18","\x27","\x2d")},
	{hx::fsInt,(void *) &GL_obj::INVERT,HX_HCSTRING("INVERT","\x16","\x93","\x5b","\x52")},
	{hx::fsInt,(void *) &GL_obj::INCR_WRAP,HX_HCSTRING("INCR_WRAP","\x55","\x7f","\x68","\x2c")},
	{hx::fsInt,(void *) &GL_obj::DECR_WRAP,HX_HCSTRING("DECR_WRAP","\x39","\x6f","\xeb","\x0a")},
	{hx::fsInt,(void *) &GL_obj::VENDOR,HX_HCSTRING("VENDOR","\x88","\x91","\x19","\x51")},
	{hx::fsInt,(void *) &GL_obj::RENDERER,HX_HCSTRING("RENDERER","\x43","\x55","\x61","\x0c")},
	{hx::fsInt,(void *) &GL_obj::VERSION,HX_HCSTRING("VERSION","\xf8","\xba","\xc5","\xfc")},
	{hx::fsInt,(void *) &GL_obj::NEAREST,HX_HCSTRING("NEAREST","\x3e","\xec","\x9d","\xe5")},
	{hx::fsInt,(void *) &GL_obj::LINEAR,HX_HCSTRING("LINEAR","\xe5","\xfd","\x22","\x9f")},
	{hx::fsInt,(void *) &GL_obj::NEAREST_MIPMAP_NEAREST,HX_HCSTRING("NEAREST_MIPMAP_NEAREST","\x68","\xb9","\x63","\x7e")},
	{hx::fsInt,(void *) &GL_obj::LINEAR_MIPMAP_NEAREST,HX_HCSTRING("LINEAR_MIPMAP_NEAREST","\xa1","\x9b","\xa4","\x65")},
	{hx::fsInt,(void *) &GL_obj::NEAREST_MIPMAP_LINEAR,HX_HCSTRING("NEAREST_MIPMAP_LINEAR","\xfb","\x83","\xf2","\x3b")},
	{hx::fsInt,(void *) &GL_obj::LINEAR_MIPMAP_LINEAR,HX_HCSTRING("LINEAR_MIPMAP_LINEAR","\xe2","\x8b","\xf8","\x99")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_MAG_FILTER,HX_HCSTRING("TEXTURE_MAG_FILTER","\x88","\xff","\xd5","\x1e")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_MIN_FILTER,HX_HCSTRING("TEXTURE_MIN_FILTER","\x69","\x66","\xc2","\x46")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_WRAP_S,HX_HCSTRING("TEXTURE_WRAP_S","\xa2","\x2d","\xc3","\xfe")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_WRAP_T,HX_HCSTRING("TEXTURE_WRAP_T","\xa3","\x2d","\xc3","\xfe")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_2D,HX_HCSTRING("TEXTURE_2D","\x16","\x0c","\xf8","\xa2")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE,HX_HCSTRING("TEXTURE","\xbb","\x9c","\xb4","\x1e")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_CUBE_MAP,HX_HCSTRING("TEXTURE_CUBE_MAP","\x36","\x7a","\xe1","\xad")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_BINDING_CUBE_MAP,HX_HCSTRING("TEXTURE_BINDING_CUBE_MAP","\xd0","\x69","\x98","\x75")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_CUBE_MAP_POSITIVE_X,HX_HCSTRING("TEXTURE_CUBE_MAP_POSITIVE_X","\xbb","\x1c","\xee","\x24")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_X,HX_HCSTRING("TEXTURE_CUBE_MAP_NEGATIVE_X","\x77","\x03","\xe2","\x6b")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_CUBE_MAP_POSITIVE_Y,HX_HCSTRING("TEXTURE_CUBE_MAP_POSITIVE_Y","\xbc","\x1c","\xee","\x24")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_Y,HX_HCSTRING("TEXTURE_CUBE_MAP_NEGATIVE_Y","\x78","\x03","\xe2","\x6b")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_CUBE_MAP_POSITIVE_Z,HX_HCSTRING("TEXTURE_CUBE_MAP_POSITIVE_Z","\xbd","\x1c","\xee","\x24")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_Z,HX_HCSTRING("TEXTURE_CUBE_MAP_NEGATIVE_Z","\x79","\x03","\xe2","\x6b")},
	{hx::fsInt,(void *) &GL_obj::MAX_CUBE_MAP_TEXTURE_SIZE,HX_HCSTRING("MAX_CUBE_MAP_TEXTURE_SIZE","\x77","\xb9","\x24","\x9d")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE0,HX_HCSTRING("TEXTURE0","\x15","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE1,HX_HCSTRING("TEXTURE1","\x16","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE2,HX_HCSTRING("TEXTURE2","\x17","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE3,HX_HCSTRING("TEXTURE3","\x18","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE4,HX_HCSTRING("TEXTURE4","\x19","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE5,HX_HCSTRING("TEXTURE5","\x1a","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE6,HX_HCSTRING("TEXTURE6","\x1b","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE7,HX_HCSTRING("TEXTURE7","\x1c","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE8,HX_HCSTRING("TEXTURE8","\x1d","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE9,HX_HCSTRING("TEXTURE9","\x1e","\x87","\x54","\xbf")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE10,HX_HCSTRING("TEXTURE10","\x5a","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE11,HX_HCSTRING("TEXTURE11","\x5b","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE12,HX_HCSTRING("TEXTURE12","\x5c","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE13,HX_HCSTRING("TEXTURE13","\x5d","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE14,HX_HCSTRING("TEXTURE14","\x5e","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE15,HX_HCSTRING("TEXTURE15","\x5f","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE16,HX_HCSTRING("TEXTURE16","\x60","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE17,HX_HCSTRING("TEXTURE17","\x61","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE18,HX_HCSTRING("TEXTURE18","\x62","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE19,HX_HCSTRING("TEXTURE19","\x63","\xac","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE20,HX_HCSTRING("TEXTURE20","\x39","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE21,HX_HCSTRING("TEXTURE21","\x3a","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE22,HX_HCSTRING("TEXTURE22","\x3b","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE23,HX_HCSTRING("TEXTURE23","\x3c","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE24,HX_HCSTRING("TEXTURE24","\x3d","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE25,HX_HCSTRING("TEXTURE25","\x3e","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE26,HX_HCSTRING("TEXTURE26","\x3f","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE27,HX_HCSTRING("TEXTURE27","\x40","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE28,HX_HCSTRING("TEXTURE28","\x41","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE29,HX_HCSTRING("TEXTURE29","\x42","\xad","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE30,HX_HCSTRING("TEXTURE30","\x18","\xae","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::TEXTURE31,HX_HCSTRING("TEXTURE31","\x19","\xae","\xa1","\xaa")},
	{hx::fsInt,(void *) &GL_obj::ACTIVE_TEXTURE,HX_HCSTRING("ACTIVE_TEXTURE","\x02","\x1a","\x22","\xce")},
	{hx::fsInt,(void *) &GL_obj::REPEAT,HX_HCSTRING("REPEAT","\x5b","\x43","\xff","\xb8")},
	{hx::fsInt,(void *) &GL_obj::CLAMP_TO_EDGE,HX_HCSTRING("CLAMP_TO_EDGE","\x1d","\xfc","\x5a","\x96")},
	{hx::fsInt,(void *) &GL_obj::MIRRORED_REPEAT,HX_HCSTRING("MIRRORED_REPEAT","\x5c","\x94","\x80","\x4a")},
	{hx::fsInt,(void *) &GL_obj::FLOAT_VEC2,HX_HCSTRING("FLOAT_VEC2","\x61","\xac","\xa4","\xeb")},
	{hx::fsInt,(void *) &GL_obj::FLOAT_VEC3,HX_HCSTRING("FLOAT_VEC3","\x62","\xac","\xa4","\xeb")},
	{hx::fsInt,(void *) &GL_obj::FLOAT_VEC4,HX_HCSTRING("FLOAT_VEC4","\x63","\xac","\xa4","\xeb")},
	{hx::fsInt,(void *) &GL_obj::INT_VEC2,HX_HCSTRING("INT_VEC2","\x2e","\x14","\x05","\x7d")},
	{hx::fsInt,(void *) &GL_obj::INT_VEC3,HX_HCSTRING("INT_VEC3","\x2f","\x14","\x05","\x7d")},
	{hx::fsInt,(void *) &GL_obj::INT_VEC4,HX_HCSTRING("INT_VEC4","\x30","\x14","\x05","\x7d")},
	{hx::fsInt,(void *) &GL_obj::BOOL,HX_HCSTRING("BOOL","\x2a","\x4c","\xdc","\x2b")},
	{hx::fsInt,(void *) &GL_obj::BOOL_VEC2,HX_HCSTRING("BOOL_VEC2","\xf3","\x66","\x2b","\x2d")},
	{hx::fsInt,(void *) &GL_obj::BOOL_VEC3,HX_HCSTRING("BOOL_VEC3","\xf4","\x66","\x2b","\x2d")},
	{hx::fsInt,(void *) &GL_obj::BOOL_VEC4,HX_HCSTRING("BOOL_VEC4","\xf5","\x66","\x2b","\x2d")},
	{hx::fsInt,(void *) &GL_obj::FLOAT_MAT2,HX_HCSTRING("FLOAT_MAT2","\x95","\xc6","\xae","\xe5")},
	{hx::fsInt,(void *) &GL_obj::FLOAT_MAT3,HX_HCSTRING("FLOAT_MAT3","\x96","\xc6","\xae","\xe5")},
	{hx::fsInt,(void *) &GL_obj::FLOAT_MAT4,HX_HCSTRING("FLOAT_MAT4","\x97","\xc6","\xae","\xe5")},
	{hx::fsInt,(void *) &GL_obj::SAMPLER_2D,HX_HCSTRING("SAMPLER_2D","\x09","\x2a","\x93","\x6e")},
	{hx::fsInt,(void *) &GL_obj::SAMPLER_CUBE,HX_HCSTRING("SAMPLER_CUBE","\xec","\x3e","\x82","\xa4")},
	{hx::fsInt,(void *) &GL_obj::VERTEX_ATTRIB_ARRAY_ENABLED,HX_HCSTRING("VERTEX_ATTRIB_ARRAY_ENABLED","\x61","\x99","\x09","\x66")},
	{hx::fsInt,(void *) &GL_obj::VERTEX_ATTRIB_ARRAY_SIZE,HX_HCSTRING("VERTEX_ATTRIB_ARRAY_SIZE","\xc1","\x07","\xfd","\x08")},
	{hx::fsInt,(void *) &GL_obj::VERTEX_ATTRIB_ARRAY_STRIDE,HX_HCSTRING("VERTEX_ATTRIB_ARRAY_STRIDE","\x19","\x2b","\x41","\x58")},
	{hx::fsInt,(void *) &GL_obj::VERTEX_ATTRIB_ARRAY_TYPE,HX_HCSTRING("VERTEX_ATTRIB_ARRAY_TYPE","\xba","\x59","\xb2","\x09")},
	{hx::fsInt,(void *) &GL_obj::VERTEX_ATTRIB_ARRAY_NORMALIZED,HX_HCSTRING("VERTEX_ATTRIB_ARRAY_NORMALIZED","\x37","\xb7","\x22","\x78")},
	{hx::fsInt,(void *) &GL_obj::VERTEX_ATTRIB_ARRAY_POINTER,HX_HCSTRING("VERTEX_ATTRIB_ARRAY_POINTER","\x9d","\x55","\xfa","\x38")},
	{hx::fsInt,(void *) &GL_obj::VERTEX_ATTRIB_ARRAY_BUFFER_BINDING,HX_HCSTRING("VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","\xa6","\x80","\x67","\x97")},
	{hx::fsInt,(void *) &GL_obj::VERTEX_PROGRAM_POINT_SIZE,HX_HCSTRING("VERTEX_PROGRAM_POINT_SIZE","\xe6","\x56","\xbe","\x34")},
	{hx::fsInt,(void *) &GL_obj::POINT_SPRITE,HX_HCSTRING("POINT_SPRITE","\x74","\x93","\x5c","\x14")},
	{hx::fsInt,(void *) &GL_obj::COMPILE_STATUS,HX_HCSTRING("COMPILE_STATUS","\xde","\xcb","\x4e","\x8c")},
	{hx::fsInt,(void *) &GL_obj::LOW_FLOAT,HX_HCSTRING("LOW_FLOAT","\x31","\x04","\x74","\xe4")},
	{hx::fsInt,(void *) &GL_obj::MEDIUM_FLOAT,HX_HCSTRING("MEDIUM_FLOAT","\xf2","\x8a","\x46","\xb9")},
	{hx::fsInt,(void *) &GL_obj::HIGH_FLOAT,HX_HCSTRING("HIGH_FLOAT","\x9f","\xf9","\x3b","\x47")},
	{hx::fsInt,(void *) &GL_obj::LOW_INT,HX_HCSTRING("LOW_INT","\x44","\x28","\x70","\x45")},
	{hx::fsInt,(void *) &GL_obj::MEDIUM_INT,HX_HCSTRING("MEDIUM_INT","\xc5","\xcc","\xaf","\x4f")},
	{hx::fsInt,(void *) &GL_obj::HIGH_INT,HX_HCSTRING("HIGH_INT","\x32","\x46","\x02","\x09")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER,HX_HCSTRING("FRAMEBUFFER","\xcd","\x20","\x84","\x50")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER,HX_HCSTRING("RENDERBUFFER","\xd6","\xa4","\xa4","\xa9")},
	{hx::fsInt,(void *) &GL_obj::RGBA4,HX_HCSTRING("RGBA4","\x00","\x05","\xfc","\x65")},
	{hx::fsInt,(void *) &GL_obj::RGB5_A1,HX_HCSTRING("RGB5_A1","\x47","\x8f","\xf9","\xd8")},
	{hx::fsInt,(void *) &GL_obj::RGB565,HX_HCSTRING("RGB565","\xe7","\x41","\x7f","\xd6")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_COMPONENT16,HX_HCSTRING("DEPTH_COMPONENT16","\x26","\xcc","\x68","\x43")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_INDEX,HX_HCSTRING("STENCIL_INDEX","\x0f","\x79","\xb6","\x97")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_INDEX8,HX_HCSTRING("STENCIL_INDEX8","\x49","\x74","\xf3","\x27")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_STENCIL,HX_HCSTRING("DEPTH_STENCIL","\x40","\x2f","\x20","\x2b")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_WIDTH,HX_HCSTRING("RENDERBUFFER_WIDTH","\x7d","\x1e","\xe1","\x43")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_HEIGHT,HX_HCSTRING("RENDERBUFFER_HEIGHT","\x70","\x07","\x69","\xd7")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_INTERNAL_FORMAT,HX_HCSTRING("RENDERBUFFER_INTERNAL_FORMAT","\x90","\xda","\xeb","\xb5")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_RED_SIZE,HX_HCSTRING("RENDERBUFFER_RED_SIZE","\x98","\xa5","\x58","\x5e")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_GREEN_SIZE,HX_HCSTRING("RENDERBUFFER_GREEN_SIZE","\x26","\x9b","\x7d","\x3b")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_BLUE_SIZE,HX_HCSTRING("RENDERBUFFER_BLUE_SIZE","\xdd","\x93","\x86","\xdd")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_ALPHA_SIZE,HX_HCSTRING("RENDERBUFFER_ALPHA_SIZE","\xab","\xf0","\x5d","\x87")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_DEPTH_SIZE,HX_HCSTRING("RENDERBUFFER_DEPTH_SIZE","\xe6","\x90","\x24","\xc3")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_STENCIL_SIZE,HX_HCSTRING("RENDERBUFFER_STENCIL_SIZE","\x8d","\xd5","\x5a","\x9d")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE,HX_HCSTRING("FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","\x50","\x22","\x44","\x50")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_ATTACHMENT_OBJECT_NAME,HX_HCSTRING("FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","\xe1","\xa1","\x3a","\x4c")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL,HX_HCSTRING("FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","\xf6","\x9b","\xba","\x81")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE,HX_HCSTRING("FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","\xdc","\x4c","\x39","\x8a")},
	{hx::fsInt,(void *) &GL_obj::COLOR_ATTACHMENT0,HX_HCSTRING("COLOR_ATTACHMENT0","\xb1","\x9a","\xfe","\x86")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_ATTACHMENT,HX_HCSTRING("DEPTH_ATTACHMENT","\xff","\x54","\xcd","\xe9")},
	{hx::fsInt,(void *) &GL_obj::STENCIL_ATTACHMENT,HX_HCSTRING("STENCIL_ATTACHMENT","\xa6","\x8c","\x28","\x01")},
	{hx::fsInt,(void *) &GL_obj::DEPTH_STENCIL_ATTACHMENT,HX_HCSTRING("DEPTH_STENCIL_ATTACHMENT","\xc2","\xe1","\xe1","\x9f")},
	{hx::fsInt,(void *) &GL_obj::NONE,HX_HCSTRING("NONE","\xb8","\xda","\xca","\x33")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_COMPLETE,HX_HCSTRING("FRAMEBUFFER_COMPLETE","\xab","\x65","\x7d","\xea")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_INCOMPLETE_ATTACHMENT,HX_HCSTRING("FRAMEBUFFER_INCOMPLETE_ATTACHMENT","\xf2","\xcf","\xb7","\x1d")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT,HX_HCSTRING("FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","\x8b","\x0a","\xcd","\x77")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_INCOMPLETE_DIMENSIONS,HX_HCSTRING("FRAMEBUFFER_INCOMPLETE_DIMENSIONS","\x5c","\x86","\xe4","\x1c")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_UNSUPPORTED,HX_HCSTRING("FRAMEBUFFER_UNSUPPORTED","\xe3","\xa6","\x4e","\xc8")},
	{hx::fsInt,(void *) &GL_obj::FRAMEBUFFER_BINDING,HX_HCSTRING("FRAMEBUFFER_BINDING","\x73","\xee","\xae","\xc5")},
	{hx::fsInt,(void *) &GL_obj::RENDERBUFFER_BINDING,HX_HCSTRING("RENDERBUFFER_BINDING","\x7c","\x23","\x70","\x23")},
	{hx::fsInt,(void *) &GL_obj::MAX_RENDERBUFFER_SIZE,HX_HCSTRING("MAX_RENDERBUFFER_SIZE","\x4f","\xd4","\x3d","\x65")},
	{hx::fsInt,(void *) &GL_obj::INVALID_FRAMEBUFFER_OPERATION,HX_HCSTRING("INVALID_FRAMEBUFFER_OPERATION","\x2d","\xd4","\xc5","\x43")},
	{hx::fsInt,(void *) &GL_obj::UNPACK_FLIP_Y_WEBGL,HX_HCSTRING("UNPACK_FLIP_Y_WEBGL","\x0e","\x9f","\x94","\x9d")},
	{hx::fsInt,(void *) &GL_obj::UNPACK_PREMULTIPLY_ALPHA_WEBGL,HX_HCSTRING("UNPACK_PREMULTIPLY_ALPHA_WEBGL","\x73","\x5d","\xcb","\xc6")},
	{hx::fsInt,(void *) &GL_obj::CONTEXT_LOST_WEBGL,HX_HCSTRING("CONTEXT_LOST_WEBGL","\x6e","\x67","\x71","\x45")},
	{hx::fsInt,(void *) &GL_obj::UNPACK_COLORSPACE_CONVERSION_WEBGL,HX_HCSTRING("UNPACK_COLORSPACE_CONVERSION_WEBGL","\x9f","\xd9","\xf0","\xb9")},
	{hx::fsInt,(void *) &GL_obj::BROWSER_DEFAULT_WEBGL,HX_HCSTRING("BROWSER_DEFAULT_WEBGL","\x04","\x04","\x92","\xc0")},
	{hx::fsInt,(void *) &GL_obj::version,HX_HCSTRING("version","\x18","\xe7","\xf1","\x7c")},
	{hx::fsObject /*::lime::graphics::opengl::GLProgram*/ ,(void *) &GL_obj::_hx___currentProgram,HX_HCSTRING("__currentProgram","\x6b","\x4a","\xcd","\x35")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_active_texture,HX_HCSTRING("cffi_lime_gl_active_texture","\x0b","\x95","\x07","\x16")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_attach_shader,HX_HCSTRING("cffi_lime_gl_attach_shader","\xd6","\x9c","\x99","\xc1")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_bind_attrib_location,HX_HCSTRING("cffi_lime_gl_bind_attrib_location","\xf1","\x16","\xec","\x0b")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_bind_buffer,HX_HCSTRING("cffi_lime_gl_bind_buffer","\xf9","\xc3","\x77","\x28")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_bind_framebuffer,HX_HCSTRING("cffi_lime_gl_bind_framebuffer","\x54","\x27","\x8c","\x5e")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_bind_renderbuffer,HX_HCSTRING("cffi_lime_gl_bind_renderbuffer","\x8f","\x54","\xa2","\xe2")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_bind_texture,HX_HCSTRING("cffi_lime_gl_bind_texture","\xc2","\xdb","\xa3","\x2d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_blend_color,HX_HCSTRING("cffi_lime_gl_blend_color","\x2c","\x3d","\x6d","\x80")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_blend_equation,HX_HCSTRING("cffi_lime_gl_blend_equation","\x63","\xb3","\x98","\x81")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_blend_equation_separate,HX_HCSTRING("cffi_lime_gl_blend_equation_separate","\xff","\x5e","\xb7","\x48")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_blend_func,HX_HCSTRING("cffi_lime_gl_blend_func","\x9b","\x6b","\x44","\x5d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_blend_func_separate,HX_HCSTRING("cffi_lime_gl_blend_func_separate","\xc7","\xdf","\x1e","\xb6")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_buffer_data,HX_HCSTRING("cffi_lime_gl_buffer_data","\x80","\x9e","\xde","\xb9")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_buffer_sub_data,HX_HCSTRING("cffi_lime_gl_buffer_sub_data","\xdf","\x83","\x9b","\x86")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_check_framebuffer_status,HX_HCSTRING("cffi_lime_gl_check_framebuffer_status","\x04","\xac","\xc0","\x18")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_clear,HX_HCSTRING("cffi_lime_gl_clear","\xc4","\x77","\x82","\x3b")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_clear_color,HX_HCSTRING("cffi_lime_gl_clear_color","\x68","\x5b","\xe8","\x5f")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_clear_depth,HX_HCSTRING("cffi_lime_gl_clear_depth","\x08","\xdb","\xb5","\xec")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_clear_stencil,HX_HCSTRING("cffi_lime_gl_clear_stencil","\x41","\xf3","\xe1","\xff")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_color_mask,HX_HCSTRING("cffi_lime_gl_color_mask","\xf1","\x16","\xea","\xed")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_compile_shader,HX_HCSTRING("cffi_lime_gl_compile_shader","\x9a","\x8a","\xf8","\xde")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_compressed_tex_image_2d,HX_HCSTRING("cffi_lime_gl_compressed_tex_image_2d","\xe3","\xbb","\xda","\x66")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_compressed_tex_sub_image_2d,HX_HCSTRING("cffi_lime_gl_compressed_tex_sub_image_2d","\x42","\x84","\x71","\x32")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_copy_tex_image_2d,HX_HCSTRING("cffi_lime_gl_copy_tex_image_2d","\xef","\xf8","\xce","\xb8")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_copy_tex_sub_image_2d,HX_HCSTRING("cffi_lime_gl_copy_tex_sub_image_2d","\x4e","\x37","\x97","\xe8")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_create_buffer,HX_HCSTRING("cffi_lime_gl_create_buffer","\x5a","\x14","\x78","\x46")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_create_framebuffer,HX_HCSTRING("cffi_lime_gl_create_framebuffer","\x53","\xd7","\x07","\xd6")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_create_program,HX_HCSTRING("cffi_lime_gl_create_program","\xea","\x61","\x02","\xa5")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_create_render_buffer,HX_HCSTRING("cffi_lime_gl_create_render_buffer","\xef","\xc1","\xa9","\x0a")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_create_shader,HX_HCSTRING("cffi_lime_gl_create_shader","\x7f","\x16","\x04","\x93")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_create_texture,HX_HCSTRING("cffi_lime_gl_create_texture","\x41","\xe0","\xe9","\x4f")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_cull_face,HX_HCSTRING("cffi_lime_gl_cull_face","\x41","\x93","\xf5","\x8c")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_delete_buffer,HX_HCSTRING("cffi_lime_gl_delete_buffer","\x0b","\xcf","\xbe","\xbc")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_delete_framebuffer,HX_HCSTRING("cffi_lime_gl_delete_framebuffer","\x02","\xbb","\x49","\x08")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_delete_program,HX_HCSTRING("cffi_lime_gl_delete_program","\x19","\x02","\x9f","\xac")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_delete_render_buffer,HX_HCSTRING("cffi_lime_gl_delete_render_buffer","\x5e","\x2f","\xef","\xbb")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_delete_shader,HX_HCSTRING("cffi_lime_gl_delete_shader","\x30","\xd1","\x4a","\x09")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_delete_texture,HX_HCSTRING("cffi_lime_gl_delete_texture","\x70","\x80","\x86","\x57")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_depth_func,HX_HCSTRING("cffi_lime_gl_depth_func","\xa9","\x9d","\x58","\x21")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_depth_mask,HX_HCSTRING("cffi_lime_gl_depth_mask","\x51","\xf3","\xe9","\x25")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_depth_range,HX_HCSTRING("cffi_lime_gl_depth_range","\xb8","\x0b","\xc8","\xe7")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_detach_shader,HX_HCSTRING("cffi_lime_gl_detach_shader","\x08","\xa9","\xa3","\xb8")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_disable,HX_HCSTRING("cffi_lime_gl_disable","\xdf","\xab","\xf6","\x00")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_disable_vertex_attrib_array,HX_HCSTRING("cffi_lime_gl_disable_vertex_attrib_array","\xff","\x24","\xd3","\x35")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_draw_arrays,HX_HCSTRING("cffi_lime_gl_draw_arrays","\x4c","\xb0","\xaa","\x5c")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_draw_elements,HX_HCSTRING("cffi_lime_gl_draw_elements","\x49","\xf6","\x28","\x75")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_enable,HX_HCSTRING("cffi_lime_gl_enable","\x6c","\x18","\x86","\xc7")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_enable_vertex_attrib_array,HX_HCSTRING("cffi_lime_gl_enable_vertex_attrib_array","\x0c","\x06","\x88","\xe8")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_finish,HX_HCSTRING("cffi_lime_gl_finish","\x3c","\xaa","\x7d","\x55")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_flush,HX_HCSTRING("cffi_lime_gl_flush","\xfb","\x68","\xc2","\xf5")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_framebuffer_renderbuffer,HX_HCSTRING("cffi_lime_gl_framebuffer_renderbuffer","\xd1","\x92","\x2a","\xc8")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_framebuffer_texture2D,HX_HCSTRING("cffi_lime_gl_framebuffer_texture2D","\x92","\x20","\xf3","\xa7")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_front_face,HX_HCSTRING("cffi_lime_gl_front_face","\x9c","\xc5","\xb5","\xf1")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_generate_mipmap,HX_HCSTRING("cffi_lime_gl_generate_mipmap","\x89","\xf1","\x67","\xc1")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_get_active_attrib,HX_HCSTRING("cffi_lime_gl_get_active_attrib","\xf1","\x23","\x6f","\x50")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_get_active_uniform,HX_HCSTRING("cffi_lime_gl_get_active_uniform","\xad","\x16","\x07","\x8d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_get_attrib_location,HX_HCSTRING("cffi_lime_gl_get_attrib_location","\x98","\xec","\x30","\x2d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_get_buffer_parameter,HX_HCSTRING("cffi_lime_gl_get_buffer_parameter","\x1c","\xa3","\x88","\x66")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_get_context_attributes,HX_HCSTRING("cffi_lime_gl_get_context_attributes","\x99","\x5d","\x08","\x68")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_get_error,HX_HCSTRING("cffi_lime_gl_get_error","\xd6","\x15","\xff","\xdb")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_get_extension,HX_HCSTRING("cffi_lime_gl_get_extension","\x8d","\xfc","\xee","\x92")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_get_framebuffer_attachment_parameter,HX_HCSTRING("cffi_lime_gl_get_framebuffer_attachment_parameter","\x91","\xdb","\x6d","\xf4")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_get_parameter,HX_HCSTRING("cffi_lime_gl_get_parameter","\xb7","\x9e","\x8e","\xf6")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_get_program_info_log,HX_HCSTRING("cffi_lime_gl_get_program_info_log","\x00","\xd2","\xe4","\x39")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_get_program_parameter,HX_HCSTRING("cffi_lime_gl_get_program_parameter","\xfc","\xef","\x5e","\xb0")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_get_render_buffer_parameter,HX_HCSTRING("cffi_lime_gl_get_render_buffer_parameter","\x41","\xf6","\x57","\x23")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_get_shader_info_log,HX_HCSTRING("cffi_lime_gl_get_shader_info_log","\x1b","\xf4","\xd0","\x21")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_get_shader_parameter,HX_HCSTRING("cffi_lime_gl_get_shader_parameter","\x81","\xa5","\x10","\xb7")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_get_shader_precision_format,HX_HCSTRING("cffi_lime_gl_get_shader_precision_format","\x80","\xca","\xf5","\xb4")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_get_shader_source,HX_HCSTRING("cffi_lime_gl_get_shader_source","\x03","\x6a","\x5b","\x66")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_get_supported_extensions,HX_HCSTRING("cffi_lime_gl_get_supported_extensions","\x77","\x2b","\x10","\xc0")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_get_tex_parameter,HX_HCSTRING("cffi_lime_gl_get_tex_parameter","\x1f","\x1e","\xb7","\xaf")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_get_uniform,HX_HCSTRING("cffi_lime_gl_get_uniform","\xc2","\xaa","\xaa","\xf5")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_get_uniform_location,HX_HCSTRING("cffi_lime_gl_get_uniform_location","\x92","\x52","\xfb","\x5d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_get_vertex_attrib,HX_HCSTRING("cffi_lime_gl_get_vertex_attrib","\x13","\x1a","\xe5","\x0a")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_get_vertex_attrib_offset,HX_HCSTRING("cffi_lime_gl_get_vertex_attrib_offset","\x7f","\x47","\xc7","\x78")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_hint,HX_HCSTRING("cffi_lime_gl_hint","\x30","\x2b","\xb7","\xe5")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_is_buffer,HX_HCSTRING("cffi_lime_gl_is_buffer","\xac","\x11","\xe5","\x9a")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_is_enabled,HX_HCSTRING("cffi_lime_gl_is_enabled","\x55","\xc6","\x2a","\xba")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_is_framebuffer,HX_HCSTRING("cffi_lime_gl_is_framebuffer","\xc1","\x50","\xa9","\x0d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_is_program,HX_HCSTRING("cffi_lime_gl_is_program","\x58","\x0c","\xf3","\x2f")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_is_renderbuffer,HX_HCSTRING("cffi_lime_gl_is_renderbuffer","\x82","\x6a","\x09","\x6d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_is_shader,HX_HCSTRING("cffi_lime_gl_is_shader","\xd1","\x13","\x71","\xe7")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_is_texture,HX_HCSTRING("cffi_lime_gl_is_texture","\xaf","\x8a","\xda","\xda")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_line_width,HX_HCSTRING("cffi_lime_gl_line_width","\xa4","\x96","\xa1","\xc7")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_link_program,HX_HCSTRING("cffi_lime_gl_link_program","\xa8","\x84","\xd0","\xd8")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_pixel_storei,HX_HCSTRING("cffi_lime_gl_pixel_storei","\xea","\x57","\x57","\xe2")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_polygon_offset,HX_HCSTRING("cffi_lime_gl_polygon_offset","\xe1","\x44","\xfc","\x45")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_read_pixels,HX_HCSTRING("cffi_lime_gl_read_pixels","\xad","\x75","\x07","\x3b")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_renderbuffer_storage,HX_HCSTRING("cffi_lime_gl_renderbuffer_storage","\x3b","\xdb","\xb9","\x6d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_sample_coverage,HX_HCSTRING("cffi_lime_gl_sample_coverage","\xd4","\xe4","\xf4","\x61")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_scissor,HX_HCSTRING("cffi_lime_gl_scissor","\x13","\x6a","\x85","\x54")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_shader_source,HX_HCSTRING("cffi_lime_gl_shader_source","\x2c","\xf7","\x72","\x3b")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_stencil_func,HX_HCSTRING("cffi_lime_gl_stencil_func","\x50","\x56","\x50","\x09")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_stencil_func_separate,HX_HCSTRING("cffi_lime_gl_stencil_func_separate","\x72","\x76","\xec","\xb6")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_stencil_mask,HX_HCSTRING("cffi_lime_gl_stencil_mask","\xf8","\xab","\xe1","\x0d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_stencil_mask_separate,HX_HCSTRING("cffi_lime_gl_stencil_mask_separate","\xca","\x2b","\xe7","\x02")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_stencil_op,HX_HCSTRING("cffi_lime_gl_stencil_op","\x2d","\xb1","\x4e","\x19")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_stencil_op_separate,HX_HCSTRING("cffi_lime_gl_stencil_op_separate","\xf5","\x57","\x9c","\xe5")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_tex_image_2d,HX_HCSTRING("cffi_lime_gl_tex_image_2d","\xd7","\x50","\x7b","\xd9")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_tex_parameterf,HX_HCSTRING("cffi_lime_gl_tex_parameterf","\x1e","\x34","\x07","\xb0")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_tex_parameteri,HX_HCSTRING("cffi_lime_gl_tex_parameteri","\x21","\x34","\x07","\xb0")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_tex_sub_image_2d,HX_HCSTRING("cffi_lime_gl_tex_sub_image_2d","\x36","\xa3","\xb1","\x40")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_uniform1f,HX_HCSTRING("cffi_lime_gl_uniform1f","\x00","\x0f","\x0a","\x2d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_uniform1fv,HX_HCSTRING("cffi_lime_gl_uniform1fv","\x76","\x11","\xc3","\x3b")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_uniform1i,HX_HCSTRING("cffi_lime_gl_uniform1i","\x03","\x0f","\x0a","\x2d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_uniform1iv,HX_HCSTRING("cffi_lime_gl_uniform1iv","\x13","\x14","\xc3","\x3b")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_uniform2f,HX_HCSTRING("cffi_lime_gl_uniform2f","\xdf","\x0f","\x0a","\x2d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_uniform2fv,HX_HCSTRING("cffi_lime_gl_uniform2fv","\xb7","\xd3","\xc3","\x3b")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_uniform2i,HX_HCSTRING("cffi_lime_gl_uniform2i","\xe2","\x0f","\x0a","\x2d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_uniform2iv,HX_HCSTRING("cffi_lime_gl_uniform2iv","\x54","\xd6","\xc3","\x3b")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_uniform3f,HX_HCSTRING("cffi_lime_gl_uniform3f","\xbe","\x10","\x0a","\x2d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_uniform3fv,HX_HCSTRING("cffi_lime_gl_uniform3fv","\xf8","\x95","\xc4","\x3b")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_uniform3i,HX_HCSTRING("cffi_lime_gl_uniform3i","\xc1","\x10","\x0a","\x2d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_uniform3iv,HX_HCSTRING("cffi_lime_gl_uniform3iv","\x95","\x98","\xc4","\x3b")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_uniform4f,HX_HCSTRING("cffi_lime_gl_uniform4f","\x9d","\x11","\x0a","\x2d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_uniform4fv,HX_HCSTRING("cffi_lime_gl_uniform4fv","\x39","\x58","\xc5","\x3b")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_uniform4i,HX_HCSTRING("cffi_lime_gl_uniform4i","\xa0","\x11","\x0a","\x2d")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_uniform4iv,HX_HCSTRING("cffi_lime_gl_uniform4iv","\xd6","\x5a","\xc5","\x3b")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_uniform_matrix,HX_HCSTRING("cffi_lime_gl_uniform_matrix","\x15","\x50","\x5c","\x15")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_use_program,HX_HCSTRING("cffi_lime_gl_use_program","\xc3","\xf8","\x56","\x68")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_validate_program,HX_HCSTRING("cffi_lime_gl_validate_program","\xc4","\x41","\x44","\x49")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_version,HX_HCSTRING("cffi_lime_gl_version","\x0f","\x29","\x90","\xcc")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_vertex_attrib1f,HX_HCSTRING("cffi_lime_gl_vertex_attrib1f","\x51","\x19","\xe2","\x55")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_vertex_attrib1fv,HX_HCSTRING("cffi_lime_gl_vertex_attrib1fv","\x05","\x0e","\xf4","\xcf")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_vertex_attrib2f,HX_HCSTRING("cffi_lime_gl_vertex_attrib2f","\x30","\x1a","\xe2","\x55")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_vertex_attrib2fv,HX_HCSTRING("cffi_lime_gl_vertex_attrib2fv","\x46","\xd0","\xf4","\xcf")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_vertex_attrib3f,HX_HCSTRING("cffi_lime_gl_vertex_attrib3f","\x0f","\x1b","\xe2","\x55")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_vertex_attrib3fv,HX_HCSTRING("cffi_lime_gl_vertex_attrib3fv","\x87","\x92","\xf5","\xcf")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_vertex_attrib4f,HX_HCSTRING("cffi_lime_gl_vertex_attrib4f","\xee","\x1b","\xe2","\x55")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_vertex_attrib4fv,HX_HCSTRING("cffi_lime_gl_vertex_attrib4fv","\xc8","\x54","\xf6","\xcf")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_vertex_attrib_pointer,HX_HCSTRING("cffi_lime_gl_vertex_attrib_pointer","\x7a","\x5d","\xea","\xb2")},
	{hx::fsObject /*Dynamic*/ ,(void *) &GL_obj::cffi_lime_gl_viewport,HX_HCSTRING("cffi_lime_gl_viewport","\x8f","\xc2","\x80","\xf7")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void GL_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(GL_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_BUFFER_BIT,"DEPTH_BUFFER_BIT");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_BUFFER_BIT,"STENCIL_BUFFER_BIT");
	HX_MARK_MEMBER_NAME(GL_obj::COLOR_BUFFER_BIT,"COLOR_BUFFER_BIT");
	HX_MARK_MEMBER_NAME(GL_obj::POINTS,"POINTS");
	HX_MARK_MEMBER_NAME(GL_obj::LINES,"LINES");
	HX_MARK_MEMBER_NAME(GL_obj::LINE_LOOP,"LINE_LOOP");
	HX_MARK_MEMBER_NAME(GL_obj::LINE_STRIP,"LINE_STRIP");
	HX_MARK_MEMBER_NAME(GL_obj::TRIANGLES,"TRIANGLES");
	HX_MARK_MEMBER_NAME(GL_obj::TRIANGLE_STRIP,"TRIANGLE_STRIP");
	HX_MARK_MEMBER_NAME(GL_obj::TRIANGLE_FAN,"TRIANGLE_FAN");
	HX_MARK_MEMBER_NAME(GL_obj::ZERO,"ZERO");
	HX_MARK_MEMBER_NAME(GL_obj::ONE,"ONE");
	HX_MARK_MEMBER_NAME(GL_obj::SRC_COLOR,"SRC_COLOR");
	HX_MARK_MEMBER_NAME(GL_obj::ONE_MINUS_SRC_COLOR,"ONE_MINUS_SRC_COLOR");
	HX_MARK_MEMBER_NAME(GL_obj::SRC_ALPHA,"SRC_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::ONE_MINUS_SRC_ALPHA,"ONE_MINUS_SRC_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::DST_ALPHA,"DST_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::ONE_MINUS_DST_ALPHA,"ONE_MINUS_DST_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::DST_COLOR,"DST_COLOR");
	HX_MARK_MEMBER_NAME(GL_obj::ONE_MINUS_DST_COLOR,"ONE_MINUS_DST_COLOR");
	HX_MARK_MEMBER_NAME(GL_obj::SRC_ALPHA_SATURATE,"SRC_ALPHA_SATURATE");
	HX_MARK_MEMBER_NAME(GL_obj::FUNC_ADD,"FUNC_ADD");
	HX_MARK_MEMBER_NAME(GL_obj::BLEND_EQUATION,"BLEND_EQUATION");
	HX_MARK_MEMBER_NAME(GL_obj::BLEND_EQUATION_RGB,"BLEND_EQUATION_RGB");
	HX_MARK_MEMBER_NAME(GL_obj::BLEND_EQUATION_ALPHA,"BLEND_EQUATION_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::FUNC_SUBTRACT,"FUNC_SUBTRACT");
	HX_MARK_MEMBER_NAME(GL_obj::FUNC_REVERSE_SUBTRACT,"FUNC_REVERSE_SUBTRACT");
	HX_MARK_MEMBER_NAME(GL_obj::BLEND_DST_RGB,"BLEND_DST_RGB");
	HX_MARK_MEMBER_NAME(GL_obj::BLEND_SRC_RGB,"BLEND_SRC_RGB");
	HX_MARK_MEMBER_NAME(GL_obj::BLEND_DST_ALPHA,"BLEND_DST_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::BLEND_SRC_ALPHA,"BLEND_SRC_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::CONSTANT_COLOR,"CONSTANT_COLOR");
	HX_MARK_MEMBER_NAME(GL_obj::ONE_MINUS_CONSTANT_COLOR,"ONE_MINUS_CONSTANT_COLOR");
	HX_MARK_MEMBER_NAME(GL_obj::CONSTANT_ALPHA,"CONSTANT_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::ONE_MINUS_CONSTANT_ALPHA,"ONE_MINUS_CONSTANT_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::BLEND_COLOR,"BLEND_COLOR");
	HX_MARK_MEMBER_NAME(GL_obj::ARRAY_BUFFER,"ARRAY_BUFFER");
	HX_MARK_MEMBER_NAME(GL_obj::ELEMENT_ARRAY_BUFFER,"ELEMENT_ARRAY_BUFFER");
	HX_MARK_MEMBER_NAME(GL_obj::ARRAY_BUFFER_BINDING,"ARRAY_BUFFER_BINDING");
	HX_MARK_MEMBER_NAME(GL_obj::ELEMENT_ARRAY_BUFFER_BINDING,"ELEMENT_ARRAY_BUFFER_BINDING");
	HX_MARK_MEMBER_NAME(GL_obj::STREAM_DRAW,"STREAM_DRAW");
	HX_MARK_MEMBER_NAME(GL_obj::STATIC_DRAW,"STATIC_DRAW");
	HX_MARK_MEMBER_NAME(GL_obj::DYNAMIC_DRAW,"DYNAMIC_DRAW");
	HX_MARK_MEMBER_NAME(GL_obj::BUFFER_SIZE,"BUFFER_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::BUFFER_USAGE,"BUFFER_USAGE");
	HX_MARK_MEMBER_NAME(GL_obj::CURRENT_VERTEX_ATTRIB,"CURRENT_VERTEX_ATTRIB");
	HX_MARK_MEMBER_NAME(GL_obj::FRONT,"FRONT");
	HX_MARK_MEMBER_NAME(GL_obj::BACK,"BACK");
	HX_MARK_MEMBER_NAME(GL_obj::FRONT_AND_BACK,"FRONT_AND_BACK");
	HX_MARK_MEMBER_NAME(GL_obj::CULL_FACE,"CULL_FACE");
	HX_MARK_MEMBER_NAME(GL_obj::BLEND,"BLEND");
	HX_MARK_MEMBER_NAME(GL_obj::DITHER,"DITHER");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_TEST,"STENCIL_TEST");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_TEST,"DEPTH_TEST");
	HX_MARK_MEMBER_NAME(GL_obj::SCISSOR_TEST,"SCISSOR_TEST");
	HX_MARK_MEMBER_NAME(GL_obj::POLYGON_OFFSET_FILL,"POLYGON_OFFSET_FILL");
	HX_MARK_MEMBER_NAME(GL_obj::SAMPLE_ALPHA_TO_COVERAGE,"SAMPLE_ALPHA_TO_COVERAGE");
	HX_MARK_MEMBER_NAME(GL_obj::SAMPLE_COVERAGE,"SAMPLE_COVERAGE");
	HX_MARK_MEMBER_NAME(GL_obj::NO_ERROR,"NO_ERROR");
	HX_MARK_MEMBER_NAME(GL_obj::INVALID_ENUM,"INVALID_ENUM");
	HX_MARK_MEMBER_NAME(GL_obj::INVALID_VALUE,"INVALID_VALUE");
	HX_MARK_MEMBER_NAME(GL_obj::INVALID_OPERATION,"INVALID_OPERATION");
	HX_MARK_MEMBER_NAME(GL_obj::OUT_OF_MEMORY,"OUT_OF_MEMORY");
	HX_MARK_MEMBER_NAME(GL_obj::CW,"CW");
	HX_MARK_MEMBER_NAME(GL_obj::CCW,"CCW");
	HX_MARK_MEMBER_NAME(GL_obj::LINE_WIDTH,"LINE_WIDTH");
	HX_MARK_MEMBER_NAME(GL_obj::ALIASED_POINT_SIZE_RANGE,"ALIASED_POINT_SIZE_RANGE");
	HX_MARK_MEMBER_NAME(GL_obj::ALIASED_LINE_WIDTH_RANGE,"ALIASED_LINE_WIDTH_RANGE");
	HX_MARK_MEMBER_NAME(GL_obj::CULL_FACE_MODE,"CULL_FACE_MODE");
	HX_MARK_MEMBER_NAME(GL_obj::FRONT_FACE,"FRONT_FACE");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_RANGE,"DEPTH_RANGE");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_WRITEMASK,"DEPTH_WRITEMASK");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_CLEAR_VALUE,"DEPTH_CLEAR_VALUE");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_FUNC,"DEPTH_FUNC");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_CLEAR_VALUE,"STENCIL_CLEAR_VALUE");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_FUNC,"STENCIL_FUNC");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_FAIL,"STENCIL_FAIL");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_PASS_DEPTH_FAIL,"STENCIL_PASS_DEPTH_FAIL");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_PASS_DEPTH_PASS,"STENCIL_PASS_DEPTH_PASS");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_REF,"STENCIL_REF");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_VALUE_MASK,"STENCIL_VALUE_MASK");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_WRITEMASK,"STENCIL_WRITEMASK");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_BACK_FUNC,"STENCIL_BACK_FUNC");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_BACK_FAIL,"STENCIL_BACK_FAIL");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_BACK_PASS_DEPTH_FAIL,"STENCIL_BACK_PASS_DEPTH_FAIL");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_BACK_PASS_DEPTH_PASS,"STENCIL_BACK_PASS_DEPTH_PASS");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_BACK_REF,"STENCIL_BACK_REF");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_BACK_VALUE_MASK,"STENCIL_BACK_VALUE_MASK");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_BACK_WRITEMASK,"STENCIL_BACK_WRITEMASK");
	HX_MARK_MEMBER_NAME(GL_obj::VIEWPORT,"VIEWPORT");
	HX_MARK_MEMBER_NAME(GL_obj::SCISSOR_BOX,"SCISSOR_BOX");
	HX_MARK_MEMBER_NAME(GL_obj::COLOR_CLEAR_VALUE,"COLOR_CLEAR_VALUE");
	HX_MARK_MEMBER_NAME(GL_obj::COLOR_WRITEMASK,"COLOR_WRITEMASK");
	HX_MARK_MEMBER_NAME(GL_obj::UNPACK_ALIGNMENT,"UNPACK_ALIGNMENT");
	HX_MARK_MEMBER_NAME(GL_obj::PACK_ALIGNMENT,"PACK_ALIGNMENT");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_TEXTURE_SIZE,"MAX_TEXTURE_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_VIEWPORT_DIMS,"MAX_VIEWPORT_DIMS");
	HX_MARK_MEMBER_NAME(GL_obj::SUBPIXEL_BITS,"SUBPIXEL_BITS");
	HX_MARK_MEMBER_NAME(GL_obj::RED_BITS,"RED_BITS");
	HX_MARK_MEMBER_NAME(GL_obj::GREEN_BITS,"GREEN_BITS");
	HX_MARK_MEMBER_NAME(GL_obj::BLUE_BITS,"BLUE_BITS");
	HX_MARK_MEMBER_NAME(GL_obj::ALPHA_BITS,"ALPHA_BITS");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_BITS,"DEPTH_BITS");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_BITS,"STENCIL_BITS");
	HX_MARK_MEMBER_NAME(GL_obj::POLYGON_OFFSET_UNITS,"POLYGON_OFFSET_UNITS");
	HX_MARK_MEMBER_NAME(GL_obj::POLYGON_OFFSET_FACTOR,"POLYGON_OFFSET_FACTOR");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_BINDING_2D,"TEXTURE_BINDING_2D");
	HX_MARK_MEMBER_NAME(GL_obj::SAMPLE_BUFFERS,"SAMPLE_BUFFERS");
	HX_MARK_MEMBER_NAME(GL_obj::SAMPLES,"SAMPLES");
	HX_MARK_MEMBER_NAME(GL_obj::SAMPLE_COVERAGE_VALUE,"SAMPLE_COVERAGE_VALUE");
	HX_MARK_MEMBER_NAME(GL_obj::SAMPLE_COVERAGE_INVERT,"SAMPLE_COVERAGE_INVERT");
	HX_MARK_MEMBER_NAME(GL_obj::COMPRESSED_TEXTURE_FORMATS,"COMPRESSED_TEXTURE_FORMATS");
	HX_MARK_MEMBER_NAME(GL_obj::DONT_CARE,"DONT_CARE");
	HX_MARK_MEMBER_NAME(GL_obj::FASTEST,"FASTEST");
	HX_MARK_MEMBER_NAME(GL_obj::NICEST,"NICEST");
	HX_MARK_MEMBER_NAME(GL_obj::GENERATE_MIPMAP_HINT,"GENERATE_MIPMAP_HINT");
	HX_MARK_MEMBER_NAME(GL_obj::BYTE,"BYTE");
	HX_MARK_MEMBER_NAME(GL_obj::UNSIGNED_BYTE,"UNSIGNED_BYTE");
	HX_MARK_MEMBER_NAME(GL_obj::SHORT,"SHORT");
	HX_MARK_MEMBER_NAME(GL_obj::UNSIGNED_SHORT,"UNSIGNED_SHORT");
	HX_MARK_MEMBER_NAME(GL_obj::INT,"INT");
	HX_MARK_MEMBER_NAME(GL_obj::UNSIGNED_INT,"UNSIGNED_INT");
	HX_MARK_MEMBER_NAME(GL_obj::FLOAT,"FLOAT");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_COMPONENT,"DEPTH_COMPONENT");
	HX_MARK_MEMBER_NAME(GL_obj::ALPHA,"ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::RGB,"RGB");
	HX_MARK_MEMBER_NAME(GL_obj::RGBA,"RGBA");
	HX_MARK_MEMBER_NAME(GL_obj::BGR_EXT,"BGR_EXT");
	HX_MARK_MEMBER_NAME(GL_obj::BGRA_EXT,"BGRA_EXT");
	HX_MARK_MEMBER_NAME(GL_obj::LUMINANCE,"LUMINANCE");
	HX_MARK_MEMBER_NAME(GL_obj::LUMINANCE_ALPHA,"LUMINANCE_ALPHA");
	HX_MARK_MEMBER_NAME(GL_obj::UNSIGNED_SHORT_4_4_4_4,"UNSIGNED_SHORT_4_4_4_4");
	HX_MARK_MEMBER_NAME(GL_obj::UNSIGNED_SHORT_5_5_5_1,"UNSIGNED_SHORT_5_5_5_1");
	HX_MARK_MEMBER_NAME(GL_obj::UNSIGNED_SHORT_5_6_5,"UNSIGNED_SHORT_5_6_5");
	HX_MARK_MEMBER_NAME(GL_obj::FRAGMENT_SHADER,"FRAGMENT_SHADER");
	HX_MARK_MEMBER_NAME(GL_obj::VERTEX_SHADER,"VERTEX_SHADER");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_VERTEX_ATTRIBS,"MAX_VERTEX_ATTRIBS");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_VERTEX_UNIFORM_VECTORS,"MAX_VERTEX_UNIFORM_VECTORS");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_VARYING_VECTORS,"MAX_VARYING_VECTORS");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_COMBINED_TEXTURE_IMAGE_UNITS,"MAX_COMBINED_TEXTURE_IMAGE_UNITS");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_VERTEX_TEXTURE_IMAGE_UNITS,"MAX_VERTEX_TEXTURE_IMAGE_UNITS");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_TEXTURE_IMAGE_UNITS,"MAX_TEXTURE_IMAGE_UNITS");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_FRAGMENT_UNIFORM_VECTORS,"MAX_FRAGMENT_UNIFORM_VECTORS");
	HX_MARK_MEMBER_NAME(GL_obj::SHADER_TYPE,"SHADER_TYPE");
	HX_MARK_MEMBER_NAME(GL_obj::DELETE_STATUS,"DELETE_STATUS");
	HX_MARK_MEMBER_NAME(GL_obj::LINK_STATUS,"LINK_STATUS");
	HX_MARK_MEMBER_NAME(GL_obj::VALIDATE_STATUS,"VALIDATE_STATUS");
	HX_MARK_MEMBER_NAME(GL_obj::ATTACHED_SHADERS,"ATTACHED_SHADERS");
	HX_MARK_MEMBER_NAME(GL_obj::ACTIVE_UNIFORMS,"ACTIVE_UNIFORMS");
	HX_MARK_MEMBER_NAME(GL_obj::ACTIVE_ATTRIBUTES,"ACTIVE_ATTRIBUTES");
	HX_MARK_MEMBER_NAME(GL_obj::SHADING_LANGUAGE_VERSION,"SHADING_LANGUAGE_VERSION");
	HX_MARK_MEMBER_NAME(GL_obj::CURRENT_PROGRAM,"CURRENT_PROGRAM");
	HX_MARK_MEMBER_NAME(GL_obj::NEVER,"NEVER");
	HX_MARK_MEMBER_NAME(GL_obj::LESS,"LESS");
	HX_MARK_MEMBER_NAME(GL_obj::EQUAL,"EQUAL");
	HX_MARK_MEMBER_NAME(GL_obj::LEQUAL,"LEQUAL");
	HX_MARK_MEMBER_NAME(GL_obj::GREATER,"GREATER");
	HX_MARK_MEMBER_NAME(GL_obj::NOTEQUAL,"NOTEQUAL");
	HX_MARK_MEMBER_NAME(GL_obj::GEQUAL,"GEQUAL");
	HX_MARK_MEMBER_NAME(GL_obj::ALWAYS,"ALWAYS");
	HX_MARK_MEMBER_NAME(GL_obj::KEEP,"KEEP");
	HX_MARK_MEMBER_NAME(GL_obj::REPLACE,"REPLACE");
	HX_MARK_MEMBER_NAME(GL_obj::INCR,"INCR");
	HX_MARK_MEMBER_NAME(GL_obj::DECR,"DECR");
	HX_MARK_MEMBER_NAME(GL_obj::INVERT,"INVERT");
	HX_MARK_MEMBER_NAME(GL_obj::INCR_WRAP,"INCR_WRAP");
	HX_MARK_MEMBER_NAME(GL_obj::DECR_WRAP,"DECR_WRAP");
	HX_MARK_MEMBER_NAME(GL_obj::VENDOR,"VENDOR");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERER,"RENDERER");
	HX_MARK_MEMBER_NAME(GL_obj::VERSION,"VERSION");
	HX_MARK_MEMBER_NAME(GL_obj::NEAREST,"NEAREST");
	HX_MARK_MEMBER_NAME(GL_obj::LINEAR,"LINEAR");
	HX_MARK_MEMBER_NAME(GL_obj::NEAREST_MIPMAP_NEAREST,"NEAREST_MIPMAP_NEAREST");
	HX_MARK_MEMBER_NAME(GL_obj::LINEAR_MIPMAP_NEAREST,"LINEAR_MIPMAP_NEAREST");
	HX_MARK_MEMBER_NAME(GL_obj::NEAREST_MIPMAP_LINEAR,"NEAREST_MIPMAP_LINEAR");
	HX_MARK_MEMBER_NAME(GL_obj::LINEAR_MIPMAP_LINEAR,"LINEAR_MIPMAP_LINEAR");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_MAG_FILTER,"TEXTURE_MAG_FILTER");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_MIN_FILTER,"TEXTURE_MIN_FILTER");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_WRAP_S,"TEXTURE_WRAP_S");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_WRAP_T,"TEXTURE_WRAP_T");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_2D,"TEXTURE_2D");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE,"TEXTURE");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP,"TEXTURE_CUBE_MAP");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_BINDING_CUBE_MAP,"TEXTURE_BINDING_CUBE_MAP");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_POSITIVE_X,"TEXTURE_CUBE_MAP_POSITIVE_X");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_X,"TEXTURE_CUBE_MAP_NEGATIVE_X");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_POSITIVE_Y,"TEXTURE_CUBE_MAP_POSITIVE_Y");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_Y,"TEXTURE_CUBE_MAP_NEGATIVE_Y");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_POSITIVE_Z,"TEXTURE_CUBE_MAP_POSITIVE_Z");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_Z,"TEXTURE_CUBE_MAP_NEGATIVE_Z");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_CUBE_MAP_TEXTURE_SIZE,"MAX_CUBE_MAP_TEXTURE_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE0,"TEXTURE0");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE1,"TEXTURE1");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE2,"TEXTURE2");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE3,"TEXTURE3");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE4,"TEXTURE4");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE5,"TEXTURE5");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE6,"TEXTURE6");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE7,"TEXTURE7");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE8,"TEXTURE8");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE9,"TEXTURE9");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE10,"TEXTURE10");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE11,"TEXTURE11");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE12,"TEXTURE12");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE13,"TEXTURE13");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE14,"TEXTURE14");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE15,"TEXTURE15");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE16,"TEXTURE16");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE17,"TEXTURE17");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE18,"TEXTURE18");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE19,"TEXTURE19");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE20,"TEXTURE20");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE21,"TEXTURE21");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE22,"TEXTURE22");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE23,"TEXTURE23");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE24,"TEXTURE24");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE25,"TEXTURE25");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE26,"TEXTURE26");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE27,"TEXTURE27");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE28,"TEXTURE28");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE29,"TEXTURE29");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE30,"TEXTURE30");
	HX_MARK_MEMBER_NAME(GL_obj::TEXTURE31,"TEXTURE31");
	HX_MARK_MEMBER_NAME(GL_obj::ACTIVE_TEXTURE,"ACTIVE_TEXTURE");
	HX_MARK_MEMBER_NAME(GL_obj::REPEAT,"REPEAT");
	HX_MARK_MEMBER_NAME(GL_obj::CLAMP_TO_EDGE,"CLAMP_TO_EDGE");
	HX_MARK_MEMBER_NAME(GL_obj::MIRRORED_REPEAT,"MIRRORED_REPEAT");
	HX_MARK_MEMBER_NAME(GL_obj::FLOAT_VEC2,"FLOAT_VEC2");
	HX_MARK_MEMBER_NAME(GL_obj::FLOAT_VEC3,"FLOAT_VEC3");
	HX_MARK_MEMBER_NAME(GL_obj::FLOAT_VEC4,"FLOAT_VEC4");
	HX_MARK_MEMBER_NAME(GL_obj::INT_VEC2,"INT_VEC2");
	HX_MARK_MEMBER_NAME(GL_obj::INT_VEC3,"INT_VEC3");
	HX_MARK_MEMBER_NAME(GL_obj::INT_VEC4,"INT_VEC4");
	HX_MARK_MEMBER_NAME(GL_obj::BOOL,"BOOL");
	HX_MARK_MEMBER_NAME(GL_obj::BOOL_VEC2,"BOOL_VEC2");
	HX_MARK_MEMBER_NAME(GL_obj::BOOL_VEC3,"BOOL_VEC3");
	HX_MARK_MEMBER_NAME(GL_obj::BOOL_VEC4,"BOOL_VEC4");
	HX_MARK_MEMBER_NAME(GL_obj::FLOAT_MAT2,"FLOAT_MAT2");
	HX_MARK_MEMBER_NAME(GL_obj::FLOAT_MAT3,"FLOAT_MAT3");
	HX_MARK_MEMBER_NAME(GL_obj::FLOAT_MAT4,"FLOAT_MAT4");
	HX_MARK_MEMBER_NAME(GL_obj::SAMPLER_2D,"SAMPLER_2D");
	HX_MARK_MEMBER_NAME(GL_obj::SAMPLER_CUBE,"SAMPLER_CUBE");
	HX_MARK_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_ENABLED,"VERTEX_ATTRIB_ARRAY_ENABLED");
	HX_MARK_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_SIZE,"VERTEX_ATTRIB_ARRAY_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_STRIDE,"VERTEX_ATTRIB_ARRAY_STRIDE");
	HX_MARK_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_TYPE,"VERTEX_ATTRIB_ARRAY_TYPE");
	HX_MARK_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_NORMALIZED,"VERTEX_ATTRIB_ARRAY_NORMALIZED");
	HX_MARK_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_POINTER,"VERTEX_ATTRIB_ARRAY_POINTER");
	HX_MARK_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_BUFFER_BINDING,"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING");
	HX_MARK_MEMBER_NAME(GL_obj::VERTEX_PROGRAM_POINT_SIZE,"VERTEX_PROGRAM_POINT_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::POINT_SPRITE,"POINT_SPRITE");
	HX_MARK_MEMBER_NAME(GL_obj::COMPILE_STATUS,"COMPILE_STATUS");
	HX_MARK_MEMBER_NAME(GL_obj::LOW_FLOAT,"LOW_FLOAT");
	HX_MARK_MEMBER_NAME(GL_obj::MEDIUM_FLOAT,"MEDIUM_FLOAT");
	HX_MARK_MEMBER_NAME(GL_obj::HIGH_FLOAT,"HIGH_FLOAT");
	HX_MARK_MEMBER_NAME(GL_obj::LOW_INT,"LOW_INT");
	HX_MARK_MEMBER_NAME(GL_obj::MEDIUM_INT,"MEDIUM_INT");
	HX_MARK_MEMBER_NAME(GL_obj::HIGH_INT,"HIGH_INT");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER,"FRAMEBUFFER");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER,"RENDERBUFFER");
	HX_MARK_MEMBER_NAME(GL_obj::RGBA4,"RGBA4");
	HX_MARK_MEMBER_NAME(GL_obj::RGB5_A1,"RGB5_A1");
	HX_MARK_MEMBER_NAME(GL_obj::RGB565,"RGB565");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_COMPONENT16,"DEPTH_COMPONENT16");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_INDEX,"STENCIL_INDEX");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_INDEX8,"STENCIL_INDEX8");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_STENCIL,"DEPTH_STENCIL");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_WIDTH,"RENDERBUFFER_WIDTH");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_HEIGHT,"RENDERBUFFER_HEIGHT");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_INTERNAL_FORMAT,"RENDERBUFFER_INTERNAL_FORMAT");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_RED_SIZE,"RENDERBUFFER_RED_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_GREEN_SIZE,"RENDERBUFFER_GREEN_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_BLUE_SIZE,"RENDERBUFFER_BLUE_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_ALPHA_SIZE,"RENDERBUFFER_ALPHA_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_DEPTH_SIZE,"RENDERBUFFER_DEPTH_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_STENCIL_SIZE,"RENDERBUFFER_STENCIL_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE,"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_ATTACHMENT_OBJECT_NAME,"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE,"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE");
	HX_MARK_MEMBER_NAME(GL_obj::COLOR_ATTACHMENT0,"COLOR_ATTACHMENT0");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_ATTACHMENT,"DEPTH_ATTACHMENT");
	HX_MARK_MEMBER_NAME(GL_obj::STENCIL_ATTACHMENT,"STENCIL_ATTACHMENT");
	HX_MARK_MEMBER_NAME(GL_obj::DEPTH_STENCIL_ATTACHMENT,"DEPTH_STENCIL_ATTACHMENT");
	HX_MARK_MEMBER_NAME(GL_obj::NONE,"NONE");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_COMPLETE,"FRAMEBUFFER_COMPLETE");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_INCOMPLETE_ATTACHMENT,"FRAMEBUFFER_INCOMPLETE_ATTACHMENT");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT,"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_INCOMPLETE_DIMENSIONS,"FRAMEBUFFER_INCOMPLETE_DIMENSIONS");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_UNSUPPORTED,"FRAMEBUFFER_UNSUPPORTED");
	HX_MARK_MEMBER_NAME(GL_obj::FRAMEBUFFER_BINDING,"FRAMEBUFFER_BINDING");
	HX_MARK_MEMBER_NAME(GL_obj::RENDERBUFFER_BINDING,"RENDERBUFFER_BINDING");
	HX_MARK_MEMBER_NAME(GL_obj::MAX_RENDERBUFFER_SIZE,"MAX_RENDERBUFFER_SIZE");
	HX_MARK_MEMBER_NAME(GL_obj::INVALID_FRAMEBUFFER_OPERATION,"INVALID_FRAMEBUFFER_OPERATION");
	HX_MARK_MEMBER_NAME(GL_obj::UNPACK_FLIP_Y_WEBGL,"UNPACK_FLIP_Y_WEBGL");
	HX_MARK_MEMBER_NAME(GL_obj::UNPACK_PREMULTIPLY_ALPHA_WEBGL,"UNPACK_PREMULTIPLY_ALPHA_WEBGL");
	HX_MARK_MEMBER_NAME(GL_obj::CONTEXT_LOST_WEBGL,"CONTEXT_LOST_WEBGL");
	HX_MARK_MEMBER_NAME(GL_obj::UNPACK_COLORSPACE_CONVERSION_WEBGL,"UNPACK_COLORSPACE_CONVERSION_WEBGL");
	HX_MARK_MEMBER_NAME(GL_obj::BROWSER_DEFAULT_WEBGL,"BROWSER_DEFAULT_WEBGL");
	HX_MARK_MEMBER_NAME(GL_obj::version,"version");
	HX_MARK_MEMBER_NAME(GL_obj::_hx___currentProgram,"__currentProgram");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_active_texture,"cffi_lime_gl_active_texture");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_attach_shader,"cffi_lime_gl_attach_shader");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_bind_attrib_location,"cffi_lime_gl_bind_attrib_location");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_bind_buffer,"cffi_lime_gl_bind_buffer");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_bind_framebuffer,"cffi_lime_gl_bind_framebuffer");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_bind_renderbuffer,"cffi_lime_gl_bind_renderbuffer");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_bind_texture,"cffi_lime_gl_bind_texture");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_blend_color,"cffi_lime_gl_blend_color");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_blend_equation,"cffi_lime_gl_blend_equation");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_blend_equation_separate,"cffi_lime_gl_blend_equation_separate");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_blend_func,"cffi_lime_gl_blend_func");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_blend_func_separate,"cffi_lime_gl_blend_func_separate");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_buffer_data,"cffi_lime_gl_buffer_data");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_buffer_sub_data,"cffi_lime_gl_buffer_sub_data");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_check_framebuffer_status,"cffi_lime_gl_check_framebuffer_status");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_clear,"cffi_lime_gl_clear");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_clear_color,"cffi_lime_gl_clear_color");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_clear_depth,"cffi_lime_gl_clear_depth");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_clear_stencil,"cffi_lime_gl_clear_stencil");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_color_mask,"cffi_lime_gl_color_mask");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_compile_shader,"cffi_lime_gl_compile_shader");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_compressed_tex_image_2d,"cffi_lime_gl_compressed_tex_image_2d");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_compressed_tex_sub_image_2d,"cffi_lime_gl_compressed_tex_sub_image_2d");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_copy_tex_image_2d,"cffi_lime_gl_copy_tex_image_2d");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_copy_tex_sub_image_2d,"cffi_lime_gl_copy_tex_sub_image_2d");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_create_buffer,"cffi_lime_gl_create_buffer");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_create_framebuffer,"cffi_lime_gl_create_framebuffer");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_create_program,"cffi_lime_gl_create_program");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_create_render_buffer,"cffi_lime_gl_create_render_buffer");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_create_shader,"cffi_lime_gl_create_shader");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_create_texture,"cffi_lime_gl_create_texture");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_cull_face,"cffi_lime_gl_cull_face");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_delete_buffer,"cffi_lime_gl_delete_buffer");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_delete_framebuffer,"cffi_lime_gl_delete_framebuffer");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_delete_program,"cffi_lime_gl_delete_program");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_delete_render_buffer,"cffi_lime_gl_delete_render_buffer");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_delete_shader,"cffi_lime_gl_delete_shader");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_delete_texture,"cffi_lime_gl_delete_texture");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_depth_func,"cffi_lime_gl_depth_func");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_depth_mask,"cffi_lime_gl_depth_mask");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_depth_range,"cffi_lime_gl_depth_range");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_detach_shader,"cffi_lime_gl_detach_shader");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_disable,"cffi_lime_gl_disable");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_disable_vertex_attrib_array,"cffi_lime_gl_disable_vertex_attrib_array");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_draw_arrays,"cffi_lime_gl_draw_arrays");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_draw_elements,"cffi_lime_gl_draw_elements");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_enable,"cffi_lime_gl_enable");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_enable_vertex_attrib_array,"cffi_lime_gl_enable_vertex_attrib_array");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_finish,"cffi_lime_gl_finish");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_flush,"cffi_lime_gl_flush");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_framebuffer_renderbuffer,"cffi_lime_gl_framebuffer_renderbuffer");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_framebuffer_texture2D,"cffi_lime_gl_framebuffer_texture2D");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_front_face,"cffi_lime_gl_front_face");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_generate_mipmap,"cffi_lime_gl_generate_mipmap");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_get_active_attrib,"cffi_lime_gl_get_active_attrib");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_get_active_uniform,"cffi_lime_gl_get_active_uniform");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_get_attrib_location,"cffi_lime_gl_get_attrib_location");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_get_buffer_parameter,"cffi_lime_gl_get_buffer_parameter");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_get_context_attributes,"cffi_lime_gl_get_context_attributes");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_get_error,"cffi_lime_gl_get_error");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_get_extension,"cffi_lime_gl_get_extension");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_get_framebuffer_attachment_parameter,"cffi_lime_gl_get_framebuffer_attachment_parameter");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_get_parameter,"cffi_lime_gl_get_parameter");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_get_program_info_log,"cffi_lime_gl_get_program_info_log");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_get_program_parameter,"cffi_lime_gl_get_program_parameter");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_get_render_buffer_parameter,"cffi_lime_gl_get_render_buffer_parameter");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_get_shader_info_log,"cffi_lime_gl_get_shader_info_log");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_get_shader_parameter,"cffi_lime_gl_get_shader_parameter");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_get_shader_precision_format,"cffi_lime_gl_get_shader_precision_format");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_get_shader_source,"cffi_lime_gl_get_shader_source");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_get_supported_extensions,"cffi_lime_gl_get_supported_extensions");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_get_tex_parameter,"cffi_lime_gl_get_tex_parameter");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_get_uniform,"cffi_lime_gl_get_uniform");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_get_uniform_location,"cffi_lime_gl_get_uniform_location");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_get_vertex_attrib,"cffi_lime_gl_get_vertex_attrib");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_get_vertex_attrib_offset,"cffi_lime_gl_get_vertex_attrib_offset");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_hint,"cffi_lime_gl_hint");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_is_buffer,"cffi_lime_gl_is_buffer");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_is_enabled,"cffi_lime_gl_is_enabled");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_is_framebuffer,"cffi_lime_gl_is_framebuffer");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_is_program,"cffi_lime_gl_is_program");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_is_renderbuffer,"cffi_lime_gl_is_renderbuffer");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_is_shader,"cffi_lime_gl_is_shader");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_is_texture,"cffi_lime_gl_is_texture");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_line_width,"cffi_lime_gl_line_width");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_link_program,"cffi_lime_gl_link_program");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_pixel_storei,"cffi_lime_gl_pixel_storei");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_polygon_offset,"cffi_lime_gl_polygon_offset");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_read_pixels,"cffi_lime_gl_read_pixels");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_renderbuffer_storage,"cffi_lime_gl_renderbuffer_storage");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_sample_coverage,"cffi_lime_gl_sample_coverage");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_scissor,"cffi_lime_gl_scissor");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_shader_source,"cffi_lime_gl_shader_source");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_stencil_func,"cffi_lime_gl_stencil_func");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_stencil_func_separate,"cffi_lime_gl_stencil_func_separate");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_stencil_mask,"cffi_lime_gl_stencil_mask");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_stencil_mask_separate,"cffi_lime_gl_stencil_mask_separate");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_stencil_op,"cffi_lime_gl_stencil_op");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_stencil_op_separate,"cffi_lime_gl_stencil_op_separate");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_tex_image_2d,"cffi_lime_gl_tex_image_2d");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_tex_parameterf,"cffi_lime_gl_tex_parameterf");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_tex_parameteri,"cffi_lime_gl_tex_parameteri");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_tex_sub_image_2d,"cffi_lime_gl_tex_sub_image_2d");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform1f,"cffi_lime_gl_uniform1f");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform1fv,"cffi_lime_gl_uniform1fv");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform1i,"cffi_lime_gl_uniform1i");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform1iv,"cffi_lime_gl_uniform1iv");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform2f,"cffi_lime_gl_uniform2f");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform2fv,"cffi_lime_gl_uniform2fv");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform2i,"cffi_lime_gl_uniform2i");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform2iv,"cffi_lime_gl_uniform2iv");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform3f,"cffi_lime_gl_uniform3f");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform3fv,"cffi_lime_gl_uniform3fv");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform3i,"cffi_lime_gl_uniform3i");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform3iv,"cffi_lime_gl_uniform3iv");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform4f,"cffi_lime_gl_uniform4f");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform4fv,"cffi_lime_gl_uniform4fv");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform4i,"cffi_lime_gl_uniform4i");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform4iv,"cffi_lime_gl_uniform4iv");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform_matrix,"cffi_lime_gl_uniform_matrix");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_use_program,"cffi_lime_gl_use_program");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_validate_program,"cffi_lime_gl_validate_program");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_version,"cffi_lime_gl_version");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_vertex_attrib1f,"cffi_lime_gl_vertex_attrib1f");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_vertex_attrib1fv,"cffi_lime_gl_vertex_attrib1fv");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_vertex_attrib2f,"cffi_lime_gl_vertex_attrib2f");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_vertex_attrib2fv,"cffi_lime_gl_vertex_attrib2fv");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_vertex_attrib3f,"cffi_lime_gl_vertex_attrib3f");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_vertex_attrib3fv,"cffi_lime_gl_vertex_attrib3fv");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_vertex_attrib4f,"cffi_lime_gl_vertex_attrib4f");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_vertex_attrib4fv,"cffi_lime_gl_vertex_attrib4fv");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_vertex_attrib_pointer,"cffi_lime_gl_vertex_attrib_pointer");
	HX_MARK_MEMBER_NAME(GL_obj::cffi_lime_gl_viewport,"cffi_lime_gl_viewport");
};

#ifdef HXCPP_VISIT_ALLOCS
static void GL_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(GL_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_BUFFER_BIT,"DEPTH_BUFFER_BIT");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_BUFFER_BIT,"STENCIL_BUFFER_BIT");
	HX_VISIT_MEMBER_NAME(GL_obj::COLOR_BUFFER_BIT,"COLOR_BUFFER_BIT");
	HX_VISIT_MEMBER_NAME(GL_obj::POINTS,"POINTS");
	HX_VISIT_MEMBER_NAME(GL_obj::LINES,"LINES");
	HX_VISIT_MEMBER_NAME(GL_obj::LINE_LOOP,"LINE_LOOP");
	HX_VISIT_MEMBER_NAME(GL_obj::LINE_STRIP,"LINE_STRIP");
	HX_VISIT_MEMBER_NAME(GL_obj::TRIANGLES,"TRIANGLES");
	HX_VISIT_MEMBER_NAME(GL_obj::TRIANGLE_STRIP,"TRIANGLE_STRIP");
	HX_VISIT_MEMBER_NAME(GL_obj::TRIANGLE_FAN,"TRIANGLE_FAN");
	HX_VISIT_MEMBER_NAME(GL_obj::ZERO,"ZERO");
	HX_VISIT_MEMBER_NAME(GL_obj::ONE,"ONE");
	HX_VISIT_MEMBER_NAME(GL_obj::SRC_COLOR,"SRC_COLOR");
	HX_VISIT_MEMBER_NAME(GL_obj::ONE_MINUS_SRC_COLOR,"ONE_MINUS_SRC_COLOR");
	HX_VISIT_MEMBER_NAME(GL_obj::SRC_ALPHA,"SRC_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::ONE_MINUS_SRC_ALPHA,"ONE_MINUS_SRC_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::DST_ALPHA,"DST_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::ONE_MINUS_DST_ALPHA,"ONE_MINUS_DST_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::DST_COLOR,"DST_COLOR");
	HX_VISIT_MEMBER_NAME(GL_obj::ONE_MINUS_DST_COLOR,"ONE_MINUS_DST_COLOR");
	HX_VISIT_MEMBER_NAME(GL_obj::SRC_ALPHA_SATURATE,"SRC_ALPHA_SATURATE");
	HX_VISIT_MEMBER_NAME(GL_obj::FUNC_ADD,"FUNC_ADD");
	HX_VISIT_MEMBER_NAME(GL_obj::BLEND_EQUATION,"BLEND_EQUATION");
	HX_VISIT_MEMBER_NAME(GL_obj::BLEND_EQUATION_RGB,"BLEND_EQUATION_RGB");
	HX_VISIT_MEMBER_NAME(GL_obj::BLEND_EQUATION_ALPHA,"BLEND_EQUATION_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::FUNC_SUBTRACT,"FUNC_SUBTRACT");
	HX_VISIT_MEMBER_NAME(GL_obj::FUNC_REVERSE_SUBTRACT,"FUNC_REVERSE_SUBTRACT");
	HX_VISIT_MEMBER_NAME(GL_obj::BLEND_DST_RGB,"BLEND_DST_RGB");
	HX_VISIT_MEMBER_NAME(GL_obj::BLEND_SRC_RGB,"BLEND_SRC_RGB");
	HX_VISIT_MEMBER_NAME(GL_obj::BLEND_DST_ALPHA,"BLEND_DST_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::BLEND_SRC_ALPHA,"BLEND_SRC_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::CONSTANT_COLOR,"CONSTANT_COLOR");
	HX_VISIT_MEMBER_NAME(GL_obj::ONE_MINUS_CONSTANT_COLOR,"ONE_MINUS_CONSTANT_COLOR");
	HX_VISIT_MEMBER_NAME(GL_obj::CONSTANT_ALPHA,"CONSTANT_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::ONE_MINUS_CONSTANT_ALPHA,"ONE_MINUS_CONSTANT_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::BLEND_COLOR,"BLEND_COLOR");
	HX_VISIT_MEMBER_NAME(GL_obj::ARRAY_BUFFER,"ARRAY_BUFFER");
	HX_VISIT_MEMBER_NAME(GL_obj::ELEMENT_ARRAY_BUFFER,"ELEMENT_ARRAY_BUFFER");
	HX_VISIT_MEMBER_NAME(GL_obj::ARRAY_BUFFER_BINDING,"ARRAY_BUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(GL_obj::ELEMENT_ARRAY_BUFFER_BINDING,"ELEMENT_ARRAY_BUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(GL_obj::STREAM_DRAW,"STREAM_DRAW");
	HX_VISIT_MEMBER_NAME(GL_obj::STATIC_DRAW,"STATIC_DRAW");
	HX_VISIT_MEMBER_NAME(GL_obj::DYNAMIC_DRAW,"DYNAMIC_DRAW");
	HX_VISIT_MEMBER_NAME(GL_obj::BUFFER_SIZE,"BUFFER_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::BUFFER_USAGE,"BUFFER_USAGE");
	HX_VISIT_MEMBER_NAME(GL_obj::CURRENT_VERTEX_ATTRIB,"CURRENT_VERTEX_ATTRIB");
	HX_VISIT_MEMBER_NAME(GL_obj::FRONT,"FRONT");
	HX_VISIT_MEMBER_NAME(GL_obj::BACK,"BACK");
	HX_VISIT_MEMBER_NAME(GL_obj::FRONT_AND_BACK,"FRONT_AND_BACK");
	HX_VISIT_MEMBER_NAME(GL_obj::CULL_FACE,"CULL_FACE");
	HX_VISIT_MEMBER_NAME(GL_obj::BLEND,"BLEND");
	HX_VISIT_MEMBER_NAME(GL_obj::DITHER,"DITHER");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_TEST,"STENCIL_TEST");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_TEST,"DEPTH_TEST");
	HX_VISIT_MEMBER_NAME(GL_obj::SCISSOR_TEST,"SCISSOR_TEST");
	HX_VISIT_MEMBER_NAME(GL_obj::POLYGON_OFFSET_FILL,"POLYGON_OFFSET_FILL");
	HX_VISIT_MEMBER_NAME(GL_obj::SAMPLE_ALPHA_TO_COVERAGE,"SAMPLE_ALPHA_TO_COVERAGE");
	HX_VISIT_MEMBER_NAME(GL_obj::SAMPLE_COVERAGE,"SAMPLE_COVERAGE");
	HX_VISIT_MEMBER_NAME(GL_obj::NO_ERROR,"NO_ERROR");
	HX_VISIT_MEMBER_NAME(GL_obj::INVALID_ENUM,"INVALID_ENUM");
	HX_VISIT_MEMBER_NAME(GL_obj::INVALID_VALUE,"INVALID_VALUE");
	HX_VISIT_MEMBER_NAME(GL_obj::INVALID_OPERATION,"INVALID_OPERATION");
	HX_VISIT_MEMBER_NAME(GL_obj::OUT_OF_MEMORY,"OUT_OF_MEMORY");
	HX_VISIT_MEMBER_NAME(GL_obj::CW,"CW");
	HX_VISIT_MEMBER_NAME(GL_obj::CCW,"CCW");
	HX_VISIT_MEMBER_NAME(GL_obj::LINE_WIDTH,"LINE_WIDTH");
	HX_VISIT_MEMBER_NAME(GL_obj::ALIASED_POINT_SIZE_RANGE,"ALIASED_POINT_SIZE_RANGE");
	HX_VISIT_MEMBER_NAME(GL_obj::ALIASED_LINE_WIDTH_RANGE,"ALIASED_LINE_WIDTH_RANGE");
	HX_VISIT_MEMBER_NAME(GL_obj::CULL_FACE_MODE,"CULL_FACE_MODE");
	HX_VISIT_MEMBER_NAME(GL_obj::FRONT_FACE,"FRONT_FACE");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_RANGE,"DEPTH_RANGE");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_WRITEMASK,"DEPTH_WRITEMASK");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_CLEAR_VALUE,"DEPTH_CLEAR_VALUE");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_FUNC,"DEPTH_FUNC");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_CLEAR_VALUE,"STENCIL_CLEAR_VALUE");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_FUNC,"STENCIL_FUNC");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_FAIL,"STENCIL_FAIL");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_PASS_DEPTH_FAIL,"STENCIL_PASS_DEPTH_FAIL");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_PASS_DEPTH_PASS,"STENCIL_PASS_DEPTH_PASS");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_REF,"STENCIL_REF");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_VALUE_MASK,"STENCIL_VALUE_MASK");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_WRITEMASK,"STENCIL_WRITEMASK");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_BACK_FUNC,"STENCIL_BACK_FUNC");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_BACK_FAIL,"STENCIL_BACK_FAIL");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_BACK_PASS_DEPTH_FAIL,"STENCIL_BACK_PASS_DEPTH_FAIL");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_BACK_PASS_DEPTH_PASS,"STENCIL_BACK_PASS_DEPTH_PASS");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_BACK_REF,"STENCIL_BACK_REF");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_BACK_VALUE_MASK,"STENCIL_BACK_VALUE_MASK");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_BACK_WRITEMASK,"STENCIL_BACK_WRITEMASK");
	HX_VISIT_MEMBER_NAME(GL_obj::VIEWPORT,"VIEWPORT");
	HX_VISIT_MEMBER_NAME(GL_obj::SCISSOR_BOX,"SCISSOR_BOX");
	HX_VISIT_MEMBER_NAME(GL_obj::COLOR_CLEAR_VALUE,"COLOR_CLEAR_VALUE");
	HX_VISIT_MEMBER_NAME(GL_obj::COLOR_WRITEMASK,"COLOR_WRITEMASK");
	HX_VISIT_MEMBER_NAME(GL_obj::UNPACK_ALIGNMENT,"UNPACK_ALIGNMENT");
	HX_VISIT_MEMBER_NAME(GL_obj::PACK_ALIGNMENT,"PACK_ALIGNMENT");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_TEXTURE_SIZE,"MAX_TEXTURE_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_VIEWPORT_DIMS,"MAX_VIEWPORT_DIMS");
	HX_VISIT_MEMBER_NAME(GL_obj::SUBPIXEL_BITS,"SUBPIXEL_BITS");
	HX_VISIT_MEMBER_NAME(GL_obj::RED_BITS,"RED_BITS");
	HX_VISIT_MEMBER_NAME(GL_obj::GREEN_BITS,"GREEN_BITS");
	HX_VISIT_MEMBER_NAME(GL_obj::BLUE_BITS,"BLUE_BITS");
	HX_VISIT_MEMBER_NAME(GL_obj::ALPHA_BITS,"ALPHA_BITS");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_BITS,"DEPTH_BITS");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_BITS,"STENCIL_BITS");
	HX_VISIT_MEMBER_NAME(GL_obj::POLYGON_OFFSET_UNITS,"POLYGON_OFFSET_UNITS");
	HX_VISIT_MEMBER_NAME(GL_obj::POLYGON_OFFSET_FACTOR,"POLYGON_OFFSET_FACTOR");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_BINDING_2D,"TEXTURE_BINDING_2D");
	HX_VISIT_MEMBER_NAME(GL_obj::SAMPLE_BUFFERS,"SAMPLE_BUFFERS");
	HX_VISIT_MEMBER_NAME(GL_obj::SAMPLES,"SAMPLES");
	HX_VISIT_MEMBER_NAME(GL_obj::SAMPLE_COVERAGE_VALUE,"SAMPLE_COVERAGE_VALUE");
	HX_VISIT_MEMBER_NAME(GL_obj::SAMPLE_COVERAGE_INVERT,"SAMPLE_COVERAGE_INVERT");
	HX_VISIT_MEMBER_NAME(GL_obj::COMPRESSED_TEXTURE_FORMATS,"COMPRESSED_TEXTURE_FORMATS");
	HX_VISIT_MEMBER_NAME(GL_obj::DONT_CARE,"DONT_CARE");
	HX_VISIT_MEMBER_NAME(GL_obj::FASTEST,"FASTEST");
	HX_VISIT_MEMBER_NAME(GL_obj::NICEST,"NICEST");
	HX_VISIT_MEMBER_NAME(GL_obj::GENERATE_MIPMAP_HINT,"GENERATE_MIPMAP_HINT");
	HX_VISIT_MEMBER_NAME(GL_obj::BYTE,"BYTE");
	HX_VISIT_MEMBER_NAME(GL_obj::UNSIGNED_BYTE,"UNSIGNED_BYTE");
	HX_VISIT_MEMBER_NAME(GL_obj::SHORT,"SHORT");
	HX_VISIT_MEMBER_NAME(GL_obj::UNSIGNED_SHORT,"UNSIGNED_SHORT");
	HX_VISIT_MEMBER_NAME(GL_obj::INT,"INT");
	HX_VISIT_MEMBER_NAME(GL_obj::UNSIGNED_INT,"UNSIGNED_INT");
	HX_VISIT_MEMBER_NAME(GL_obj::FLOAT,"FLOAT");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_COMPONENT,"DEPTH_COMPONENT");
	HX_VISIT_MEMBER_NAME(GL_obj::ALPHA,"ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::RGB,"RGB");
	HX_VISIT_MEMBER_NAME(GL_obj::RGBA,"RGBA");
	HX_VISIT_MEMBER_NAME(GL_obj::BGR_EXT,"BGR_EXT");
	HX_VISIT_MEMBER_NAME(GL_obj::BGRA_EXT,"BGRA_EXT");
	HX_VISIT_MEMBER_NAME(GL_obj::LUMINANCE,"LUMINANCE");
	HX_VISIT_MEMBER_NAME(GL_obj::LUMINANCE_ALPHA,"LUMINANCE_ALPHA");
	HX_VISIT_MEMBER_NAME(GL_obj::UNSIGNED_SHORT_4_4_4_4,"UNSIGNED_SHORT_4_4_4_4");
	HX_VISIT_MEMBER_NAME(GL_obj::UNSIGNED_SHORT_5_5_5_1,"UNSIGNED_SHORT_5_5_5_1");
	HX_VISIT_MEMBER_NAME(GL_obj::UNSIGNED_SHORT_5_6_5,"UNSIGNED_SHORT_5_6_5");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAGMENT_SHADER,"FRAGMENT_SHADER");
	HX_VISIT_MEMBER_NAME(GL_obj::VERTEX_SHADER,"VERTEX_SHADER");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_VERTEX_ATTRIBS,"MAX_VERTEX_ATTRIBS");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_VERTEX_UNIFORM_VECTORS,"MAX_VERTEX_UNIFORM_VECTORS");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_VARYING_VECTORS,"MAX_VARYING_VECTORS");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_COMBINED_TEXTURE_IMAGE_UNITS,"MAX_COMBINED_TEXTURE_IMAGE_UNITS");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_VERTEX_TEXTURE_IMAGE_UNITS,"MAX_VERTEX_TEXTURE_IMAGE_UNITS");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_TEXTURE_IMAGE_UNITS,"MAX_TEXTURE_IMAGE_UNITS");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_FRAGMENT_UNIFORM_VECTORS,"MAX_FRAGMENT_UNIFORM_VECTORS");
	HX_VISIT_MEMBER_NAME(GL_obj::SHADER_TYPE,"SHADER_TYPE");
	HX_VISIT_MEMBER_NAME(GL_obj::DELETE_STATUS,"DELETE_STATUS");
	HX_VISIT_MEMBER_NAME(GL_obj::LINK_STATUS,"LINK_STATUS");
	HX_VISIT_MEMBER_NAME(GL_obj::VALIDATE_STATUS,"VALIDATE_STATUS");
	HX_VISIT_MEMBER_NAME(GL_obj::ATTACHED_SHADERS,"ATTACHED_SHADERS");
	HX_VISIT_MEMBER_NAME(GL_obj::ACTIVE_UNIFORMS,"ACTIVE_UNIFORMS");
	HX_VISIT_MEMBER_NAME(GL_obj::ACTIVE_ATTRIBUTES,"ACTIVE_ATTRIBUTES");
	HX_VISIT_MEMBER_NAME(GL_obj::SHADING_LANGUAGE_VERSION,"SHADING_LANGUAGE_VERSION");
	HX_VISIT_MEMBER_NAME(GL_obj::CURRENT_PROGRAM,"CURRENT_PROGRAM");
	HX_VISIT_MEMBER_NAME(GL_obj::NEVER,"NEVER");
	HX_VISIT_MEMBER_NAME(GL_obj::LESS,"LESS");
	HX_VISIT_MEMBER_NAME(GL_obj::EQUAL,"EQUAL");
	HX_VISIT_MEMBER_NAME(GL_obj::LEQUAL,"LEQUAL");
	HX_VISIT_MEMBER_NAME(GL_obj::GREATER,"GREATER");
	HX_VISIT_MEMBER_NAME(GL_obj::NOTEQUAL,"NOTEQUAL");
	HX_VISIT_MEMBER_NAME(GL_obj::GEQUAL,"GEQUAL");
	HX_VISIT_MEMBER_NAME(GL_obj::ALWAYS,"ALWAYS");
	HX_VISIT_MEMBER_NAME(GL_obj::KEEP,"KEEP");
	HX_VISIT_MEMBER_NAME(GL_obj::REPLACE,"REPLACE");
	HX_VISIT_MEMBER_NAME(GL_obj::INCR,"INCR");
	HX_VISIT_MEMBER_NAME(GL_obj::DECR,"DECR");
	HX_VISIT_MEMBER_NAME(GL_obj::INVERT,"INVERT");
	HX_VISIT_MEMBER_NAME(GL_obj::INCR_WRAP,"INCR_WRAP");
	HX_VISIT_MEMBER_NAME(GL_obj::DECR_WRAP,"DECR_WRAP");
	HX_VISIT_MEMBER_NAME(GL_obj::VENDOR,"VENDOR");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERER,"RENDERER");
	HX_VISIT_MEMBER_NAME(GL_obj::VERSION,"VERSION");
	HX_VISIT_MEMBER_NAME(GL_obj::NEAREST,"NEAREST");
	HX_VISIT_MEMBER_NAME(GL_obj::LINEAR,"LINEAR");
	HX_VISIT_MEMBER_NAME(GL_obj::NEAREST_MIPMAP_NEAREST,"NEAREST_MIPMAP_NEAREST");
	HX_VISIT_MEMBER_NAME(GL_obj::LINEAR_MIPMAP_NEAREST,"LINEAR_MIPMAP_NEAREST");
	HX_VISIT_MEMBER_NAME(GL_obj::NEAREST_MIPMAP_LINEAR,"NEAREST_MIPMAP_LINEAR");
	HX_VISIT_MEMBER_NAME(GL_obj::LINEAR_MIPMAP_LINEAR,"LINEAR_MIPMAP_LINEAR");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_MAG_FILTER,"TEXTURE_MAG_FILTER");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_MIN_FILTER,"TEXTURE_MIN_FILTER");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_WRAP_S,"TEXTURE_WRAP_S");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_WRAP_T,"TEXTURE_WRAP_T");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_2D,"TEXTURE_2D");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE,"TEXTURE");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP,"TEXTURE_CUBE_MAP");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_BINDING_CUBE_MAP,"TEXTURE_BINDING_CUBE_MAP");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_POSITIVE_X,"TEXTURE_CUBE_MAP_POSITIVE_X");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_X,"TEXTURE_CUBE_MAP_NEGATIVE_X");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_POSITIVE_Y,"TEXTURE_CUBE_MAP_POSITIVE_Y");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_Y,"TEXTURE_CUBE_MAP_NEGATIVE_Y");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_POSITIVE_Z,"TEXTURE_CUBE_MAP_POSITIVE_Z");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE_CUBE_MAP_NEGATIVE_Z,"TEXTURE_CUBE_MAP_NEGATIVE_Z");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_CUBE_MAP_TEXTURE_SIZE,"MAX_CUBE_MAP_TEXTURE_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE0,"TEXTURE0");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE1,"TEXTURE1");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE2,"TEXTURE2");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE3,"TEXTURE3");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE4,"TEXTURE4");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE5,"TEXTURE5");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE6,"TEXTURE6");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE7,"TEXTURE7");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE8,"TEXTURE8");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE9,"TEXTURE9");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE10,"TEXTURE10");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE11,"TEXTURE11");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE12,"TEXTURE12");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE13,"TEXTURE13");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE14,"TEXTURE14");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE15,"TEXTURE15");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE16,"TEXTURE16");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE17,"TEXTURE17");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE18,"TEXTURE18");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE19,"TEXTURE19");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE20,"TEXTURE20");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE21,"TEXTURE21");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE22,"TEXTURE22");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE23,"TEXTURE23");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE24,"TEXTURE24");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE25,"TEXTURE25");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE26,"TEXTURE26");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE27,"TEXTURE27");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE28,"TEXTURE28");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE29,"TEXTURE29");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE30,"TEXTURE30");
	HX_VISIT_MEMBER_NAME(GL_obj::TEXTURE31,"TEXTURE31");
	HX_VISIT_MEMBER_NAME(GL_obj::ACTIVE_TEXTURE,"ACTIVE_TEXTURE");
	HX_VISIT_MEMBER_NAME(GL_obj::REPEAT,"REPEAT");
	HX_VISIT_MEMBER_NAME(GL_obj::CLAMP_TO_EDGE,"CLAMP_TO_EDGE");
	HX_VISIT_MEMBER_NAME(GL_obj::MIRRORED_REPEAT,"MIRRORED_REPEAT");
	HX_VISIT_MEMBER_NAME(GL_obj::FLOAT_VEC2,"FLOAT_VEC2");
	HX_VISIT_MEMBER_NAME(GL_obj::FLOAT_VEC3,"FLOAT_VEC3");
	HX_VISIT_MEMBER_NAME(GL_obj::FLOAT_VEC4,"FLOAT_VEC4");
	HX_VISIT_MEMBER_NAME(GL_obj::INT_VEC2,"INT_VEC2");
	HX_VISIT_MEMBER_NAME(GL_obj::INT_VEC3,"INT_VEC3");
	HX_VISIT_MEMBER_NAME(GL_obj::INT_VEC4,"INT_VEC4");
	HX_VISIT_MEMBER_NAME(GL_obj::BOOL,"BOOL");
	HX_VISIT_MEMBER_NAME(GL_obj::BOOL_VEC2,"BOOL_VEC2");
	HX_VISIT_MEMBER_NAME(GL_obj::BOOL_VEC3,"BOOL_VEC3");
	HX_VISIT_MEMBER_NAME(GL_obj::BOOL_VEC4,"BOOL_VEC4");
	HX_VISIT_MEMBER_NAME(GL_obj::FLOAT_MAT2,"FLOAT_MAT2");
	HX_VISIT_MEMBER_NAME(GL_obj::FLOAT_MAT3,"FLOAT_MAT3");
	HX_VISIT_MEMBER_NAME(GL_obj::FLOAT_MAT4,"FLOAT_MAT4");
	HX_VISIT_MEMBER_NAME(GL_obj::SAMPLER_2D,"SAMPLER_2D");
	HX_VISIT_MEMBER_NAME(GL_obj::SAMPLER_CUBE,"SAMPLER_CUBE");
	HX_VISIT_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_ENABLED,"VERTEX_ATTRIB_ARRAY_ENABLED");
	HX_VISIT_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_SIZE,"VERTEX_ATTRIB_ARRAY_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_STRIDE,"VERTEX_ATTRIB_ARRAY_STRIDE");
	HX_VISIT_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_TYPE,"VERTEX_ATTRIB_ARRAY_TYPE");
	HX_VISIT_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_NORMALIZED,"VERTEX_ATTRIB_ARRAY_NORMALIZED");
	HX_VISIT_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_POINTER,"VERTEX_ATTRIB_ARRAY_POINTER");
	HX_VISIT_MEMBER_NAME(GL_obj::VERTEX_ATTRIB_ARRAY_BUFFER_BINDING,"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(GL_obj::VERTEX_PROGRAM_POINT_SIZE,"VERTEX_PROGRAM_POINT_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::POINT_SPRITE,"POINT_SPRITE");
	HX_VISIT_MEMBER_NAME(GL_obj::COMPILE_STATUS,"COMPILE_STATUS");
	HX_VISIT_MEMBER_NAME(GL_obj::LOW_FLOAT,"LOW_FLOAT");
	HX_VISIT_MEMBER_NAME(GL_obj::MEDIUM_FLOAT,"MEDIUM_FLOAT");
	HX_VISIT_MEMBER_NAME(GL_obj::HIGH_FLOAT,"HIGH_FLOAT");
	HX_VISIT_MEMBER_NAME(GL_obj::LOW_INT,"LOW_INT");
	HX_VISIT_MEMBER_NAME(GL_obj::MEDIUM_INT,"MEDIUM_INT");
	HX_VISIT_MEMBER_NAME(GL_obj::HIGH_INT,"HIGH_INT");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER,"FRAMEBUFFER");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER,"RENDERBUFFER");
	HX_VISIT_MEMBER_NAME(GL_obj::RGBA4,"RGBA4");
	HX_VISIT_MEMBER_NAME(GL_obj::RGB5_A1,"RGB5_A1");
	HX_VISIT_MEMBER_NAME(GL_obj::RGB565,"RGB565");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_COMPONENT16,"DEPTH_COMPONENT16");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_INDEX,"STENCIL_INDEX");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_INDEX8,"STENCIL_INDEX8");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_STENCIL,"DEPTH_STENCIL");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_WIDTH,"RENDERBUFFER_WIDTH");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_HEIGHT,"RENDERBUFFER_HEIGHT");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_INTERNAL_FORMAT,"RENDERBUFFER_INTERNAL_FORMAT");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_RED_SIZE,"RENDERBUFFER_RED_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_GREEN_SIZE,"RENDERBUFFER_GREEN_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_BLUE_SIZE,"RENDERBUFFER_BLUE_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_ALPHA_SIZE,"RENDERBUFFER_ALPHA_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_DEPTH_SIZE,"RENDERBUFFER_DEPTH_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_STENCIL_SIZE,"RENDERBUFFER_STENCIL_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE,"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_ATTACHMENT_OBJECT_NAME,"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE,"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE");
	HX_VISIT_MEMBER_NAME(GL_obj::COLOR_ATTACHMENT0,"COLOR_ATTACHMENT0");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_ATTACHMENT,"DEPTH_ATTACHMENT");
	HX_VISIT_MEMBER_NAME(GL_obj::STENCIL_ATTACHMENT,"STENCIL_ATTACHMENT");
	HX_VISIT_MEMBER_NAME(GL_obj::DEPTH_STENCIL_ATTACHMENT,"DEPTH_STENCIL_ATTACHMENT");
	HX_VISIT_MEMBER_NAME(GL_obj::NONE,"NONE");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_COMPLETE,"FRAMEBUFFER_COMPLETE");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_INCOMPLETE_ATTACHMENT,"FRAMEBUFFER_INCOMPLETE_ATTACHMENT");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT,"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_INCOMPLETE_DIMENSIONS,"FRAMEBUFFER_INCOMPLETE_DIMENSIONS");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_UNSUPPORTED,"FRAMEBUFFER_UNSUPPORTED");
	HX_VISIT_MEMBER_NAME(GL_obj::FRAMEBUFFER_BINDING,"FRAMEBUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(GL_obj::RENDERBUFFER_BINDING,"RENDERBUFFER_BINDING");
	HX_VISIT_MEMBER_NAME(GL_obj::MAX_RENDERBUFFER_SIZE,"MAX_RENDERBUFFER_SIZE");
	HX_VISIT_MEMBER_NAME(GL_obj::INVALID_FRAMEBUFFER_OPERATION,"INVALID_FRAMEBUFFER_OPERATION");
	HX_VISIT_MEMBER_NAME(GL_obj::UNPACK_FLIP_Y_WEBGL,"UNPACK_FLIP_Y_WEBGL");
	HX_VISIT_MEMBER_NAME(GL_obj::UNPACK_PREMULTIPLY_ALPHA_WEBGL,"UNPACK_PREMULTIPLY_ALPHA_WEBGL");
	HX_VISIT_MEMBER_NAME(GL_obj::CONTEXT_LOST_WEBGL,"CONTEXT_LOST_WEBGL");
	HX_VISIT_MEMBER_NAME(GL_obj::UNPACK_COLORSPACE_CONVERSION_WEBGL,"UNPACK_COLORSPACE_CONVERSION_WEBGL");
	HX_VISIT_MEMBER_NAME(GL_obj::BROWSER_DEFAULT_WEBGL,"BROWSER_DEFAULT_WEBGL");
	HX_VISIT_MEMBER_NAME(GL_obj::version,"version");
	HX_VISIT_MEMBER_NAME(GL_obj::_hx___currentProgram,"__currentProgram");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_active_texture,"cffi_lime_gl_active_texture");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_attach_shader,"cffi_lime_gl_attach_shader");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_bind_attrib_location,"cffi_lime_gl_bind_attrib_location");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_bind_buffer,"cffi_lime_gl_bind_buffer");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_bind_framebuffer,"cffi_lime_gl_bind_framebuffer");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_bind_renderbuffer,"cffi_lime_gl_bind_renderbuffer");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_bind_texture,"cffi_lime_gl_bind_texture");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_blend_color,"cffi_lime_gl_blend_color");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_blend_equation,"cffi_lime_gl_blend_equation");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_blend_equation_separate,"cffi_lime_gl_blend_equation_separate");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_blend_func,"cffi_lime_gl_blend_func");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_blend_func_separate,"cffi_lime_gl_blend_func_separate");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_buffer_data,"cffi_lime_gl_buffer_data");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_buffer_sub_data,"cffi_lime_gl_buffer_sub_data");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_check_framebuffer_status,"cffi_lime_gl_check_framebuffer_status");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_clear,"cffi_lime_gl_clear");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_clear_color,"cffi_lime_gl_clear_color");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_clear_depth,"cffi_lime_gl_clear_depth");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_clear_stencil,"cffi_lime_gl_clear_stencil");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_color_mask,"cffi_lime_gl_color_mask");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_compile_shader,"cffi_lime_gl_compile_shader");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_compressed_tex_image_2d,"cffi_lime_gl_compressed_tex_image_2d");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_compressed_tex_sub_image_2d,"cffi_lime_gl_compressed_tex_sub_image_2d");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_copy_tex_image_2d,"cffi_lime_gl_copy_tex_image_2d");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_copy_tex_sub_image_2d,"cffi_lime_gl_copy_tex_sub_image_2d");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_create_buffer,"cffi_lime_gl_create_buffer");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_create_framebuffer,"cffi_lime_gl_create_framebuffer");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_create_program,"cffi_lime_gl_create_program");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_create_render_buffer,"cffi_lime_gl_create_render_buffer");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_create_shader,"cffi_lime_gl_create_shader");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_create_texture,"cffi_lime_gl_create_texture");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_cull_face,"cffi_lime_gl_cull_face");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_delete_buffer,"cffi_lime_gl_delete_buffer");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_delete_framebuffer,"cffi_lime_gl_delete_framebuffer");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_delete_program,"cffi_lime_gl_delete_program");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_delete_render_buffer,"cffi_lime_gl_delete_render_buffer");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_delete_shader,"cffi_lime_gl_delete_shader");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_delete_texture,"cffi_lime_gl_delete_texture");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_depth_func,"cffi_lime_gl_depth_func");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_depth_mask,"cffi_lime_gl_depth_mask");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_depth_range,"cffi_lime_gl_depth_range");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_detach_shader,"cffi_lime_gl_detach_shader");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_disable,"cffi_lime_gl_disable");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_disable_vertex_attrib_array,"cffi_lime_gl_disable_vertex_attrib_array");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_draw_arrays,"cffi_lime_gl_draw_arrays");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_draw_elements,"cffi_lime_gl_draw_elements");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_enable,"cffi_lime_gl_enable");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_enable_vertex_attrib_array,"cffi_lime_gl_enable_vertex_attrib_array");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_finish,"cffi_lime_gl_finish");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_flush,"cffi_lime_gl_flush");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_framebuffer_renderbuffer,"cffi_lime_gl_framebuffer_renderbuffer");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_framebuffer_texture2D,"cffi_lime_gl_framebuffer_texture2D");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_front_face,"cffi_lime_gl_front_face");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_generate_mipmap,"cffi_lime_gl_generate_mipmap");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_get_active_attrib,"cffi_lime_gl_get_active_attrib");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_get_active_uniform,"cffi_lime_gl_get_active_uniform");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_get_attrib_location,"cffi_lime_gl_get_attrib_location");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_get_buffer_parameter,"cffi_lime_gl_get_buffer_parameter");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_get_context_attributes,"cffi_lime_gl_get_context_attributes");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_get_error,"cffi_lime_gl_get_error");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_get_extension,"cffi_lime_gl_get_extension");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_get_framebuffer_attachment_parameter,"cffi_lime_gl_get_framebuffer_attachment_parameter");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_get_parameter,"cffi_lime_gl_get_parameter");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_get_program_info_log,"cffi_lime_gl_get_program_info_log");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_get_program_parameter,"cffi_lime_gl_get_program_parameter");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_get_render_buffer_parameter,"cffi_lime_gl_get_render_buffer_parameter");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_get_shader_info_log,"cffi_lime_gl_get_shader_info_log");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_get_shader_parameter,"cffi_lime_gl_get_shader_parameter");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_get_shader_precision_format,"cffi_lime_gl_get_shader_precision_format");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_get_shader_source,"cffi_lime_gl_get_shader_source");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_get_supported_extensions,"cffi_lime_gl_get_supported_extensions");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_get_tex_parameter,"cffi_lime_gl_get_tex_parameter");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_get_uniform,"cffi_lime_gl_get_uniform");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_get_uniform_location,"cffi_lime_gl_get_uniform_location");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_get_vertex_attrib,"cffi_lime_gl_get_vertex_attrib");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_get_vertex_attrib_offset,"cffi_lime_gl_get_vertex_attrib_offset");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_hint,"cffi_lime_gl_hint");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_is_buffer,"cffi_lime_gl_is_buffer");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_is_enabled,"cffi_lime_gl_is_enabled");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_is_framebuffer,"cffi_lime_gl_is_framebuffer");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_is_program,"cffi_lime_gl_is_program");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_is_renderbuffer,"cffi_lime_gl_is_renderbuffer");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_is_shader,"cffi_lime_gl_is_shader");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_is_texture,"cffi_lime_gl_is_texture");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_line_width,"cffi_lime_gl_line_width");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_link_program,"cffi_lime_gl_link_program");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_pixel_storei,"cffi_lime_gl_pixel_storei");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_polygon_offset,"cffi_lime_gl_polygon_offset");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_read_pixels,"cffi_lime_gl_read_pixels");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_renderbuffer_storage,"cffi_lime_gl_renderbuffer_storage");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_sample_coverage,"cffi_lime_gl_sample_coverage");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_scissor,"cffi_lime_gl_scissor");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_shader_source,"cffi_lime_gl_shader_source");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_stencil_func,"cffi_lime_gl_stencil_func");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_stencil_func_separate,"cffi_lime_gl_stencil_func_separate");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_stencil_mask,"cffi_lime_gl_stencil_mask");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_stencil_mask_separate,"cffi_lime_gl_stencil_mask_separate");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_stencil_op,"cffi_lime_gl_stencil_op");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_stencil_op_separate,"cffi_lime_gl_stencil_op_separate");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_tex_image_2d,"cffi_lime_gl_tex_image_2d");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_tex_parameterf,"cffi_lime_gl_tex_parameterf");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_tex_parameteri,"cffi_lime_gl_tex_parameteri");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_tex_sub_image_2d,"cffi_lime_gl_tex_sub_image_2d");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform1f,"cffi_lime_gl_uniform1f");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform1fv,"cffi_lime_gl_uniform1fv");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform1i,"cffi_lime_gl_uniform1i");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform1iv,"cffi_lime_gl_uniform1iv");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform2f,"cffi_lime_gl_uniform2f");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform2fv,"cffi_lime_gl_uniform2fv");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform2i,"cffi_lime_gl_uniform2i");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform2iv,"cffi_lime_gl_uniform2iv");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform3f,"cffi_lime_gl_uniform3f");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform3fv,"cffi_lime_gl_uniform3fv");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform3i,"cffi_lime_gl_uniform3i");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform3iv,"cffi_lime_gl_uniform3iv");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform4f,"cffi_lime_gl_uniform4f");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform4fv,"cffi_lime_gl_uniform4fv");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform4i,"cffi_lime_gl_uniform4i");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform4iv,"cffi_lime_gl_uniform4iv");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_uniform_matrix,"cffi_lime_gl_uniform_matrix");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_use_program,"cffi_lime_gl_use_program");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_validate_program,"cffi_lime_gl_validate_program");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_version,"cffi_lime_gl_version");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_vertex_attrib1f,"cffi_lime_gl_vertex_attrib1f");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_vertex_attrib1fv,"cffi_lime_gl_vertex_attrib1fv");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_vertex_attrib2f,"cffi_lime_gl_vertex_attrib2f");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_vertex_attrib2fv,"cffi_lime_gl_vertex_attrib2fv");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_vertex_attrib3f,"cffi_lime_gl_vertex_attrib3f");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_vertex_attrib3fv,"cffi_lime_gl_vertex_attrib3fv");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_vertex_attrib4f,"cffi_lime_gl_vertex_attrib4f");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_vertex_attrib4fv,"cffi_lime_gl_vertex_attrib4fv");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_vertex_attrib_pointer,"cffi_lime_gl_vertex_attrib_pointer");
	HX_VISIT_MEMBER_NAME(GL_obj::cffi_lime_gl_viewport,"cffi_lime_gl_viewport");
};

#endif

hx::Class GL_obj::__mClass;

static ::String GL_obj_sStaticFields[] = {
	HX_HCSTRING("DEPTH_BUFFER_BIT","\xca","\x5b","\xce","\xc6"),
	HX_HCSTRING("STENCIL_BUFFER_BIT","\x71","\x93","\x29","\xde"),
	HX_HCSTRING("COLOR_BUFFER_BIT","\x6a","\xf7","\x74","\xfb"),
	HX_HCSTRING("POINTS","\x23","\xbe","\xb0","\xa9"),
	HX_HCSTRING("LINES","\xdf","\x15","\xf0","\xf2"),
	HX_HCSTRING("LINE_LOOP","\xcf","\x55","\xc1","\x16"),
	HX_HCSTRING("LINE_STRIP","\xed","\x20","\x88","\xdd"),
	HX_HCSTRING("TRIANGLES","\x8b","\xa0","\x99","\x7a"),
	HX_HCSTRING("TRIANGLE_STRIP","\xc1","\x66","\x6c","\xf6"),
	HX_HCSTRING("TRIANGLE_FAN","\x7c","\xee","\x2e","\x91"),
	HX_HCSTRING("ZERO","\x28","\xd7","\xb1","\x3b"),
	HX_HCSTRING("ONE","\x46","\x36","\x3c","\x00"),
	HX_HCSTRING("SRC_COLOR","\x48","\x9e","\xbd","\x5c"),
	HX_HCSTRING("ONE_MINUS_SRC_COLOR","\x20","\x3b","\xe1","\x48"),
	HX_HCSTRING("SRC_ALPHA","\x43","\xd4","\xf7","\x33"),
	HX_HCSTRING("ONE_MINUS_SRC_ALPHA","\x1b","\x71","\x1b","\x20"),
	HX_HCSTRING("DST_ALPHA","\x24","\x02","\xf2","\xd3"),
	HX_HCSTRING("ONE_MINUS_DST_ALPHA","\xfc","\x9e","\x15","\xc0"),
	HX_HCSTRING("DST_COLOR","\x29","\xcc","\xb7","\xfc"),
	HX_HCSTRING("ONE_MINUS_DST_COLOR","\x01","\x69","\xdb","\xe8"),
	HX_HCSTRING("SRC_ALPHA_SATURATE","\xab","\xe2","\x3d","\x33"),
	HX_HCSTRING("FUNC_ADD","\x46","\x78","\x17","\x75"),
	HX_HCSTRING("BLEND_EQUATION","\x9a","\x14","\x92","\x71"),
	HX_HCSTRING("BLEND_EQUATION_RGB","\x88","\x25","\xeb","\x90"),
	HX_HCSTRING("BLEND_EQUATION_ALPHA","\x99","\xaa","\xae","\x37"),
	HX_HCSTRING("FUNC_SUBTRACT","\xaf","\xc0","\xa0","\x17"),
	HX_HCSTRING("FUNC_REVERSE_SUBTRACT","\xcc","\x8d","\xef","\xf3"),
	HX_HCSTRING("BLEND_DST_RGB","\x05","\x87","\xf5","\xec"),
	HX_HCSTRING("BLEND_SRC_RGB","\x64","\x43","\x8c","\x2c"),
	HX_HCSTRING("BLEND_DST_ALPHA","\x56","\x25","\x32","\x74"),
	HX_HCSTRING("BLEND_SRC_ALPHA","\x75","\xf7","\x37","\xd4"),
	HX_HCSTRING("CONSTANT_COLOR","\xe8","\x64","\x8a","\xc8"),
	HX_HCSTRING("ONE_MINUS_CONSTANT_COLOR","\x10","\x39","\xe7","\x06"),
	HX_HCSTRING("CONSTANT_ALPHA","\xe3","\x9a","\xc4","\x9f"),
	HX_HCSTRING("ONE_MINUS_CONSTANT_ALPHA","\x0b","\x6f","\x21","\xde"),
	HX_HCSTRING("BLEND_COLOR","\x75","\xcb","\xc8","\x67"),
	HX_HCSTRING("ARRAY_BUFFER","\x46","\x66","\x17","\xf4"),
	HX_HCSTRING("ELEMENT_ARRAY_BUFFER","\x09","\x05","\x53","\x3d"),
	HX_HCSTRING("ARRAY_BUFFER_BINDING","\xec","\xd4","\xa9","\x79"),
	HX_HCSTRING("ELEMENT_ARRAY_BUFFER_BINDING","\xaf","\x6e","\x96","\xa2"),
	HX_HCSTRING("STREAM_DRAW","\x63","\x7f","\x28","\x15"),
	HX_HCSTRING("STATIC_DRAW","\x75","\x50","\x2f","\xba"),
	HX_HCSTRING("DYNAMIC_DRAW","\x24","\x04","\x1f","\x24"),
	HX_HCSTRING("BUFFER_SIZE","\xa0","\x7b","\x91","\x4c"),
	HX_HCSTRING("BUFFER_USAGE","\x42","\x05","\x11","\xe0"),
	HX_HCSTRING("CURRENT_VERTEX_ATTRIB","\x1f","\x8c","\x2f","\xab"),
	HX_HCSTRING("FRONT","\x89","\x50","\x7c","\x84"),
	HX_HCSTRING("BACK","\x27","\xa2","\xd1","\x2b"),
	HX_HCSTRING("FRONT_AND_BACK","\xa5","\x3d","\x6a","\xc1"),
	HX_HCSTRING("CULL_FACE","\x8a","\xa5","\xf4","\xcf"),
	HX_HCSTRING("BLEND","\x31","\x20","\xe3","\x32"),
	HX_HCSTRING("DITHER","\xe6","\xac","\x41","\x70"),
	HX_HCSTRING("STENCIL_TEST","\xd5","\xdc","\x69","\xd5"),
	HX_HCSTRING("DEPTH_TEST","\x6e","\x6c","\x25","\x28"),
	HX_HCSTRING("SCISSOR_TEST","\xb5","\xbe","\x51","\x59"),
	HX_HCSTRING("POLYGON_OFFSET_FILL","\x4a","\x3d","\x32","\xac"),
	HX_HCSTRING("SAMPLE_ALPHA_TO_COVERAGE","\x16","\x3e","\x56","\xe1"),
	HX_HCSTRING("SAMPLE_COVERAGE","\xdd","\xb7","\x0e","\xc1"),
	HX_HCSTRING("NO_ERROR","\xea","\xb5","\x7d","\x2f"),
	HX_HCSTRING("INVALID_ENUM","\xa9","\x74","\x70","\x13"),
	HX_HCSTRING("INVALID_VALUE","\xa9","\xe8","\x26","\xb0"),
	HX_HCSTRING("INVALID_OPERATION","\x5f","\xb1","\xc8","\x29"),
	HX_HCSTRING("OUT_OF_MEMORY","\x18","\xf2","\x97","\xe1"),
	HX_HCSTRING("CW","\xb4","\x3a","\x00","\x00"),
	HX_HCSTRING("CCW","\xb7","\x11","\x33","\x00"),
	HX_HCSTRING("LINE_WIDTH","\x1b","\x84","\xd2","\x23"),
	HX_HCSTRING("ALIASED_POINT_SIZE_RANGE","\xfe","\xf6","\xa4","\x7b"),
	HX_HCSTRING("ALIASED_LINE_WIDTH_RANGE","\xe9","\x22","\xd5","\x8a"),
	HX_HCSTRING("CULL_FACE_MODE","\x78","\xbd","\x87","\xd1"),
	HX_HCSTRING("FRONT_FACE","\x53","\xb7","\x4d","\xef"),
	HX_HCSTRING("DEPTH_RANGE","\x01","\x9a","\x23","\xcf"),
	HX_HCSTRING("DEPTH_WRITEMASK","\x8f","\x37","\x3f","\x66"),
	HX_HCSTRING("DEPTH_CLEAR_VALUE","\x23","\x17","\x0d","\x1b"),
	HX_HCSTRING("DEPTH_FUNC","\x60","\x8f","\xf0","\x1e"),
	HX_HCSTRING("STENCIL_CLEAR_VALUE","\x9c","\x91","\x82","\x73"),
	HX_HCSTRING("STENCIL_FUNC","\xc7","\xff","\x34","\xcc"),
	HX_HCSTRING("STENCIL_FAIL","\x61","\xce","\x25","\xcc"),
	HX_HCSTRING("STENCIL_PASS_DEPTH_FAIL","\x45","\xca","\xb9","\xc8"),
	HX_HCSTRING("STENCIL_PASS_DEPTH_PASS","\x38","\xf5","\x55","\xcf"),
	HX_HCSTRING("STENCIL_REF","\x10","\x6a","\xa5","\x3c"),
	HX_HCSTRING("STENCIL_VALUE_MASK","\x9d","\x58","\x5e","\xa0"),
	HX_HCSTRING("STENCIL_WRITEMASK","\xc8","\xf1","\xa6","\x49"),
	HX_HCSTRING("STENCIL_BACK_FUNC","\x39","\x78","\xa2","\x90"),
	HX_HCSTRING("STENCIL_BACK_FAIL","\xd3","\x46","\x93","\x90"),
	HX_HCSTRING("STENCIL_BACK_PASS_DEPTH_FAIL","\x13","\x23","\x0e","\x34"),
	HX_HCSTRING("STENCIL_BACK_PASS_DEPTH_PASS","\x06","\x4e","\xaa","\x3a"),
	HX_HCSTRING("STENCIL_BACK_REF","\xde","\x45","\xb8","\x08"),
	HX_HCSTRING("STENCIL_BACK_VALUE_MASK","\x8f","\xb2","\xc4","\x88"),
	HX_HCSTRING("STENCIL_BACK_WRITEMASK","\x16","\x9c","\x15","\xc2"),
	HX_HCSTRING("VIEWPORT","\x66","\xdc","\x2a","\xf6"),
	HX_HCSTRING("SCISSOR_BOX","\xe8","\x48","\x4c","\x55"),
	HX_HCSTRING("COLOR_CLEAR_VALUE","\x83","\xa7","\x2e","\xf8"),
	HX_HCSTRING("COLOR_WRITEMASK","\xef","\xef","\xf9","\x14"),
	HX_HCSTRING("UNPACK_ALIGNMENT","\xb6","\x2a","\x2e","\x4b"),
	HX_HCSTRING("PACK_ALIGNMENT","\x9d","\xd6","\x85","\xc3"),
	HX_HCSTRING("MAX_TEXTURE_SIZE","\xe0","\x0b","\x5b","\xfb"),
	HX_HCSTRING("MAX_VIEWPORT_DIMS","\xa9","\x2d","\xfb","\x08"),
	HX_HCSTRING("SUBPIXEL_BITS","\x1f","\xac","\x14","\x0a"),
	HX_HCSTRING("RED_BITS","\x14","\xf8","\x9e","\x96"),
	HX_HCSTRING("GREEN_BITS","\x62","\xa9","\x9b","\x94"),
	HX_HCSTRING("BLUE_BITS","\x0b","\x26","\x60","\xa1"),
	HX_HCSTRING("ALPHA_BITS","\xe7","\xfe","\x7b","\xe0"),
	HX_HCSTRING("DEPTH_BITS","\x22","\x9f","\x42","\x1c"),
	HX_HCSTRING("STENCIL_BITS","\x89","\x0f","\x87","\xc9"),
	HX_HCSTRING("POLYGON_OFFSET_UNITS","\xa8","\xe8","\x11","\xa6"),
	HX_HCSTRING("POLYGON_OFFSET_FACTOR","\x56","\x6b","\x12","\x2a"),
	HX_HCSTRING("TEXTURE_BINDING_2D","\x30","\xec","\x98","\xb1"),
	HX_HCSTRING("SAMPLE_BUFFERS","\xfe","\x16","\x71","\x3c"),
	HX_HCSTRING("SAMPLES","\xe9","\x98","\x9d","\x03"),
	HX_HCSTRING("SAMPLE_COVERAGE_VALUE","\x2f","\x7a","\x07","\x69"),
	HX_HCSTRING("SAMPLE_COVERAGE_INVERT","\x78","\x52","\xa5","\xcd"),
	HX_HCSTRING("COMPRESSED_TEXTURE_FORMATS","\x7a","\x13","\xe3","\x12"),
	HX_HCSTRING("DONT_CARE","\x7f","\x9b","\xc1","\xcf"),
	HX_HCSTRING("FASTEST","\x0a","\xa3","\x0d","\x5e"),
	HX_HCSTRING("NICEST","\x7e","\x6d","\x94","\x64"),
	HX_HCSTRING("GENERATE_MIPMAP_HINT","\x94","\xd3","\xd5","\x83"),
	HX_HCSTRING("BYTE","\x08","\xe7","\xe3","\x2b"),
	HX_HCSTRING("UNSIGNED_BYTE","\xd2","\x79","\x6b","\x01"),
	HX_HCSTRING("SHORT","\x5c","\xbc","\x15","\xfa"),
	HX_HCSTRING("UNSIGNED_SHORT","\x52","\x9a","\x2e","\xfb"),
	HX_HCSTRING("INT","\xcf","\xa8","\x37","\x00"),
	HX_HCSTRING("UNSIGNED_INT","\x45","\xfd","\xb9","\x1c"),
	HX_HCSTRING("FLOAT","\x7c","\xfd","\x84","\x80"),
	HX_HCSTRING("DEPTH_COMPONENT","\x01","\x1f","\x62","\x0f"),
	HX_HCSTRING("ALPHA","\x3e","\xdf","\x84","\x9f"),
	HX_HCSTRING("RGB","\xed","\x76","\x3e","\x00"),
	HX_HCSTRING("RGBA","\xb4","\x98","\x69","\x36"),
	HX_HCSTRING("BGR_EXT","\xef","\xba","\xba","\x91"),
	HX_HCSTRING("BGRA_EXT","\x36","\x94","\xc4","\xbc"),
	HX_HCSTRING("LUMINANCE","\xd8","\xa7","\xe0","\x63"),
	HX_HCSTRING("LUMINANCE_ALPHA","\x57","\x40","\xe0","\xbd"),
	HX_HCSTRING("UNSIGNED_SHORT_4_4_4_4","\xa6","\x33","\x71","\x7b"),
	HX_HCSTRING("UNSIGNED_SHORT_5_5_5_1","\x26","\x01","\x6e","\x38"),
	HX_HCSTRING("UNSIGNED_SHORT_5_6_5","\x75","\xbb","\x16","\x8c"),
	HX_HCSTRING("FRAGMENT_SHADER","\xf4","\x26","\x78","\xe9"),
	HX_HCSTRING("VERTEX_SHADER","\xe0","\x69","\x73","\x49"),
	HX_HCSTRING("MAX_VERTEX_ATTRIBS","\x49","\xc9","\x15","\x5f"),
	HX_HCSTRING("MAX_VERTEX_UNIFORM_VECTORS","\x45","\x6c","\x16","\x5a"),
	HX_HCSTRING("MAX_VARYING_VECTORS","\x06","\xb9","\xf7","\x37"),
	HX_HCSTRING("MAX_COMBINED_TEXTURE_IMAGE_UNITS","\xa8","\xd1","\xa6","\x77"),
	HX_HCSTRING("MAX_VERTEX_TEXTURE_IMAGE_UNITS","\xc7","\x90","\x95","\x2b"),
	HX_HCSTRING("MAX_TEXTURE_IMAGE_UNITS","\xcc","\x6c","\x61","\x54"),
	HX_HCSTRING("MAX_FRAGMENT_UNIFORM_VECTORS","\x71","\x49","\xf5","\x0a"),
	HX_HCSTRING("SHADER_TYPE","\x54","\xe5","\x27","\x87"),
	HX_HCSTRING("DELETE_STATUS","\x06","\xe4","\x98","\x1e"),
	HX_HCSTRING("LINK_STATUS","\x17","\x18","\x8f","\x45"),
	HX_HCSTRING("VALIDATE_STATUS","\xfb","\x22","\x07","\xc6"),
	HX_HCSTRING("ATTACHED_SHADERS","\x73","\xd2","\x76","\x75"),
	HX_HCSTRING("ACTIVE_UNIFORMS","\x98","\x7d","\x3a","\x2c"),
	HX_HCSTRING("ACTIVE_ATTRIBUTES","\xf0","\xe5","\xc7","\x4a"),
	HX_HCSTRING("SHADING_LANGUAGE_VERSION","\xe6","\xc4","\xef","\x70"),
	HX_HCSTRING("CURRENT_PROGRAM","\xfe","\x28","\xc0","\x3f"),
	HX_HCSTRING("NEVER","\x6c","\x76","\x1e","\x17"),
	HX_HCSTRING("LESS","\x59","\xdb","\x70","\x32"),
	HX_HCSTRING("EQUAL","\x94","\x07","\x71","\xf0"),
	HX_HCSTRING("LEQUAL","\xc8","\x73","\x90","\x53"),
	HX_HCSTRING("GREATER","\xda","\x64","\x94","\x37"),
	HX_HCSTRING("NOTEQUAL","\xc1","\xc1","\xe9","\xc8"),
	HX_HCSTRING("GEQUAL","\xed","\xa5","\xc7","\x53"),
	HX_HCSTRING("ALWAYS","\xcf","\xba","\x59","\xf9"),
	HX_HCSTRING("KEEP","\x85","\x98","\xc7","\x31"),
	HX_HCSTRING("REPLACE","\x14","\x1c","\xfc","\x2a"),
	HX_HCSTRING("INCR","\xd4","\xfd","\x7b","\x30"),
	HX_HCSTRING("DECR","\x70","\x18","\x27","\x2d"),
	HX_HCSTRING("INVERT","\x16","\x93","\x5b","\x52"),
	HX_HCSTRING("INCR_WRAP","\x55","\x7f","\x68","\x2c"),
	HX_HCSTRING("DECR_WRAP","\x39","\x6f","\xeb","\x0a"),
	HX_HCSTRING("VENDOR","\x88","\x91","\x19","\x51"),
	HX_HCSTRING("RENDERER","\x43","\x55","\x61","\x0c"),
	HX_HCSTRING("VERSION","\xf8","\xba","\xc5","\xfc"),
	HX_HCSTRING("NEAREST","\x3e","\xec","\x9d","\xe5"),
	HX_HCSTRING("LINEAR","\xe5","\xfd","\x22","\x9f"),
	HX_HCSTRING("NEAREST_MIPMAP_NEAREST","\x68","\xb9","\x63","\x7e"),
	HX_HCSTRING("LINEAR_MIPMAP_NEAREST","\xa1","\x9b","\xa4","\x65"),
	HX_HCSTRING("NEAREST_MIPMAP_LINEAR","\xfb","\x83","\xf2","\x3b"),
	HX_HCSTRING("LINEAR_MIPMAP_LINEAR","\xe2","\x8b","\xf8","\x99"),
	HX_HCSTRING("TEXTURE_MAG_FILTER","\x88","\xff","\xd5","\x1e"),
	HX_HCSTRING("TEXTURE_MIN_FILTER","\x69","\x66","\xc2","\x46"),
	HX_HCSTRING("TEXTURE_WRAP_S","\xa2","\x2d","\xc3","\xfe"),
	HX_HCSTRING("TEXTURE_WRAP_T","\xa3","\x2d","\xc3","\xfe"),
	HX_HCSTRING("TEXTURE_2D","\x16","\x0c","\xf8","\xa2"),
	HX_HCSTRING("TEXTURE","\xbb","\x9c","\xb4","\x1e"),
	HX_HCSTRING("TEXTURE_CUBE_MAP","\x36","\x7a","\xe1","\xad"),
	HX_HCSTRING("TEXTURE_BINDING_CUBE_MAP","\xd0","\x69","\x98","\x75"),
	HX_HCSTRING("TEXTURE_CUBE_MAP_POSITIVE_X","\xbb","\x1c","\xee","\x24"),
	HX_HCSTRING("TEXTURE_CUBE_MAP_NEGATIVE_X","\x77","\x03","\xe2","\x6b"),
	HX_HCSTRING("TEXTURE_CUBE_MAP_POSITIVE_Y","\xbc","\x1c","\xee","\x24"),
	HX_HCSTRING("TEXTURE_CUBE_MAP_NEGATIVE_Y","\x78","\x03","\xe2","\x6b"),
	HX_HCSTRING("TEXTURE_CUBE_MAP_POSITIVE_Z","\xbd","\x1c","\xee","\x24"),
	HX_HCSTRING("TEXTURE_CUBE_MAP_NEGATIVE_Z","\x79","\x03","\xe2","\x6b"),
	HX_HCSTRING("MAX_CUBE_MAP_TEXTURE_SIZE","\x77","\xb9","\x24","\x9d"),
	HX_HCSTRING("TEXTURE0","\x15","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE1","\x16","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE2","\x17","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE3","\x18","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE4","\x19","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE5","\x1a","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE6","\x1b","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE7","\x1c","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE8","\x1d","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE9","\x1e","\x87","\x54","\xbf"),
	HX_HCSTRING("TEXTURE10","\x5a","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE11","\x5b","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE12","\x5c","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE13","\x5d","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE14","\x5e","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE15","\x5f","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE16","\x60","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE17","\x61","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE18","\x62","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE19","\x63","\xac","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE20","\x39","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE21","\x3a","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE22","\x3b","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE23","\x3c","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE24","\x3d","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE25","\x3e","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE26","\x3f","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE27","\x40","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE28","\x41","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE29","\x42","\xad","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE30","\x18","\xae","\xa1","\xaa"),
	HX_HCSTRING("TEXTURE31","\x19","\xae","\xa1","\xaa"),
	HX_HCSTRING("ACTIVE_TEXTURE","\x02","\x1a","\x22","\xce"),
	HX_HCSTRING("REPEAT","\x5b","\x43","\xff","\xb8"),
	HX_HCSTRING("CLAMP_TO_EDGE","\x1d","\xfc","\x5a","\x96"),
	HX_HCSTRING("MIRRORED_REPEAT","\x5c","\x94","\x80","\x4a"),
	HX_HCSTRING("FLOAT_VEC2","\x61","\xac","\xa4","\xeb"),
	HX_HCSTRING("FLOAT_VEC3","\x62","\xac","\xa4","\xeb"),
	HX_HCSTRING("FLOAT_VEC4","\x63","\xac","\xa4","\xeb"),
	HX_HCSTRING("INT_VEC2","\x2e","\x14","\x05","\x7d"),
	HX_HCSTRING("INT_VEC3","\x2f","\x14","\x05","\x7d"),
	HX_HCSTRING("INT_VEC4","\x30","\x14","\x05","\x7d"),
	HX_HCSTRING("BOOL","\x2a","\x4c","\xdc","\x2b"),
	HX_HCSTRING("BOOL_VEC2","\xf3","\x66","\x2b","\x2d"),
	HX_HCSTRING("BOOL_VEC3","\xf4","\x66","\x2b","\x2d"),
	HX_HCSTRING("BOOL_VEC4","\xf5","\x66","\x2b","\x2d"),
	HX_HCSTRING("FLOAT_MAT2","\x95","\xc6","\xae","\xe5"),
	HX_HCSTRING("FLOAT_MAT3","\x96","\xc6","\xae","\xe5"),
	HX_HCSTRING("FLOAT_MAT4","\x97","\xc6","\xae","\xe5"),
	HX_HCSTRING("SAMPLER_2D","\x09","\x2a","\x93","\x6e"),
	HX_HCSTRING("SAMPLER_CUBE","\xec","\x3e","\x82","\xa4"),
	HX_HCSTRING("VERTEX_ATTRIB_ARRAY_ENABLED","\x61","\x99","\x09","\x66"),
	HX_HCSTRING("VERTEX_ATTRIB_ARRAY_SIZE","\xc1","\x07","\xfd","\x08"),
	HX_HCSTRING("VERTEX_ATTRIB_ARRAY_STRIDE","\x19","\x2b","\x41","\x58"),
	HX_HCSTRING("VERTEX_ATTRIB_ARRAY_TYPE","\xba","\x59","\xb2","\x09"),
	HX_HCSTRING("VERTEX_ATTRIB_ARRAY_NORMALIZED","\x37","\xb7","\x22","\x78"),
	HX_HCSTRING("VERTEX_ATTRIB_ARRAY_POINTER","\x9d","\x55","\xfa","\x38"),
	HX_HCSTRING("VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","\xa6","\x80","\x67","\x97"),
	HX_HCSTRING("VERTEX_PROGRAM_POINT_SIZE","\xe6","\x56","\xbe","\x34"),
	HX_HCSTRING("POINT_SPRITE","\x74","\x93","\x5c","\x14"),
	HX_HCSTRING("COMPILE_STATUS","\xde","\xcb","\x4e","\x8c"),
	HX_HCSTRING("LOW_FLOAT","\x31","\x04","\x74","\xe4"),
	HX_HCSTRING("MEDIUM_FLOAT","\xf2","\x8a","\x46","\xb9"),
	HX_HCSTRING("HIGH_FLOAT","\x9f","\xf9","\x3b","\x47"),
	HX_HCSTRING("LOW_INT","\x44","\x28","\x70","\x45"),
	HX_HCSTRING("MEDIUM_INT","\xc5","\xcc","\xaf","\x4f"),
	HX_HCSTRING("HIGH_INT","\x32","\x46","\x02","\x09"),
	HX_HCSTRING("FRAMEBUFFER","\xcd","\x20","\x84","\x50"),
	HX_HCSTRING("RENDERBUFFER","\xd6","\xa4","\xa4","\xa9"),
	HX_HCSTRING("RGBA4","\x00","\x05","\xfc","\x65"),
	HX_HCSTRING("RGB5_A1","\x47","\x8f","\xf9","\xd8"),
	HX_HCSTRING("RGB565","\xe7","\x41","\x7f","\xd6"),
	HX_HCSTRING("DEPTH_COMPONENT16","\x26","\xcc","\x68","\x43"),
	HX_HCSTRING("STENCIL_INDEX","\x0f","\x79","\xb6","\x97"),
	HX_HCSTRING("STENCIL_INDEX8","\x49","\x74","\xf3","\x27"),
	HX_HCSTRING("DEPTH_STENCIL","\x40","\x2f","\x20","\x2b"),
	HX_HCSTRING("RENDERBUFFER_WIDTH","\x7d","\x1e","\xe1","\x43"),
	HX_HCSTRING("RENDERBUFFER_HEIGHT","\x70","\x07","\x69","\xd7"),
	HX_HCSTRING("RENDERBUFFER_INTERNAL_FORMAT","\x90","\xda","\xeb","\xb5"),
	HX_HCSTRING("RENDERBUFFER_RED_SIZE","\x98","\xa5","\x58","\x5e"),
	HX_HCSTRING("RENDERBUFFER_GREEN_SIZE","\x26","\x9b","\x7d","\x3b"),
	HX_HCSTRING("RENDERBUFFER_BLUE_SIZE","\xdd","\x93","\x86","\xdd"),
	HX_HCSTRING("RENDERBUFFER_ALPHA_SIZE","\xab","\xf0","\x5d","\x87"),
	HX_HCSTRING("RENDERBUFFER_DEPTH_SIZE","\xe6","\x90","\x24","\xc3"),
	HX_HCSTRING("RENDERBUFFER_STENCIL_SIZE","\x8d","\xd5","\x5a","\x9d"),
	HX_HCSTRING("FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","\x50","\x22","\x44","\x50"),
	HX_HCSTRING("FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","\xe1","\xa1","\x3a","\x4c"),
	HX_HCSTRING("FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","\xf6","\x9b","\xba","\x81"),
	HX_HCSTRING("FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","\xdc","\x4c","\x39","\x8a"),
	HX_HCSTRING("COLOR_ATTACHMENT0","\xb1","\x9a","\xfe","\x86"),
	HX_HCSTRING("DEPTH_ATTACHMENT","\xff","\x54","\xcd","\xe9"),
	HX_HCSTRING("STENCIL_ATTACHMENT","\xa6","\x8c","\x28","\x01"),
	HX_HCSTRING("DEPTH_STENCIL_ATTACHMENT","\xc2","\xe1","\xe1","\x9f"),
	HX_HCSTRING("NONE","\xb8","\xda","\xca","\x33"),
	HX_HCSTRING("FRAMEBUFFER_COMPLETE","\xab","\x65","\x7d","\xea"),
	HX_HCSTRING("FRAMEBUFFER_INCOMPLETE_ATTACHMENT","\xf2","\xcf","\xb7","\x1d"),
	HX_HCSTRING("FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","\x8b","\x0a","\xcd","\x77"),
	HX_HCSTRING("FRAMEBUFFER_INCOMPLETE_DIMENSIONS","\x5c","\x86","\xe4","\x1c"),
	HX_HCSTRING("FRAMEBUFFER_UNSUPPORTED","\xe3","\xa6","\x4e","\xc8"),
	HX_HCSTRING("FRAMEBUFFER_BINDING","\x73","\xee","\xae","\xc5"),
	HX_HCSTRING("RENDERBUFFER_BINDING","\x7c","\x23","\x70","\x23"),
	HX_HCSTRING("MAX_RENDERBUFFER_SIZE","\x4f","\xd4","\x3d","\x65"),
	HX_HCSTRING("INVALID_FRAMEBUFFER_OPERATION","\x2d","\xd4","\xc5","\x43"),
	HX_HCSTRING("UNPACK_FLIP_Y_WEBGL","\x0e","\x9f","\x94","\x9d"),
	HX_HCSTRING("UNPACK_PREMULTIPLY_ALPHA_WEBGL","\x73","\x5d","\xcb","\xc6"),
	HX_HCSTRING("CONTEXT_LOST_WEBGL","\x6e","\x67","\x71","\x45"),
	HX_HCSTRING("UNPACK_COLORSPACE_CONVERSION_WEBGL","\x9f","\xd9","\xf0","\xb9"),
	HX_HCSTRING("BROWSER_DEFAULT_WEBGL","\x04","\x04","\x92","\xc0"),
	HX_HCSTRING("version","\x18","\xe7","\xf1","\x7c"),
	HX_HCSTRING("__currentProgram","\x6b","\x4a","\xcd","\x35"),
	HX_HCSTRING("activeTexture","\xb5","\x13","\xaa","\x56"),
	HX_HCSTRING("attachShader","\xca","\xd0","\x77","\xb2"),
	HX_HCSTRING("bindAttribLocation","\x3c","\xa6","\x30","\x1e"),
	HX_HCSTRING("bindBuffer","\x9d","\x92","\xbe","\xf8"),
	HX_HCSTRING("bindFramebuffer","\x30","\xc6","\x61","\xe7"),
	HX_HCSTRING("bindRenderbuffer","\x33","\xb6","\xb7","\x14"),
	HX_HCSTRING("bindTexture","\x9e","\xdc","\x51","\x9b"),
	HX_HCSTRING("blendColor","\x52","\x33","\xb4","\xe2"),
	HX_HCSTRING("blendEquation","\xfd","\x98","\xad","\x02"),
	HX_HCSTRING("blendEquationSeparate","\x80","\x39","\x68","\xa7"),
	HX_HCSTRING("blendFunc","\x35","\xfc","\x9b","\x07"),
	HX_HCSTRING("blendFuncSeparate","\xb8","\x94","\xc0","\xca"),
	HX_HCSTRING("bufferData","\x4a","\xbf","\x73","\x93"),
	HX_HCSTRING("bufferSubData","\xaa","\xf6","\xe4","\x45"),
	HX_HCSTRING("checkFramebufferStatus","\x17","\x26","\x75","\x0a"),
	HX_HCSTRING("clear","\x8d","\x71","\x5b","\x48"),
	HX_HCSTRING("clearColor","\x96","\xb0","\x66","\x1f"),
	HX_HCSTRING("clearDepth","\x36","\x30","\x34","\xac"),
	HX_HCSTRING("clearStencil","\xef","\x6f","\x82","\x5b"),
	HX_HCSTRING("colorMask","\xef","\xcb","\xc3","\x23"),
	HX_HCSTRING("compileShader","\xf8","\x70","\xb2","\xda"),
	HX_HCSTRING("compressedTexImage2D","\xa7","\xd8","\x5d","\x24"),
	HX_HCSTRING("compressedTexSubImage2D","\xd3","\xb5","\x7d","\x36"),
	HX_HCSTRING("copyTexImage2D","\xdb","\xd0","\x76","\xe4"),
	HX_HCSTRING("copyTexSubImage2D","\x1f","\xd6","\xae","\xa4"),
	HX_HCSTRING("createBuffer","\x1c","\xfd","\xe9","\xf2"),
	HX_HCSTRING("createFramebuffer","\x51","\xef","\xe8","\xcc"),
	HX_HCSTRING("createProgram","\xe8","\x22","\x3c","\xdc"),
	HX_HCSTRING("createRenderbuffer","\xf2","\x89","\x74","\x05"),
	HX_HCSTRING("createShader","\x41","\xff","\x75","\x3f"),
	HX_HCSTRING("createTexture","\x3f","\xa1","\x23","\x87"),
	HX_HCSTRING("cullFace","\x6f","\xe7","\x31","\xac"),
	HX_HCSTRING("deleteBuffer","\x8b","\xe3","\x2c","\x37"),
	HX_HCSTRING("deleteFramebuffer","\x82","\x56","\x01","\x50"),
	HX_HCSTRING("deleteProgram","\x99","\xdd","\x82","\x52"),
	HX_HCSTRING("deleteRenderbuffer","\xa1","\x6d","\xb6","\x37"),
	HX_HCSTRING("deleteShader","\xb0","\xe5","\xb8","\x83"),
	HX_HCSTRING("deleteTexture","\xf0","\x5b","\x6a","\xfd"),
	HX_HCSTRING("depthFunc","\xe7","\x45","\x48","\x9a"),
	HX_HCSTRING("depthMask","\x8f","\x9b","\xd9","\x9e"),
	HX_HCSTRING("depthRange","\xba","\x99","\x8b","\x40"),
	HX_HCSTRING("detachShader","\xd8","\xd0","\xad","\xea"),
	HX_HCSTRING("disable","\xe8","\x69","\x58","\xb1"),
	HX_HCSTRING("disableVertexAttribArray","\xe3","\x69","\x74","\x4a"),
	HX_HCSTRING("drawArrays","\xde","\xf3","\xb3","\xf9"),
	HX_HCSTRING("drawElements","\x5b","\xc2","\xb7","\x59"),
	HX_HCSTRING("enable","\x83","\xae","\x87","\xf8"),
	HX_HCSTRING("enableVertexAttribArray","\xe8","\x46","\x5a","\xac"),
	HX_HCSTRING("finish","\x53","\x40","\x7f","\x86"),
	HX_HCSTRING("flush","\xc4","\x62","\x9b","\x02"),
	HX_HCSTRING("framebufferRenderbuffer","\x63","\xdd","\xb2","\x36"),
	HX_HCSTRING("framebufferTexture2D","\xc0","\x66","\x22","\x24"),
	HX_HCSTRING("frontFace","\xe6","\x01","\xc1","\x80"),
	HX_HCSTRING("generateMipmap","\x9d","\xd6","\x0d","\x5b"),
	HX_HCSTRING("getActiveAttrib","\x66","\x8b","\x22","\x63"),
	HX_HCSTRING("getActiveUniform","\x98","\x35","\x4e","\xd7"),
	HX_HCSTRING("getAttachedShaders","\xb4","\x2e","\x77","\x93"),
	HX_HCSTRING("getAttribLocation","\xd5","\x1a","\x10","\x5d"),
	HX_HCSTRING("getBufferParameter","\x93","\x58","\xb4","\x14"),
	HX_HCSTRING("getContextAttributes","\x30","\xda","\xe1","\xad"),
	HX_HCSTRING("getError","\x52","\xdb","\x00","\xd3"),
	HX_HCSTRING("getExtension","\x09","\x30","\x67","\xf4"),
	HX_HCSTRING("getFramebufferAttachmentParameter","\x8f","\xbf","\x8d","\xff"),
	HX_HCSTRING("getParameter","\x33","\xd2","\x06","\x58"),
	HX_HCSTRING("getProgramInfoLog","\xc8","\xf1","\xf2","\xcd"),
	HX_HCSTRING("getProgramParameter","\x3b","\xc3","\x9c","\x96"),
	HX_HCSTRING("getRenderbufferParameter","\x7d","\xc1","\xd7","\x3c"),
	HX_HCSTRING("getShaderInfoLog","\x9b","\xbd","\xc8","\xf3"),
	HX_HCSTRING("getShaderParameter","\xce","\x69","\x5b","\x36"),
	HX_HCSTRING("getShaderPrecisionFormat","\xfa","\xb8","\xcf","\xce"),
	HX_HCSTRING("getShaderSource","\x96","\xa3","\x04","\xc5"),
	HX_HCSTRING("getSupportedExtensions","\xec","\x78","\x6d","\xa1"),
	HX_HCSTRING("getTexParameter","\x78","\x98","\xd3","\xd2"),
	HX_HCSTRING("getUniform","\x3e","\xc7","\xc5","\x04"),
	HX_HCSTRING("getUniformLocation","\x93","\x5f","\xd4","\x4f"),
	HX_HCSTRING("getVertexAttrib","\x84","\x2f","\x1c","\xa3"),
	HX_HCSTRING("getVertexAttribOffset","\x37","\xb6","\xce","\x56"),
	HX_HCSTRING("hint","\x87","\x3d","\x0e","\x45"),
	HX_HCSTRING("isBuffer","\x8a","\x58","\xfe","\x28"),
	HX_HCSTRING("isContextLost","\xa9","\xdf","\xdf","\x2d"),
	HX_HCSTRING("isEnabled","\xb7","\x81","\x2f","\x82"),
	HX_HCSTRING("isFramebuffer","\x23","\x65","\x6c","\x83"),
	HX_HCSTRING("isProgram","\xba","\xc7","\xf7","\xf7"),
	HX_HCSTRING("isRenderbuffer","\xe0","\x2b","\xf8","\x01"),
	HX_HCSTRING("isShader","\xaf","\x5a","\x8a","\x75"),
	HX_HCSTRING("isTexture","\x11","\x46","\xdf","\xa2"),
	HX_HCSTRING("lineWidth","\x72","\xb9","\x5d","\x11"),
	HX_HCSTRING("linkProgram","\xaa","\xad","\x7b","\x89"),
	HX_HCSTRING("pixelStorei","\x8e","\x34","\xc8","\x80"),
	HX_HCSTRING("polygonOffset","\xad","\x25","\x4d","\x66"),
	HX_HCSTRING("readPixels","\x23","\xd3","\x25","\x86"),
	HX_HCSTRING("renderbufferStorage","\x05","\xa1","\x70","\x87"),
	HX_HCSTRING("sampleCoverage","\x32","\x68","\x81","\x3b"),
	HX_HCSTRING("scissor","\x1c","\x28","\xe7","\x04"),
	HX_HCSTRING("shaderSource","\xe0","\x4d","\x1a","\xa2"),
	HX_HCSTRING("stencilFunc","\x60","\x83","\xbe","\x40"),
	HX_HCSTRING("stencilFuncSeparate","\xe3","\xbe","\xce","\xb2"),
	HX_HCSTRING("stencilMask","\x08","\xd9","\x4f","\x45"),
	HX_HCSTRING("stencilMaskSeparate","\x8b","\xfc","\xa9","\xc6"),
	HX_HCSTRING("stencilOp","\x3d","\x7a","\xec","\x56"),
	HX_HCSTRING("stencilOpSeparate","\xc0","\x5a","\x4a","\x53"),
	HX_HCSTRING("texImage2D","\xc6","\x7c","\x67","\xb9"),
	HX_HCSTRING("texParameterf","\x64","\x27","\x31","\x3c"),
	HX_HCSTRING("texParameteri","\x67","\x27","\x31","\x3c"),
	HX_HCSTRING("texSubImage2D","\x14","\x2f","\x90","\x28"),
	HX_HCSTRING("uniform1f","\x49","\x21","\xde","\x07"),
	HX_HCSTRING("uniform1fv","\x0d","\xff","\x7e","\xda"),
	HX_HCSTRING("uniform1i","\x4c","\x21","\xde","\x07"),
	HX_HCSTRING("uniform1iv","\xaa","\x01","\x7f","\xda"),
	HX_HCSTRING("uniform2f","\x28","\x22","\xde","\x07"),
	HX_HCSTRING("uniform2fv","\x4e","\xc1","\x7f","\xda"),
	HX_HCSTRING("uniform2i","\x2b","\x22","\xde","\x07"),
	HX_HCSTRING("uniform2iv","\xeb","\xc3","\x7f","\xda"),
	HX_HCSTRING("uniform3f","\x07","\x23","\xde","\x07"),
	HX_HCSTRING("uniform3fv","\x8f","\x83","\x80","\xda"),
	HX_HCSTRING("uniform3i","\x0a","\x23","\xde","\x07"),
	HX_HCSTRING("uniform3iv","\x2c","\x86","\x80","\xda"),
	HX_HCSTRING("uniform4f","\xe6","\x23","\xde","\x07"),
	HX_HCSTRING("uniform4fv","\xd0","\x45","\x81","\xda"),
	HX_HCSTRING("uniform4i","\xe9","\x23","\xde","\x07"),
	HX_HCSTRING("uniform4iv","\x6d","\x48","\x81","\xda"),
	HX_HCSTRING("uniformMatrix2fv","\x8d","\x8a","\x59","\xc5"),
	HX_HCSTRING("uniformMatrix3fv","\xce","\x4c","\x5a","\xc5"),
	HX_HCSTRING("uniformMatrix4fv","\x0f","\x0f","\x5b","\xc5"),
	HX_HCSTRING("useProgram","\xfd","\x6c","\xac","\xf6"),
	HX_HCSTRING("validateProgram","\x8e","\x80","\x0f","\xef"),
	HX_HCSTRING("vertexAttrib1f","\x63","\x94","\xb6","\x53"),
	HX_HCSTRING("vertexAttrib1fv","\xb3","\x42","\x0b","\xec"),
	HX_HCSTRING("vertexAttrib2f","\x42","\x95","\xb6","\x53"),
	HX_HCSTRING("vertexAttrib2fv","\xf4","\x04","\x0c","\xec"),
	HX_HCSTRING("vertexAttrib3f","\x21","\x96","\xb6","\x53"),
	HX_HCSTRING("vertexAttrib3fv","\x35","\xc7","\x0c","\xec"),
	HX_HCSTRING("vertexAttrib4f","\x00","\x97","\xb6","\x53"),
	HX_HCSTRING("vertexAttrib4fv","\x76","\x89","\x0d","\xec"),
	HX_HCSTRING("vertexAttribPointer","\x8f","\x04","\xb6","\x3f"),
	HX_HCSTRING("viewport","\x66","\x4c","\xa5","\x9c"),
	HX_HCSTRING("get_version","\x2f","\x47","\xec","\x02"),
	HX_HCSTRING("lime_gl_active_texture","\x52","\xdf","\x77","\xb3"),
	HX_HCSTRING("lime_gl_attach_shader","\x6f","\x78","\x09","\x06"),
	HX_HCSTRING("lime_gl_bind_attrib_location","\x78","\xd0","\x23","\x1a"),
	HX_HCSTRING("lime_gl_bind_buffer","\x52","\x57","\xd9","\xe2"),
	HX_HCSTRING("lime_gl_bind_framebuffer","\x5b","\xd1","\x58","\x70"),
	HX_HCSTRING("lime_gl_bind_renderbuffer","\xa8","\x70","\xea","\x63"),
	HX_HCSTRING("lime_gl_bind_texture","\x49","\x36","\xa3","\x88"),
	HX_HCSTRING("lime_gl_blend_color","\x85","\xd0","\xce","\x3a"),
	HX_HCSTRING("lime_gl_blend_equation","\xaa","\xfd","\x08","\x1f"),
	HX_HCSTRING("lime_gl_blend_equation_separate","\xd8","\x13","\x95","\x58"),
	HX_HCSTRING("lime_gl_blend_func","\x62","\x46","\x02","\xe9"),
	HX_HCSTRING("lime_gl_blend_func_separate","\x20","\xf4","\xb8","\x2e"),
	HX_HCSTRING("lime_gl_buffer_data","\xd9","\x31","\x40","\x74"),
	HX_HCSTRING("lime_gl_buffer_sub_data","\xb8","\x37","\x6c","\xab"),
	HX_HCSTRING("lime_gl_check_framebuffer_status","\x0b","\x35","\xe1","\xea"),
	HX_HCSTRING("lime_gl_clear","\x5d","\x92","\x00","\x3b"),
	HX_HCSTRING("lime_gl_clear_color","\xc1","\xee","\x49","\x1a"),
	HX_HCSTRING("lime_gl_clear_depth","\x61","\x6e","\x17","\xa7"),
	HX_HCSTRING("lime_gl_clear_stencil","\xda","\xce","\x51","\x44"),
	HX_HCSTRING("lime_gl_color_mask","\xb8","\xf1","\xa7","\x79"),
	HX_HCSTRING("lime_gl_compile_shader","\xe1","\xd4","\x68","\x7c"),
	HX_HCSTRING("lime_gl_compressed_tex_image_2d","\xbc","\x70","\xb8","\x76"),
	HX_HCSTRING("lime_gl_compressed_tex_sub_image_2d","\x9b","\x19","\x2d","\x07"),
	HX_HCSTRING("lime_gl_copy_tex_image_2d","\x08","\x15","\x17","\x3a"),
	HX_HCSTRING("lime_gl_copy_tex_sub_image_2d","\xe7","\xd3","\x21","\x4b"),
	HX_HCSTRING("lime_gl_create_buffer","\xf3","\xef","\xe7","\x8a"),
	HX_HCSTRING("lime_gl_create_framebuffer","\x1a","\x51","\xd8","\x73"),
	HX_HCSTRING("lime_gl_create_program","\x31","\xac","\x72","\x42"),
	HX_HCSTRING("lime_gl_create_render_buffer","\x76","\x7b","\xe1","\x18"),
	HX_HCSTRING("lime_gl_create_shader","\x18","\xf2","\x73","\xd7"),
	HX_HCSTRING("lime_gl_create_texture","\x88","\x2a","\x5a","\xed"),
	HX_HCSTRING("lime_gl_cull_face","\x5a","\x6e","\xd7","\xa6"),
	HX_HCSTRING("lime_gl_delete_buffer","\xa4","\xaa","\x2e","\x01"),
	HX_HCSTRING("lime_gl_delete_framebuffer","\xc9","\x34","\x1a","\xa6"),
	HX_HCSTRING("lime_gl_delete_program","\x60","\x4c","\x0f","\x4a"),
	HX_HCSTRING("lime_gl_delete_render_buffer","\xe5","\xe8","\x26","\xca"),
	HX_HCSTRING("lime_gl_delete_shader","\xc9","\xac","\xba","\x4d"),
	HX_HCSTRING("lime_gl_delete_texture","\xb7","\xca","\xf6","\xf4"),
	HX_HCSTRING("lime_gl_depth_func","\x70","\x78","\x16","\xad"),
	HX_HCSTRING("lime_gl_depth_mask","\x18","\xce","\xa7","\xb1"),
	HX_HCSTRING("lime_gl_depth_range","\x11","\x9f","\x29","\xa2"),
	HX_HCSTRING("lime_gl_detach_shader","\xa1","\x84","\x13","\xfd"),
	HX_HCSTRING("lime_gl_disable","\xb8","\x5e","\x23","\x70"),
	HX_HCSTRING("lime_gl_disable_vertex_attrib_array","\x58","\xba","\x8e","\x0a"),
	HX_HCSTRING("lime_gl_draw_arrays","\xa5","\x43","\x0c","\x17"),
	HX_HCSTRING("lime_gl_draw_elements","\xe2","\xd1","\x98","\xb9"),
	HX_HCSTRING("lime_gl_enable","\xb3","\x43","\x5f","\x56"),
	HX_HCSTRING("lime_gl_enable_vertex_attrib_array","\xd3","\x1e","\xa2","\xea"),
	HX_HCSTRING("lime_gl_finish","\x83","\xd5","\x56","\xe4"),
	HX_HCSTRING("lime_gl_flush","\x94","\x83","\x40","\xf5"),
	HX_HCSTRING("lime_gl_framebuffer_renderbuffer","\xd8","\x1b","\x4b","\x9a"),
	HX_HCSTRING("lime_gl_framebuffer_texture2D","\x2b","\xbd","\x7d","\x0a"),
	HX_HCSTRING("lime_gl_front_face","\x63","\xa0","\x73","\x7d"),
	HX_HCSTRING("lime_gl_generate_mipmap","\x62","\xa5","\x38","\xe6"),
	HX_HCSTRING("lime_gl_get_active_attrib","\x0a","\x40","\xb7","\xd1"),
	HX_HCSTRING("lime_gl_get_active_uniform","\x74","\x90","\xd7","\x2a"),
	HX_HCSTRING("lime_gl_get_attrib_location","\xf1","\x00","\xcb","\xa5"),
	HX_HCSTRING("lime_gl_get_buffer_parameter","\xa3","\x5c","\xc0","\x74"),
	HX_HCSTRING("lime_gl_get_context_attributes","\xe0","\xc6","\xc6","\x3e"),
	HX_HCSTRING("lime_gl_get_error","\xef","\xf0","\xe0","\xf5"),
	HX_HCSTRING("lime_gl_get_extension","\x26","\xd8","\x5e","\xd7"),
	HX_HCSTRING("lime_gl_get_framebuffer_attachment_parameter","\x18","\x53","\xfb","\x61"),
	HX_HCSTRING("lime_gl_get_parameter","\x50","\x7a","\xfe","\x3a"),
	HX_HCSTRING("lime_gl_get_program_info_log","\x87","\x8b","\x1c","\x48"),
	HX_HCSTRING("lime_gl_get_program_parameter","\x95","\x8c","\xe9","\x12"),
	HX_HCSTRING("lime_gl_get_render_buffer_parameter","\x9a","\x8b","\x13","\xf8"),
	HX_HCSTRING("lime_gl_get_shader_info_log","\x74","\x08","\x6b","\x9a"),
	HX_HCSTRING("lime_gl_get_shader_parameter","\x08","\x5f","\x48","\xc5"),
	HX_HCSTRING("lime_gl_get_shader_precision_format","\xd9","\x5f","\xb1","\x89"),
	HX_HCSTRING("lime_gl_get_shader_source","\x1c","\x86","\xa3","\xe7"),
	HX_HCSTRING("lime_gl_get_supported_extensions","\x7e","\xb4","\x30","\x92"),
	HX_HCSTRING("lime_gl_get_tex_parameter","\x38","\x3a","\xff","\x30"),
	HX_HCSTRING("lime_gl_get_uniform","\x1b","\x3e","\x0c","\xb0"),
	HX_HCSTRING("lime_gl_get_uniform_location","\x19","\x0c","\x33","\x6c"),
	HX_HCSTRING("lime_gl_get_vertex_attrib","\x2c","\x36","\x2d","\x8c"),
	HX_HCSTRING("lime_gl_get_vertex_attrib_offset","\x86","\xd0","\xe7","\x4a"),
	HX_HCSTRING("lime_gl_hint","\xb7","\x26","\x75","\xcc"),
	HX_HCSTRING("lime_gl_is_buffer","\xc5","\xec","\xc6","\xb4"),
	HX_HCSTRING("lime_gl_is_enabled","\x1c","\xa1","\xe8","\x45"),
	HX_HCSTRING("lime_gl_is_framebuffer","\x08","\x9b","\x19","\xab"),
	HX_HCSTRING("lime_gl_is_program","\x1f","\xe7","\xb0","\xbb"),
	HX_HCSTRING("lime_gl_is_renderbuffer","\x5b","\x1e","\xda","\x91"),
	HX_HCSTRING("lime_gl_is_shader","\xea","\xee","\x52","\x01"),
	HX_HCSTRING("lime_gl_is_texture","\x76","\x65","\x98","\x66"),
	HX_HCSTRING("lime_gl_line_width","\x6b","\x71","\x5f","\x53"),
	HX_HCSTRING("lime_gl_link_program","\x2f","\xdf","\xcf","\x33"),
	HX_HCSTRING("lime_gl_pixel_storei","\x71","\xb2","\x56","\x3d"),
	HX_HCSTRING("lime_gl_polygon_offset","\x28","\x8f","\x6c","\xe3"),
	HX_HCSTRING("lime_gl_read_pixels","\x06","\x09","\x69","\xf5"),
	HX_HCSTRING("lime_gl_renderbuffer_storage","\xc2","\x94","\xf1","\x7b"),
	HX_HCSTRING("lime_gl_sample_coverage","\xad","\x98","\xc5","\x86"),
	HX_HCSTRING("lime_gl_scissor","\xec","\x1c","\xb2","\xc3"),
	HX_HCSTRING("lime_gl_shader_source","\xc5","\xd2","\xe2","\x7f"),
	HX_HCSTRING("lime_gl_stencil_func","\xd7","\xb0","\x4f","\x64"),
	HX_HCSTRING("lime_gl_stencil_func_separate","\x0b","\x13","\x77","\x19"),
	HX_HCSTRING("lime_gl_stencil_mask","\x7f","\x06","\xe1","\x68"),
	HX_HCSTRING("lime_gl_stencil_mask_separate","\x63","\xc8","\x71","\x65"),
	HX_HCSTRING("lime_gl_stencil_op","\xf4","\x8b","\x0c","\xa5"),
	HX_HCSTRING("lime_gl_stencil_op_separate","\x4e","\x6c","\x36","\x5e"),
	HX_HCSTRING("lime_gl_tex_image_2d","\x5e","\xab","\x7a","\x34"),
	HX_HCSTRING("lime_gl_tex_parameterf","\x65","\x7e","\x77","\x4d"),
	HX_HCSTRING("lime_gl_tex_parameteri","\x68","\x7e","\x77","\x4d"),
	HX_HCSTRING("lime_gl_tex_sub_image_2d","\x3d","\x4d","\x7e","\x52"),
	HX_HCSTRING("lime_gl_uniform1f","\x19","\xea","\xeb","\x46"),
	HX_HCSTRING("lime_gl_uniform1fv","\x3d","\xec","\x80","\xc7"),
	HX_HCSTRING("lime_gl_uniform1i","\x1c","\xea","\xeb","\x46"),
	HX_HCSTRING("lime_gl_uniform1iv","\xda","\xee","\x80","\xc7"),
	HX_HCSTRING("lime_gl_uniform2f","\xf8","\xea","\xeb","\x46"),
	HX_HCSTRING("lime_gl_uniform2fv","\x7e","\xae","\x81","\xc7"),
	HX_HCSTRING("lime_gl_uniform2i","\xfb","\xea","\xeb","\x46"),
	HX_HCSTRING("lime_gl_uniform2iv","\x1b","\xb1","\x81","\xc7"),
	HX_HCSTRING("lime_gl_uniform3f","\xd7","\xeb","\xeb","\x46"),
	HX_HCSTRING("lime_gl_uniform3fv","\xbf","\x70","\x82","\xc7"),
	HX_HCSTRING("lime_gl_uniform3i","\xda","\xeb","\xeb","\x46"),
	HX_HCSTRING("lime_gl_uniform3iv","\x5c","\x73","\x82","\xc7"),
	HX_HCSTRING("lime_gl_uniform4f","\xb6","\xec","\xeb","\x46"),
	HX_HCSTRING("lime_gl_uniform4fv","\x00","\x33","\x83","\xc7"),
	HX_HCSTRING("lime_gl_uniform4i","\xb9","\xec","\xeb","\x46"),
	HX_HCSTRING("lime_gl_uniform4iv","\x9d","\x35","\x83","\xc7"),
	HX_HCSTRING("lime_gl_uniform_matrix","\x5c","\x9a","\xcc","\xb2"),
	HX_HCSTRING("lime_gl_use_program","\x1c","\x8c","\xb8","\x22"),
	HX_HCSTRING("lime_gl_validate_program","\xcb","\xeb","\x10","\x5b"),
	HX_HCSTRING("lime_gl_version","\xe8","\xdb","\xbc","\x3b"),
	HX_HCSTRING("lime_gl_vertex_attrib1f","\x2a","\xcd","\xb2","\x7a"),
	HX_HCSTRING("lime_gl_vertex_attrib1fv","\x0c","\xb8","\xc0","\xe1"),
	HX_HCSTRING("lime_gl_vertex_attrib2f","\x09","\xce","\xb2","\x7a"),
	HX_HCSTRING("lime_gl_vertex_attrib2fv","\x4d","\x7a","\xc1","\xe1"),
	HX_HCSTRING("lime_gl_vertex_attrib3f","\xe8","\xce","\xb2","\x7a"),
	HX_HCSTRING("lime_gl_vertex_attrib3fv","\x8e","\x3c","\xc2","\xe1"),
	HX_HCSTRING("lime_gl_vertex_attrib4f","\xc7","\xcf","\xb2","\x7a"),
	HX_HCSTRING("lime_gl_vertex_attrib4fv","\xcf","\xfe","\xc2","\xe1"),
	HX_HCSTRING("lime_gl_vertex_attrib_pointer","\x13","\xfa","\x74","\x15"),
	HX_HCSTRING("lime_gl_viewport","\x96","\x8d","\x70","\xcf"),
	HX_HCSTRING("cffi_lime_gl_active_texture","\x0b","\x95","\x07","\x16"),
	HX_HCSTRING("cffi_lime_gl_attach_shader","\xd6","\x9c","\x99","\xc1"),
	HX_HCSTRING("cffi_lime_gl_bind_attrib_location","\xf1","\x16","\xec","\x0b"),
	HX_HCSTRING("cffi_lime_gl_bind_buffer","\xf9","\xc3","\x77","\x28"),
	HX_HCSTRING("cffi_lime_gl_bind_framebuffer","\x54","\x27","\x8c","\x5e"),
	HX_HCSTRING("cffi_lime_gl_bind_renderbuffer","\x8f","\x54","\xa2","\xe2"),
	HX_HCSTRING("cffi_lime_gl_bind_texture","\xc2","\xdb","\xa3","\x2d"),
	HX_HCSTRING("cffi_lime_gl_blend_color","\x2c","\x3d","\x6d","\x80"),
	HX_HCSTRING("cffi_lime_gl_blend_equation","\x63","\xb3","\x98","\x81"),
	HX_HCSTRING("cffi_lime_gl_blend_equation_separate","\xff","\x5e","\xb7","\x48"),
	HX_HCSTRING("cffi_lime_gl_blend_func","\x9b","\x6b","\x44","\x5d"),
	HX_HCSTRING("cffi_lime_gl_blend_func_separate","\xc7","\xdf","\x1e","\xb6"),
	HX_HCSTRING("cffi_lime_gl_buffer_data","\x80","\x9e","\xde","\xb9"),
	HX_HCSTRING("cffi_lime_gl_buffer_sub_data","\xdf","\x83","\x9b","\x86"),
	HX_HCSTRING("cffi_lime_gl_check_framebuffer_status","\x04","\xac","\xc0","\x18"),
	HX_HCSTRING("cffi_lime_gl_clear","\xc4","\x77","\x82","\x3b"),
	HX_HCSTRING("cffi_lime_gl_clear_color","\x68","\x5b","\xe8","\x5f"),
	HX_HCSTRING("cffi_lime_gl_clear_depth","\x08","\xdb","\xb5","\xec"),
	HX_HCSTRING("cffi_lime_gl_clear_stencil","\x41","\xf3","\xe1","\xff"),
	HX_HCSTRING("cffi_lime_gl_color_mask","\xf1","\x16","\xea","\xed"),
	HX_HCSTRING("cffi_lime_gl_compile_shader","\x9a","\x8a","\xf8","\xde"),
	HX_HCSTRING("cffi_lime_gl_compressed_tex_image_2d","\xe3","\xbb","\xda","\x66"),
	HX_HCSTRING("cffi_lime_gl_compressed_tex_sub_image_2d","\x42","\x84","\x71","\x32"),
	HX_HCSTRING("cffi_lime_gl_copy_tex_image_2d","\xef","\xf8","\xce","\xb8"),
	HX_HCSTRING("cffi_lime_gl_copy_tex_sub_image_2d","\x4e","\x37","\x97","\xe8"),
	HX_HCSTRING("cffi_lime_gl_create_buffer","\x5a","\x14","\x78","\x46"),
	HX_HCSTRING("cffi_lime_gl_create_framebuffer","\x53","\xd7","\x07","\xd6"),
	HX_HCSTRING("cffi_lime_gl_create_program","\xea","\x61","\x02","\xa5"),
	HX_HCSTRING("cffi_lime_gl_create_render_buffer","\xef","\xc1","\xa9","\x0a"),
	HX_HCSTRING("cffi_lime_gl_create_shader","\x7f","\x16","\x04","\x93"),
	HX_HCSTRING("cffi_lime_gl_create_texture","\x41","\xe0","\xe9","\x4f"),
	HX_HCSTRING("cffi_lime_gl_cull_face","\x41","\x93","\xf5","\x8c"),
	HX_HCSTRING("cffi_lime_gl_delete_buffer","\x0b","\xcf","\xbe","\xbc"),
	HX_HCSTRING("cffi_lime_gl_delete_framebuffer","\x02","\xbb","\x49","\x08"),
	HX_HCSTRING("cffi_lime_gl_delete_program","\x19","\x02","\x9f","\xac"),
	HX_HCSTRING("cffi_lime_gl_delete_render_buffer","\x5e","\x2f","\xef","\xbb"),
	HX_HCSTRING("cffi_lime_gl_delete_shader","\x30","\xd1","\x4a","\x09"),
	HX_HCSTRING("cffi_lime_gl_delete_texture","\x70","\x80","\x86","\x57"),
	HX_HCSTRING("cffi_lime_gl_depth_func","\xa9","\x9d","\x58","\x21"),
	HX_HCSTRING("cffi_lime_gl_depth_mask","\x51","\xf3","\xe9","\x25"),
	HX_HCSTRING("cffi_lime_gl_depth_range","\xb8","\x0b","\xc8","\xe7"),
	HX_HCSTRING("cffi_lime_gl_detach_shader","\x08","\xa9","\xa3","\xb8"),
	HX_HCSTRING("cffi_lime_gl_disable","\xdf","\xab","\xf6","\x00"),
	HX_HCSTRING("cffi_lime_gl_disable_vertex_attrib_array","\xff","\x24","\xd3","\x35"),
	HX_HCSTRING("cffi_lime_gl_draw_arrays","\x4c","\xb0","\xaa","\x5c"),
	HX_HCSTRING("cffi_lime_gl_draw_elements","\x49","\xf6","\x28","\x75"),
	HX_HCSTRING("cffi_lime_gl_enable","\x6c","\x18","\x86","\xc7"),
	HX_HCSTRING("cffi_lime_gl_enable_vertex_attrib_array","\x0c","\x06","\x88","\xe8"),
	HX_HCSTRING("cffi_lime_gl_finish","\x3c","\xaa","\x7d","\x55"),
	HX_HCSTRING("cffi_lime_gl_flush","\xfb","\x68","\xc2","\xf5"),
	HX_HCSTRING("cffi_lime_gl_framebuffer_renderbuffer","\xd1","\x92","\x2a","\xc8"),
	HX_HCSTRING("cffi_lime_gl_framebuffer_texture2D","\x92","\x20","\xf3","\xa7"),
	HX_HCSTRING("cffi_lime_gl_front_face","\x9c","\xc5","\xb5","\xf1"),
	HX_HCSTRING("cffi_lime_gl_generate_mipmap","\x89","\xf1","\x67","\xc1"),
	HX_HCSTRING("cffi_lime_gl_get_active_attrib","\xf1","\x23","\x6f","\x50"),
	HX_HCSTRING("cffi_lime_gl_get_active_uniform","\xad","\x16","\x07","\x8d"),
	HX_HCSTRING("cffi_lime_gl_get_attrib_location","\x98","\xec","\x30","\x2d"),
	HX_HCSTRING("cffi_lime_gl_get_buffer_parameter","\x1c","\xa3","\x88","\x66"),
	HX_HCSTRING("cffi_lime_gl_get_context_attributes","\x99","\x5d","\x08","\x68"),
	HX_HCSTRING("cffi_lime_gl_get_error","\xd6","\x15","\xff","\xdb"),
	HX_HCSTRING("cffi_lime_gl_get_extension","\x8d","\xfc","\xee","\x92"),
	HX_HCSTRING("cffi_lime_gl_get_framebuffer_attachment_parameter","\x91","\xdb","\x6d","\xf4"),
	HX_HCSTRING("cffi_lime_gl_get_parameter","\xb7","\x9e","\x8e","\xf6"),
	HX_HCSTRING("cffi_lime_gl_get_program_info_log","\x00","\xd2","\xe4","\x39"),
	HX_HCSTRING("cffi_lime_gl_get_program_parameter","\xfc","\xef","\x5e","\xb0"),
	HX_HCSTRING("cffi_lime_gl_get_render_buffer_parameter","\x41","\xf6","\x57","\x23"),
	HX_HCSTRING("cffi_lime_gl_get_shader_info_log","\x1b","\xf4","\xd0","\x21"),
	HX_HCSTRING("cffi_lime_gl_get_shader_parameter","\x81","\xa5","\x10","\xb7"),
	HX_HCSTRING("cffi_lime_gl_get_shader_precision_format","\x80","\xca","\xf5","\xb4"),
	HX_HCSTRING("cffi_lime_gl_get_shader_source","\x03","\x6a","\x5b","\x66"),
	HX_HCSTRING("cffi_lime_gl_get_supported_extensions","\x77","\x2b","\x10","\xc0"),
	HX_HCSTRING("cffi_lime_gl_get_tex_parameter","\x1f","\x1e","\xb7","\xaf"),
	HX_HCSTRING("cffi_lime_gl_get_uniform","\xc2","\xaa","\xaa","\xf5"),
	HX_HCSTRING("cffi_lime_gl_get_uniform_location","\x92","\x52","\xfb","\x5d"),
	HX_HCSTRING("cffi_lime_gl_get_vertex_attrib","\x13","\x1a","\xe5","\x0a"),
	HX_HCSTRING("cffi_lime_gl_get_vertex_attrib_offset","\x7f","\x47","\xc7","\x78"),
	HX_HCSTRING("cffi_lime_gl_hint","\x30","\x2b","\xb7","\xe5"),
	HX_HCSTRING("cffi_lime_gl_is_buffer","\xac","\x11","\xe5","\x9a"),
	HX_HCSTRING("cffi_lime_gl_is_enabled","\x55","\xc6","\x2a","\xba"),
	HX_HCSTRING("cffi_lime_gl_is_framebuffer","\xc1","\x50","\xa9","\x0d"),
	HX_HCSTRING("cffi_lime_gl_is_program","\x58","\x0c","\xf3","\x2f"),
	HX_HCSTRING("cffi_lime_gl_is_renderbuffer","\x82","\x6a","\x09","\x6d"),
	HX_HCSTRING("cffi_lime_gl_is_shader","\xd1","\x13","\x71","\xe7"),
	HX_HCSTRING("cffi_lime_gl_is_texture","\xaf","\x8a","\xda","\xda"),
	HX_HCSTRING("cffi_lime_gl_line_width","\xa4","\x96","\xa1","\xc7"),
	HX_HCSTRING("cffi_lime_gl_link_program","\xa8","\x84","\xd0","\xd8"),
	HX_HCSTRING("cffi_lime_gl_pixel_storei","\xea","\x57","\x57","\xe2"),
	HX_HCSTRING("cffi_lime_gl_polygon_offset","\xe1","\x44","\xfc","\x45"),
	HX_HCSTRING("cffi_lime_gl_read_pixels","\xad","\x75","\x07","\x3b"),
	HX_HCSTRING("cffi_lime_gl_renderbuffer_storage","\x3b","\xdb","\xb9","\x6d"),
	HX_HCSTRING("cffi_lime_gl_sample_coverage","\xd4","\xe4","\xf4","\x61"),
	HX_HCSTRING("cffi_lime_gl_scissor","\x13","\x6a","\x85","\x54"),
	HX_HCSTRING("cffi_lime_gl_shader_source","\x2c","\xf7","\x72","\x3b"),
	HX_HCSTRING("cffi_lime_gl_stencil_func","\x50","\x56","\x50","\x09"),
	HX_HCSTRING("cffi_lime_gl_stencil_func_separate","\x72","\x76","\xec","\xb6"),
	HX_HCSTRING("cffi_lime_gl_stencil_mask","\xf8","\xab","\xe1","\x0d"),
	HX_HCSTRING("cffi_lime_gl_stencil_mask_separate","\xca","\x2b","\xe7","\x02"),
	HX_HCSTRING("cffi_lime_gl_stencil_op","\x2d","\xb1","\x4e","\x19"),
	HX_HCSTRING("cffi_lime_gl_stencil_op_separate","\xf5","\x57","\x9c","\xe5"),
	HX_HCSTRING("cffi_lime_gl_tex_image_2d","\xd7","\x50","\x7b","\xd9"),
	HX_HCSTRING("cffi_lime_gl_tex_parameterf","\x1e","\x34","\x07","\xb0"),
	HX_HCSTRING("cffi_lime_gl_tex_parameteri","\x21","\x34","\x07","\xb0"),
	HX_HCSTRING("cffi_lime_gl_tex_sub_image_2d","\x36","\xa3","\xb1","\x40"),
	HX_HCSTRING("cffi_lime_gl_uniform1f","\x00","\x0f","\x0a","\x2d"),
	HX_HCSTRING("cffi_lime_gl_uniform1fv","\x76","\x11","\xc3","\x3b"),
	HX_HCSTRING("cffi_lime_gl_uniform1i","\x03","\x0f","\x0a","\x2d"),
	HX_HCSTRING("cffi_lime_gl_uniform1iv","\x13","\x14","\xc3","\x3b"),
	HX_HCSTRING("cffi_lime_gl_uniform2f","\xdf","\x0f","\x0a","\x2d"),
	HX_HCSTRING("cffi_lime_gl_uniform2fv","\xb7","\xd3","\xc3","\x3b"),
	HX_HCSTRING("cffi_lime_gl_uniform2i","\xe2","\x0f","\x0a","\x2d"),
	HX_HCSTRING("cffi_lime_gl_uniform2iv","\x54","\xd6","\xc3","\x3b"),
	HX_HCSTRING("cffi_lime_gl_uniform3f","\xbe","\x10","\x0a","\x2d"),
	HX_HCSTRING("cffi_lime_gl_uniform3fv","\xf8","\x95","\xc4","\x3b"),
	HX_HCSTRING("cffi_lime_gl_uniform3i","\xc1","\x10","\x0a","\x2d"),
	HX_HCSTRING("cffi_lime_gl_uniform3iv","\x95","\x98","\xc4","\x3b"),
	HX_HCSTRING("cffi_lime_gl_uniform4f","\x9d","\x11","\x0a","\x2d"),
	HX_HCSTRING("cffi_lime_gl_uniform4fv","\x39","\x58","\xc5","\x3b"),
	HX_HCSTRING("cffi_lime_gl_uniform4i","\xa0","\x11","\x0a","\x2d"),
	HX_HCSTRING("cffi_lime_gl_uniform4iv","\xd6","\x5a","\xc5","\x3b"),
	HX_HCSTRING("cffi_lime_gl_uniform_matrix","\x15","\x50","\x5c","\x15"),
	HX_HCSTRING("cffi_lime_gl_use_program","\xc3","\xf8","\x56","\x68"),
	HX_HCSTRING("cffi_lime_gl_validate_program","\xc4","\x41","\x44","\x49"),
	HX_HCSTRING("cffi_lime_gl_version","\x0f","\x29","\x90","\xcc"),
	HX_HCSTRING("cffi_lime_gl_vertex_attrib1f","\x51","\x19","\xe2","\x55"),
	HX_HCSTRING("cffi_lime_gl_vertex_attrib1fv","\x05","\x0e","\xf4","\xcf"),
	HX_HCSTRING("cffi_lime_gl_vertex_attrib2f","\x30","\x1a","\xe2","\x55"),
	HX_HCSTRING("cffi_lime_gl_vertex_attrib2fv","\x46","\xd0","\xf4","\xcf"),
	HX_HCSTRING("cffi_lime_gl_vertex_attrib3f","\x0f","\x1b","\xe2","\x55"),
	HX_HCSTRING("cffi_lime_gl_vertex_attrib3fv","\x87","\x92","\xf5","\xcf"),
	HX_HCSTRING("cffi_lime_gl_vertex_attrib4f","\xee","\x1b","\xe2","\x55"),
	HX_HCSTRING("cffi_lime_gl_vertex_attrib4fv","\xc8","\x54","\xf6","\xcf"),
	HX_HCSTRING("cffi_lime_gl_vertex_attrib_pointer","\x7a","\x5d","\xea","\xb2"),
	HX_HCSTRING("cffi_lime_gl_viewport","\x8f","\xc2","\x80","\xf7"),
	::String(null())
};

void GL_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("lime.graphics.opengl.GL","\x1a","\xed","\x24","\xf2");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &GL_obj::__GetStatic;
	__mClass->mSetStaticField = &GL_obj::__SetStatic;
	__mClass->mMarkFunc = GL_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(GL_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< GL_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = GL_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = GL_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = GL_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void GL_obj::__boot()
{
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",39,0xa5aa2623)
HXLINE(  39)		DEPTH_BUFFER_BIT = (int)256;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",40,0xa5aa2623)
HXLINE(  40)		STENCIL_BUFFER_BIT = (int)1024;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",41,0xa5aa2623)
HXLINE(  41)		COLOR_BUFFER_BIT = (int)16384;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",43,0xa5aa2623)
HXLINE(  43)		POINTS = (int)0;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",44,0xa5aa2623)
HXLINE(  44)		LINES = (int)1;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",45,0xa5aa2623)
HXLINE(  45)		LINE_LOOP = (int)2;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",46,0xa5aa2623)
HXLINE(  46)		LINE_STRIP = (int)3;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",47,0xa5aa2623)
HXLINE(  47)		TRIANGLES = (int)4;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",48,0xa5aa2623)
HXLINE(  48)		TRIANGLE_STRIP = (int)5;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",49,0xa5aa2623)
HXLINE(  49)		TRIANGLE_FAN = (int)6;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",51,0xa5aa2623)
HXLINE(  51)		ZERO = (int)0;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",52,0xa5aa2623)
HXLINE(  52)		ONE = (int)1;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",53,0xa5aa2623)
HXLINE(  53)		SRC_COLOR = (int)768;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",54,0xa5aa2623)
HXLINE(  54)		ONE_MINUS_SRC_COLOR = (int)769;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",55,0xa5aa2623)
HXLINE(  55)		SRC_ALPHA = (int)770;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",56,0xa5aa2623)
HXLINE(  56)		ONE_MINUS_SRC_ALPHA = (int)771;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",57,0xa5aa2623)
HXLINE(  57)		DST_ALPHA = (int)772;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",58,0xa5aa2623)
HXLINE(  58)		ONE_MINUS_DST_ALPHA = (int)773;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",60,0xa5aa2623)
HXLINE(  60)		DST_COLOR = (int)774;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",61,0xa5aa2623)
HXLINE(  61)		ONE_MINUS_DST_COLOR = (int)775;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",62,0xa5aa2623)
HXLINE(  62)		SRC_ALPHA_SATURATE = (int)776;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",64,0xa5aa2623)
HXLINE(  64)		FUNC_ADD = (int)32774;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",65,0xa5aa2623)
HXLINE(  65)		BLEND_EQUATION = (int)32777;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",66,0xa5aa2623)
HXLINE(  66)		BLEND_EQUATION_RGB = (int)32777;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",67,0xa5aa2623)
HXLINE(  67)		BLEND_EQUATION_ALPHA = (int)34877;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",69,0xa5aa2623)
HXLINE(  69)		FUNC_SUBTRACT = (int)32778;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",70,0xa5aa2623)
HXLINE(  70)		FUNC_REVERSE_SUBTRACT = (int)32779;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",72,0xa5aa2623)
HXLINE(  72)		BLEND_DST_RGB = (int)32968;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",73,0xa5aa2623)
HXLINE(  73)		BLEND_SRC_RGB = (int)32969;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",74,0xa5aa2623)
HXLINE(  74)		BLEND_DST_ALPHA = (int)32970;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",75,0xa5aa2623)
HXLINE(  75)		BLEND_SRC_ALPHA = (int)32971;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",76,0xa5aa2623)
HXLINE(  76)		CONSTANT_COLOR = (int)32769;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",77,0xa5aa2623)
HXLINE(  77)		ONE_MINUS_CONSTANT_COLOR = (int)32770;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",78,0xa5aa2623)
HXLINE(  78)		CONSTANT_ALPHA = (int)32771;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",79,0xa5aa2623)
HXLINE(  79)		ONE_MINUS_CONSTANT_ALPHA = (int)32772;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",80,0xa5aa2623)
HXLINE(  80)		BLEND_COLOR = (int)32773;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",82,0xa5aa2623)
HXLINE(  82)		ARRAY_BUFFER = (int)34962;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",83,0xa5aa2623)
HXLINE(  83)		ELEMENT_ARRAY_BUFFER = (int)34963;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",84,0xa5aa2623)
HXLINE(  84)		ARRAY_BUFFER_BINDING = (int)34964;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",85,0xa5aa2623)
HXLINE(  85)		ELEMENT_ARRAY_BUFFER_BINDING = (int)34965;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",87,0xa5aa2623)
HXLINE(  87)		STREAM_DRAW = (int)35040;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",88,0xa5aa2623)
HXLINE(  88)		STATIC_DRAW = (int)35044;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",89,0xa5aa2623)
HXLINE(  89)		DYNAMIC_DRAW = (int)35048;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",91,0xa5aa2623)
HXLINE(  91)		BUFFER_SIZE = (int)34660;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",92,0xa5aa2623)
HXLINE(  92)		BUFFER_USAGE = (int)34661;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",94,0xa5aa2623)
HXLINE(  94)		CURRENT_VERTEX_ATTRIB = (int)34342;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",96,0xa5aa2623)
HXLINE(  96)		FRONT = (int)1028;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",97,0xa5aa2623)
HXLINE(  97)		BACK = (int)1029;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",98,0xa5aa2623)
HXLINE(  98)		FRONT_AND_BACK = (int)1032;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",100,0xa5aa2623)
HXLINE( 100)		CULL_FACE = (int)2884;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",101,0xa5aa2623)
HXLINE( 101)		BLEND = (int)3042;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",102,0xa5aa2623)
HXLINE( 102)		DITHER = (int)3024;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",103,0xa5aa2623)
HXLINE( 103)		STENCIL_TEST = (int)2960;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",104,0xa5aa2623)
HXLINE( 104)		DEPTH_TEST = (int)2929;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",105,0xa5aa2623)
HXLINE( 105)		SCISSOR_TEST = (int)3089;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",106,0xa5aa2623)
HXLINE( 106)		POLYGON_OFFSET_FILL = (int)32823;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",107,0xa5aa2623)
HXLINE( 107)		SAMPLE_ALPHA_TO_COVERAGE = (int)32926;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",108,0xa5aa2623)
HXLINE( 108)		SAMPLE_COVERAGE = (int)32928;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",110,0xa5aa2623)
HXLINE( 110)		NO_ERROR = (int)0;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",111,0xa5aa2623)
HXLINE( 111)		INVALID_ENUM = (int)1280;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",112,0xa5aa2623)
HXLINE( 112)		INVALID_VALUE = (int)1281;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",113,0xa5aa2623)
HXLINE( 113)		INVALID_OPERATION = (int)1282;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",114,0xa5aa2623)
HXLINE( 114)		OUT_OF_MEMORY = (int)1285;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",116,0xa5aa2623)
HXLINE( 116)		CW = (int)2304;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",117,0xa5aa2623)
HXLINE( 117)		CCW = (int)2305;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",119,0xa5aa2623)
HXLINE( 119)		LINE_WIDTH = (int)2849;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",120,0xa5aa2623)
HXLINE( 120)		ALIASED_POINT_SIZE_RANGE = (int)33901;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",121,0xa5aa2623)
HXLINE( 121)		ALIASED_LINE_WIDTH_RANGE = (int)33902;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",122,0xa5aa2623)
HXLINE( 122)		CULL_FACE_MODE = (int)2885;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",123,0xa5aa2623)
HXLINE( 123)		FRONT_FACE = (int)2886;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",124,0xa5aa2623)
HXLINE( 124)		DEPTH_RANGE = (int)2928;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",125,0xa5aa2623)
HXLINE( 125)		DEPTH_WRITEMASK = (int)2930;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",126,0xa5aa2623)
HXLINE( 126)		DEPTH_CLEAR_VALUE = (int)2931;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",127,0xa5aa2623)
HXLINE( 127)		DEPTH_FUNC = (int)2932;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",128,0xa5aa2623)
HXLINE( 128)		STENCIL_CLEAR_VALUE = (int)2961;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",129,0xa5aa2623)
HXLINE( 129)		STENCIL_FUNC = (int)2962;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",130,0xa5aa2623)
HXLINE( 130)		STENCIL_FAIL = (int)2964;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",131,0xa5aa2623)
HXLINE( 131)		STENCIL_PASS_DEPTH_FAIL = (int)2965;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",132,0xa5aa2623)
HXLINE( 132)		STENCIL_PASS_DEPTH_PASS = (int)2966;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",133,0xa5aa2623)
HXLINE( 133)		STENCIL_REF = (int)2967;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",134,0xa5aa2623)
HXLINE( 134)		STENCIL_VALUE_MASK = (int)2963;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",135,0xa5aa2623)
HXLINE( 135)		STENCIL_WRITEMASK = (int)2968;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",136,0xa5aa2623)
HXLINE( 136)		STENCIL_BACK_FUNC = (int)34816;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",137,0xa5aa2623)
HXLINE( 137)		STENCIL_BACK_FAIL = (int)34817;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",138,0xa5aa2623)
HXLINE( 138)		STENCIL_BACK_PASS_DEPTH_FAIL = (int)34818;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",139,0xa5aa2623)
HXLINE( 139)		STENCIL_BACK_PASS_DEPTH_PASS = (int)34819;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",140,0xa5aa2623)
HXLINE( 140)		STENCIL_BACK_REF = (int)36003;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",141,0xa5aa2623)
HXLINE( 141)		STENCIL_BACK_VALUE_MASK = (int)36004;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",142,0xa5aa2623)
HXLINE( 142)		STENCIL_BACK_WRITEMASK = (int)36005;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",143,0xa5aa2623)
HXLINE( 143)		VIEWPORT = (int)2978;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",144,0xa5aa2623)
HXLINE( 144)		SCISSOR_BOX = (int)3088;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",146,0xa5aa2623)
HXLINE( 146)		COLOR_CLEAR_VALUE = (int)3106;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",147,0xa5aa2623)
HXLINE( 147)		COLOR_WRITEMASK = (int)3107;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",148,0xa5aa2623)
HXLINE( 148)		UNPACK_ALIGNMENT = (int)3317;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",149,0xa5aa2623)
HXLINE( 149)		PACK_ALIGNMENT = (int)3333;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",150,0xa5aa2623)
HXLINE( 150)		MAX_TEXTURE_SIZE = (int)3379;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",151,0xa5aa2623)
HXLINE( 151)		MAX_VIEWPORT_DIMS = (int)3386;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",152,0xa5aa2623)
HXLINE( 152)		SUBPIXEL_BITS = (int)3408;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",153,0xa5aa2623)
HXLINE( 153)		RED_BITS = (int)3410;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",154,0xa5aa2623)
HXLINE( 154)		GREEN_BITS = (int)3411;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",155,0xa5aa2623)
HXLINE( 155)		BLUE_BITS = (int)3412;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",156,0xa5aa2623)
HXLINE( 156)		ALPHA_BITS = (int)3413;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",157,0xa5aa2623)
HXLINE( 157)		DEPTH_BITS = (int)3414;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",158,0xa5aa2623)
HXLINE( 158)		STENCIL_BITS = (int)3415;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",159,0xa5aa2623)
HXLINE( 159)		POLYGON_OFFSET_UNITS = (int)10752;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",161,0xa5aa2623)
HXLINE( 161)		POLYGON_OFFSET_FACTOR = (int)32824;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",162,0xa5aa2623)
HXLINE( 162)		TEXTURE_BINDING_2D = (int)32873;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",163,0xa5aa2623)
HXLINE( 163)		SAMPLE_BUFFERS = (int)32936;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",164,0xa5aa2623)
HXLINE( 164)		SAMPLES = (int)32937;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",165,0xa5aa2623)
HXLINE( 165)		SAMPLE_COVERAGE_VALUE = (int)32938;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",166,0xa5aa2623)
HXLINE( 166)		SAMPLE_COVERAGE_INVERT = (int)32939;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",168,0xa5aa2623)
HXLINE( 168)		COMPRESSED_TEXTURE_FORMATS = (int)34467;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",170,0xa5aa2623)
HXLINE( 170)		DONT_CARE = (int)4352;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",171,0xa5aa2623)
HXLINE( 171)		FASTEST = (int)4353;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",172,0xa5aa2623)
HXLINE( 172)		NICEST = (int)4354;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",174,0xa5aa2623)
HXLINE( 174)		GENERATE_MIPMAP_HINT = (int)33170;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",176,0xa5aa2623)
HXLINE( 176)		BYTE = (int)5120;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",177,0xa5aa2623)
HXLINE( 177)		UNSIGNED_BYTE = (int)5121;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",178,0xa5aa2623)
HXLINE( 178)		SHORT = (int)5122;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",179,0xa5aa2623)
HXLINE( 179)		UNSIGNED_SHORT = (int)5123;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",180,0xa5aa2623)
HXLINE( 180)		INT = (int)5124;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",181,0xa5aa2623)
HXLINE( 181)		UNSIGNED_INT = (int)5125;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",182,0xa5aa2623)
HXLINE( 182)		FLOAT = (int)5126;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",184,0xa5aa2623)
HXLINE( 184)		DEPTH_COMPONENT = (int)6402;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",185,0xa5aa2623)
HXLINE( 185)		ALPHA = (int)6406;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",186,0xa5aa2623)
HXLINE( 186)		RGB = (int)6407;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",187,0xa5aa2623)
HXLINE( 187)		RGBA = (int)6408;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",188,0xa5aa2623)
HXLINE( 188)		BGR_EXT = (int)32992;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",189,0xa5aa2623)
HXLINE( 189)		BGRA_EXT = (int)32993;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",190,0xa5aa2623)
HXLINE( 190)		LUMINANCE = (int)6409;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",191,0xa5aa2623)
HXLINE( 191)		LUMINANCE_ALPHA = (int)6410;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",193,0xa5aa2623)
HXLINE( 193)		UNSIGNED_SHORT_4_4_4_4 = (int)32819;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",194,0xa5aa2623)
HXLINE( 194)		UNSIGNED_SHORT_5_5_5_1 = (int)32820;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",195,0xa5aa2623)
HXLINE( 195)		UNSIGNED_SHORT_5_6_5 = (int)33635;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",197,0xa5aa2623)
HXLINE( 197)		FRAGMENT_SHADER = (int)35632;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",198,0xa5aa2623)
HXLINE( 198)		VERTEX_SHADER = (int)35633;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",199,0xa5aa2623)
HXLINE( 199)		MAX_VERTEX_ATTRIBS = (int)34921;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",200,0xa5aa2623)
HXLINE( 200)		MAX_VERTEX_UNIFORM_VECTORS = (int)36347;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",201,0xa5aa2623)
HXLINE( 201)		MAX_VARYING_VECTORS = (int)36348;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",202,0xa5aa2623)
HXLINE( 202)		MAX_COMBINED_TEXTURE_IMAGE_UNITS = (int)35661;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",203,0xa5aa2623)
HXLINE( 203)		MAX_VERTEX_TEXTURE_IMAGE_UNITS = (int)35660;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",204,0xa5aa2623)
HXLINE( 204)		MAX_TEXTURE_IMAGE_UNITS = (int)34930;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",205,0xa5aa2623)
HXLINE( 205)		MAX_FRAGMENT_UNIFORM_VECTORS = (int)36349;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",206,0xa5aa2623)
HXLINE( 206)		SHADER_TYPE = (int)35663;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",207,0xa5aa2623)
HXLINE( 207)		DELETE_STATUS = (int)35712;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",208,0xa5aa2623)
HXLINE( 208)		LINK_STATUS = (int)35714;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",209,0xa5aa2623)
HXLINE( 209)		VALIDATE_STATUS = (int)35715;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",210,0xa5aa2623)
HXLINE( 210)		ATTACHED_SHADERS = (int)35717;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",211,0xa5aa2623)
HXLINE( 211)		ACTIVE_UNIFORMS = (int)35718;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",212,0xa5aa2623)
HXLINE( 212)		ACTIVE_ATTRIBUTES = (int)35721;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",213,0xa5aa2623)
HXLINE( 213)		SHADING_LANGUAGE_VERSION = (int)35724;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",214,0xa5aa2623)
HXLINE( 214)		CURRENT_PROGRAM = (int)35725;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",216,0xa5aa2623)
HXLINE( 216)		NEVER = (int)512;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",217,0xa5aa2623)
HXLINE( 217)		LESS = (int)513;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",218,0xa5aa2623)
HXLINE( 218)		EQUAL = (int)514;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",219,0xa5aa2623)
HXLINE( 219)		LEQUAL = (int)515;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",220,0xa5aa2623)
HXLINE( 220)		GREATER = (int)516;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",221,0xa5aa2623)
HXLINE( 221)		NOTEQUAL = (int)517;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",222,0xa5aa2623)
HXLINE( 222)		GEQUAL = (int)518;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",223,0xa5aa2623)
HXLINE( 223)		ALWAYS = (int)519;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",225,0xa5aa2623)
HXLINE( 225)		KEEP = (int)7680;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",226,0xa5aa2623)
HXLINE( 226)		REPLACE = (int)7681;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",227,0xa5aa2623)
HXLINE( 227)		INCR = (int)7682;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",228,0xa5aa2623)
HXLINE( 228)		DECR = (int)7683;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",229,0xa5aa2623)
HXLINE( 229)		INVERT = (int)5386;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",230,0xa5aa2623)
HXLINE( 230)		INCR_WRAP = (int)34055;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",231,0xa5aa2623)
HXLINE( 231)		DECR_WRAP = (int)34056;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",233,0xa5aa2623)
HXLINE( 233)		VENDOR = (int)7936;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",234,0xa5aa2623)
HXLINE( 234)		RENDERER = (int)7937;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",235,0xa5aa2623)
HXLINE( 235)		VERSION = (int)7938;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",237,0xa5aa2623)
HXLINE( 237)		NEAREST = (int)9728;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",238,0xa5aa2623)
HXLINE( 238)		LINEAR = (int)9729;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",240,0xa5aa2623)
HXLINE( 240)		NEAREST_MIPMAP_NEAREST = (int)9984;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",241,0xa5aa2623)
HXLINE( 241)		LINEAR_MIPMAP_NEAREST = (int)9985;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",242,0xa5aa2623)
HXLINE( 242)		NEAREST_MIPMAP_LINEAR = (int)9986;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",243,0xa5aa2623)
HXLINE( 243)		LINEAR_MIPMAP_LINEAR = (int)9987;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",245,0xa5aa2623)
HXLINE( 245)		TEXTURE_MAG_FILTER = (int)10240;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",246,0xa5aa2623)
HXLINE( 246)		TEXTURE_MIN_FILTER = (int)10241;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",247,0xa5aa2623)
HXLINE( 247)		TEXTURE_WRAP_S = (int)10242;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",248,0xa5aa2623)
HXLINE( 248)		TEXTURE_WRAP_T = (int)10243;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",250,0xa5aa2623)
HXLINE( 250)		TEXTURE_2D = (int)3553;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",251,0xa5aa2623)
HXLINE( 251)		TEXTURE = (int)5890;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",253,0xa5aa2623)
HXLINE( 253)		TEXTURE_CUBE_MAP = (int)34067;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",254,0xa5aa2623)
HXLINE( 254)		TEXTURE_BINDING_CUBE_MAP = (int)34068;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",255,0xa5aa2623)
HXLINE( 255)		TEXTURE_CUBE_MAP_POSITIVE_X = (int)34069;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",256,0xa5aa2623)
HXLINE( 256)		TEXTURE_CUBE_MAP_NEGATIVE_X = (int)34070;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",257,0xa5aa2623)
HXLINE( 257)		TEXTURE_CUBE_MAP_POSITIVE_Y = (int)34071;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",258,0xa5aa2623)
HXLINE( 258)		TEXTURE_CUBE_MAP_NEGATIVE_Y = (int)34072;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",259,0xa5aa2623)
HXLINE( 259)		TEXTURE_CUBE_MAP_POSITIVE_Z = (int)34073;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",260,0xa5aa2623)
HXLINE( 260)		TEXTURE_CUBE_MAP_NEGATIVE_Z = (int)34074;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",261,0xa5aa2623)
HXLINE( 261)		MAX_CUBE_MAP_TEXTURE_SIZE = (int)34076;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",263,0xa5aa2623)
HXLINE( 263)		TEXTURE0 = (int)33984;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",264,0xa5aa2623)
HXLINE( 264)		TEXTURE1 = (int)33985;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",265,0xa5aa2623)
HXLINE( 265)		TEXTURE2 = (int)33986;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",266,0xa5aa2623)
HXLINE( 266)		TEXTURE3 = (int)33987;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",267,0xa5aa2623)
HXLINE( 267)		TEXTURE4 = (int)33988;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",268,0xa5aa2623)
HXLINE( 268)		TEXTURE5 = (int)33989;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",269,0xa5aa2623)
HXLINE( 269)		TEXTURE6 = (int)33990;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",270,0xa5aa2623)
HXLINE( 270)		TEXTURE7 = (int)33991;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",271,0xa5aa2623)
HXLINE( 271)		TEXTURE8 = (int)33992;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",272,0xa5aa2623)
HXLINE( 272)		TEXTURE9 = (int)33993;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",273,0xa5aa2623)
HXLINE( 273)		TEXTURE10 = (int)33994;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",274,0xa5aa2623)
HXLINE( 274)		TEXTURE11 = (int)33995;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",275,0xa5aa2623)
HXLINE( 275)		TEXTURE12 = (int)33996;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",276,0xa5aa2623)
HXLINE( 276)		TEXTURE13 = (int)33997;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",277,0xa5aa2623)
HXLINE( 277)		TEXTURE14 = (int)33998;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",278,0xa5aa2623)
HXLINE( 278)		TEXTURE15 = (int)33999;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",279,0xa5aa2623)
HXLINE( 279)		TEXTURE16 = (int)34000;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",280,0xa5aa2623)
HXLINE( 280)		TEXTURE17 = (int)34001;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",281,0xa5aa2623)
HXLINE( 281)		TEXTURE18 = (int)34002;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",282,0xa5aa2623)
HXLINE( 282)		TEXTURE19 = (int)34003;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",283,0xa5aa2623)
HXLINE( 283)		TEXTURE20 = (int)34004;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",284,0xa5aa2623)
HXLINE( 284)		TEXTURE21 = (int)34005;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",285,0xa5aa2623)
HXLINE( 285)		TEXTURE22 = (int)34006;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",286,0xa5aa2623)
HXLINE( 286)		TEXTURE23 = (int)34007;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",287,0xa5aa2623)
HXLINE( 287)		TEXTURE24 = (int)34008;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",288,0xa5aa2623)
HXLINE( 288)		TEXTURE25 = (int)34009;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",289,0xa5aa2623)
HXLINE( 289)		TEXTURE26 = (int)34010;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",290,0xa5aa2623)
HXLINE( 290)		TEXTURE27 = (int)34011;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",291,0xa5aa2623)
HXLINE( 291)		TEXTURE28 = (int)34012;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",292,0xa5aa2623)
HXLINE( 292)		TEXTURE29 = (int)34013;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",293,0xa5aa2623)
HXLINE( 293)		TEXTURE30 = (int)34014;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",294,0xa5aa2623)
HXLINE( 294)		TEXTURE31 = (int)34015;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",295,0xa5aa2623)
HXLINE( 295)		ACTIVE_TEXTURE = (int)34016;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",297,0xa5aa2623)
HXLINE( 297)		REPEAT = (int)10497;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",298,0xa5aa2623)
HXLINE( 298)		CLAMP_TO_EDGE = (int)33071;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",299,0xa5aa2623)
HXLINE( 299)		MIRRORED_REPEAT = (int)33648;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",301,0xa5aa2623)
HXLINE( 301)		FLOAT_VEC2 = (int)35664;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",302,0xa5aa2623)
HXLINE( 302)		FLOAT_VEC3 = (int)35665;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",303,0xa5aa2623)
HXLINE( 303)		FLOAT_VEC4 = (int)35666;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",304,0xa5aa2623)
HXLINE( 304)		INT_VEC2 = (int)35667;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",305,0xa5aa2623)
HXLINE( 305)		INT_VEC3 = (int)35668;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",306,0xa5aa2623)
HXLINE( 306)		INT_VEC4 = (int)35669;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",307,0xa5aa2623)
HXLINE( 307)		BOOL = (int)35670;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",308,0xa5aa2623)
HXLINE( 308)		BOOL_VEC2 = (int)35671;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",309,0xa5aa2623)
HXLINE( 309)		BOOL_VEC3 = (int)35672;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",310,0xa5aa2623)
HXLINE( 310)		BOOL_VEC4 = (int)35673;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",311,0xa5aa2623)
HXLINE( 311)		FLOAT_MAT2 = (int)35674;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",312,0xa5aa2623)
HXLINE( 312)		FLOAT_MAT3 = (int)35675;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",313,0xa5aa2623)
HXLINE( 313)		FLOAT_MAT4 = (int)35676;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",314,0xa5aa2623)
HXLINE( 314)		SAMPLER_2D = (int)35678;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",315,0xa5aa2623)
HXLINE( 315)		SAMPLER_CUBE = (int)35680;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",317,0xa5aa2623)
HXLINE( 317)		VERTEX_ATTRIB_ARRAY_ENABLED = (int)34338;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",318,0xa5aa2623)
HXLINE( 318)		VERTEX_ATTRIB_ARRAY_SIZE = (int)34339;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",319,0xa5aa2623)
HXLINE( 319)		VERTEX_ATTRIB_ARRAY_STRIDE = (int)34340;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",320,0xa5aa2623)
HXLINE( 320)		VERTEX_ATTRIB_ARRAY_TYPE = (int)34341;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",321,0xa5aa2623)
HXLINE( 321)		VERTEX_ATTRIB_ARRAY_NORMALIZED = (int)34922;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",322,0xa5aa2623)
HXLINE( 322)		VERTEX_ATTRIB_ARRAY_POINTER = (int)34373;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",323,0xa5aa2623)
HXLINE( 323)		VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = (int)34975;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",325,0xa5aa2623)
HXLINE( 325)		VERTEX_PROGRAM_POINT_SIZE = (int)34370;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",326,0xa5aa2623)
HXLINE( 326)		POINT_SPRITE = (int)34913;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",328,0xa5aa2623)
HXLINE( 328)		COMPILE_STATUS = (int)35713;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",330,0xa5aa2623)
HXLINE( 330)		LOW_FLOAT = (int)36336;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",331,0xa5aa2623)
HXLINE( 331)		MEDIUM_FLOAT = (int)36337;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",332,0xa5aa2623)
HXLINE( 332)		HIGH_FLOAT = (int)36338;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",333,0xa5aa2623)
HXLINE( 333)		LOW_INT = (int)36339;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",334,0xa5aa2623)
HXLINE( 334)		MEDIUM_INT = (int)36340;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",335,0xa5aa2623)
HXLINE( 335)		HIGH_INT = (int)36341;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",337,0xa5aa2623)
HXLINE( 337)		FRAMEBUFFER = (int)36160;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",338,0xa5aa2623)
HXLINE( 338)		RENDERBUFFER = (int)36161;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",340,0xa5aa2623)
HXLINE( 340)		RGBA4 = (int)32854;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",341,0xa5aa2623)
HXLINE( 341)		RGB5_A1 = (int)32855;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",342,0xa5aa2623)
HXLINE( 342)		RGB565 = (int)36194;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",343,0xa5aa2623)
HXLINE( 343)		DEPTH_COMPONENT16 = (int)33189;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",344,0xa5aa2623)
HXLINE( 344)		STENCIL_INDEX = (int)6401;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",345,0xa5aa2623)
HXLINE( 345)		STENCIL_INDEX8 = (int)36168;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",346,0xa5aa2623)
HXLINE( 346)		DEPTH_STENCIL = (int)34041;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",348,0xa5aa2623)
HXLINE( 348)		RENDERBUFFER_WIDTH = (int)36162;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",349,0xa5aa2623)
HXLINE( 349)		RENDERBUFFER_HEIGHT = (int)36163;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",350,0xa5aa2623)
HXLINE( 350)		RENDERBUFFER_INTERNAL_FORMAT = (int)36164;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",351,0xa5aa2623)
HXLINE( 351)		RENDERBUFFER_RED_SIZE = (int)36176;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",352,0xa5aa2623)
HXLINE( 352)		RENDERBUFFER_GREEN_SIZE = (int)36177;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",353,0xa5aa2623)
HXLINE( 353)		RENDERBUFFER_BLUE_SIZE = (int)36178;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",354,0xa5aa2623)
HXLINE( 354)		RENDERBUFFER_ALPHA_SIZE = (int)36179;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",355,0xa5aa2623)
HXLINE( 355)		RENDERBUFFER_DEPTH_SIZE = (int)36180;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",356,0xa5aa2623)
HXLINE( 356)		RENDERBUFFER_STENCIL_SIZE = (int)36181;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",358,0xa5aa2623)
HXLINE( 358)		FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = (int)36048;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",359,0xa5aa2623)
HXLINE( 359)		FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = (int)36049;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",360,0xa5aa2623)
HXLINE( 360)		FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = (int)36050;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",361,0xa5aa2623)
HXLINE( 361)		FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = (int)36051;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",363,0xa5aa2623)
HXLINE( 363)		COLOR_ATTACHMENT0 = (int)36064;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",364,0xa5aa2623)
HXLINE( 364)		DEPTH_ATTACHMENT = (int)36096;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",365,0xa5aa2623)
HXLINE( 365)		STENCIL_ATTACHMENT = (int)36128;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",366,0xa5aa2623)
HXLINE( 366)		DEPTH_STENCIL_ATTACHMENT = (int)33306;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",368,0xa5aa2623)
HXLINE( 368)		NONE = (int)0;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",370,0xa5aa2623)
HXLINE( 370)		FRAMEBUFFER_COMPLETE = (int)36053;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",371,0xa5aa2623)
HXLINE( 371)		FRAMEBUFFER_INCOMPLETE_ATTACHMENT = (int)36054;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",372,0xa5aa2623)
HXLINE( 372)		FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = (int)36055;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",373,0xa5aa2623)
HXLINE( 373)		FRAMEBUFFER_INCOMPLETE_DIMENSIONS = (int)36057;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",374,0xa5aa2623)
HXLINE( 374)		FRAMEBUFFER_UNSUPPORTED = (int)36061;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",376,0xa5aa2623)
HXLINE( 376)		FRAMEBUFFER_BINDING = (int)36006;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",377,0xa5aa2623)
HXLINE( 377)		RENDERBUFFER_BINDING = (int)36007;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",378,0xa5aa2623)
HXLINE( 378)		MAX_RENDERBUFFER_SIZE = (int)34024;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",380,0xa5aa2623)
HXLINE( 380)		INVALID_FRAMEBUFFER_OPERATION = (int)1286;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",382,0xa5aa2623)
HXLINE( 382)		UNPACK_FLIP_Y_WEBGL = (int)37440;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",383,0xa5aa2623)
HXLINE( 383)		UNPACK_PREMULTIPLY_ALPHA_WEBGL = (int)37441;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",384,0xa5aa2623)
HXLINE( 384)		CONTEXT_LOST_WEBGL = (int)37442;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",385,0xa5aa2623)
HXLINE( 385)		UNPACK_COLORSPACE_CONVERSION_WEBGL = (int)37443;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",386,0xa5aa2623)
HXLINE( 386)		BROWSER_DEFAULT_WEBGL = (int)37444;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2221,0xa5aa2623)
HXLINE(2221)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_active_texture",52,df,77,b3),HX_("iv",ed,5b,00,00),false);
HXDLIN(2221)		cffi_lime_gl_active_texture = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2222,0xa5aa2623)
HXLINE(2222)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_attach_shader",6f,78,09,06),HX_("oov",56,9b,54,00),false);
HXDLIN(2222)		cffi_lime_gl_attach_shader = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2223,0xa5aa2623)
HXLINE(2223)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_bind_attrib_location",78,d0,23,1a),HX_("oisv",3d,c0,ae,49),false);
HXDLIN(2223)		cffi_lime_gl_bind_attrib_location = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2224,0xa5aa2623)
HXLINE(2224)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_bind_buffer",52,57,d9,e2),HX_("iov",d0,0d,50,00),false);
HXDLIN(2224)		cffi_lime_gl_bind_buffer = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2225,0xa5aa2623)
HXLINE(2225)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_bind_framebuffer",5b,d1,58,70),HX_("iov",d0,0d,50,00),false);
HXDLIN(2225)		cffi_lime_gl_bind_framebuffer = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2226,0xa5aa2623)
HXLINE(2226)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_bind_renderbuffer",a8,70,ea,63),HX_("iov",d0,0d,50,00),false);
HXDLIN(2226)		cffi_lime_gl_bind_renderbuffer = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2227,0xa5aa2623)
HXLINE(2227)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_bind_texture",49,36,a3,88),HX_("iov",d0,0d,50,00),false);
HXDLIN(2227)		cffi_lime_gl_bind_texture = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2228,0xa5aa2623)
HXLINE(2228)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_blend_color",85,d0,ce,3a),HX_("ffffv",f6,ad,98,fe),false);
HXDLIN(2228)		cffi_lime_gl_blend_color = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2229,0xa5aa2623)
HXLINE(2229)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_blend_equation",aa,fd,08,1f),HX_("iv",ed,5b,00,00),false);
HXDLIN(2229)		cffi_lime_gl_blend_equation = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2230,0xa5aa2623)
HXLINE(2230)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_blend_equation_separate",d8,13,95,58),HX_("iiv",96,08,50,00),false);
HXDLIN(2230)		cffi_lime_gl_blend_equation_separate = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2231,0xa5aa2623)
HXLINE(2231)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_blend_func",62,46,02,e9),HX_("iiv",96,08,50,00),false);
HXDLIN(2231)		cffi_lime_gl_blend_func = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2232,0xa5aa2623)
HXLINE(2232)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_blend_func_separate",20,f4,b8,2e),HX_("iiiiv",b6,58,ca,ba),false);
HXDLIN(2232)		cffi_lime_gl_blend_func_separate = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2233,0xa5aa2623)
HXLINE(2233)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_buffer_data",d9,31,40,74),HX_("ioiiiv",b3,b6,aa,2a),false);
HXDLIN(2233)		cffi_lime_gl_buffer_data = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2234,0xa5aa2623)
HXLINE(2234)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_buffer_sub_data",b8,37,6c,ab),HX_("iioiiv",67,83,3a,ba),false);
HXDLIN(2234)		cffi_lime_gl_buffer_sub_data = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2235,0xa5aa2623)
HXLINE(2235)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_check_framebuffer_status",0b,35,e1,ea),HX_("ii",e0,5b,00,00),false);
HXDLIN(2235)		cffi_lime_gl_check_framebuffer_status = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2236,0xa5aa2623)
HXLINE(2236)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_clear",5d,92,00,3b),HX_("iv",ed,5b,00,00),false);
HXDLIN(2236)		cffi_lime_gl_clear = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2237,0xa5aa2623)
HXLINE(2237)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_clear_color",c1,ee,49,1a),HX_("ffffv",f6,ad,98,fe),false);
HXDLIN(2237)		cffi_lime_gl_clear_color = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2238,0xa5aa2623)
HXLINE(2238)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_clear_depth",61,6e,17,a7),HX_("fv",50,59,00,00),false);
HXDLIN(2238)		cffi_lime_gl_clear_depth = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2239,0xa5aa2623)
HXLINE(2239)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_clear_stencil",da,ce,51,44),HX_("iv",ed,5b,00,00),false);
HXDLIN(2239)		cffi_lime_gl_clear_stencil = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2240,0xa5aa2623)
HXLINE(2240)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_color_mask",b8,f1,a7,79),HX_("bbbbv",f6,74,56,ae),false);
HXDLIN(2240)		cffi_lime_gl_color_mask = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2241,0xa5aa2623)
HXLINE(2241)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_compile_shader",e1,d4,68,7c),HX_("ov",27,61,00,00),false);
HXDLIN(2241)		cffi_lime_gl_compile_shader = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2242,0xa5aa2623)
HXLINE(2242)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_compressed_tex_image_2d",bc,70,b8,76),HX_("iiiiiioiv",7c,5e,4a,bf),false);
HXDLIN(2242)		cffi_lime_gl_compressed_tex_image_2d = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2243,0xa5aa2623)
HXLINE(2243)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_compressed_tex_sub_image_2d",9b,19,2d,07),HX_("iiiiiiioiv",f3,88,d5,9d),false);
HXDLIN(2243)		cffi_lime_gl_compressed_tex_sub_image_2d = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2244,0xa5aa2623)
HXLINE(2244)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_copy_tex_image_2d",08,15,17,3a),HX_("iiiiiiiiv",f6,d0,45,bf),false);
HXDLIN(2244)		cffi_lime_gl_copy_tex_image_2d = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2245,0xa5aa2623)
HXLINE(2245)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_copy_tex_sub_image_2d",e7,d3,21,4b),HX_("iiiiiiiiv",f6,d0,45,bf),false);
HXDLIN(2245)		cffi_lime_gl_copy_tex_sub_image_2d = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2246,0xa5aa2623)
HXLINE(2246)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_create_buffer",f3,ef,e7,8a),HX_("o",6f,00,00,00),false);
HXDLIN(2246)		cffi_lime_gl_create_buffer = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2247,0xa5aa2623)
HXLINE(2247)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_create_framebuffer",1a,51,d8,73),HX_("o",6f,00,00,00),false);
HXDLIN(2247)		cffi_lime_gl_create_framebuffer = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2248,0xa5aa2623)
HXLINE(2248)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_create_program",31,ac,72,42),HX_("o",6f,00,00,00),false);
HXDLIN(2248)		cffi_lime_gl_create_program = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2249,0xa5aa2623)
HXLINE(2249)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_create_render_buffer",76,7b,e1,18),HX_("o",6f,00,00,00),false);
HXDLIN(2249)		cffi_lime_gl_create_render_buffer = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2250,0xa5aa2623)
HXLINE(2250)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_create_shader",18,f2,73,d7),HX_("io",e6,5b,00,00),false);
HXDLIN(2250)		cffi_lime_gl_create_shader = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2251,0xa5aa2623)
HXLINE(2251)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_create_texture",88,2a,5a,ed),HX_("o",6f,00,00,00),false);
HXDLIN(2251)		cffi_lime_gl_create_texture = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2252,0xa5aa2623)
HXLINE(2252)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_cull_face",5a,6e,d7,a6),HX_("iv",ed,5b,00,00),false);
HXDLIN(2252)		cffi_lime_gl_cull_face = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2253,0xa5aa2623)
HXLINE(2253)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_delete_buffer",a4,aa,2e,01),HX_("ov",27,61,00,00),false);
HXDLIN(2253)		cffi_lime_gl_delete_buffer = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2254,0xa5aa2623)
HXLINE(2254)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_delete_framebuffer",c9,34,1a,a6),HX_("ov",27,61,00,00),false);
HXDLIN(2254)		cffi_lime_gl_delete_framebuffer = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2255,0xa5aa2623)
HXLINE(2255)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_delete_program",60,4c,0f,4a),HX_("ov",27,61,00,00),false);
HXDLIN(2255)		cffi_lime_gl_delete_program = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2256,0xa5aa2623)
HXLINE(2256)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_delete_render_buffer",e5,e8,26,ca),HX_("ov",27,61,00,00),false);
HXDLIN(2256)		cffi_lime_gl_delete_render_buffer = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2257,0xa5aa2623)
HXLINE(2257)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_delete_shader",c9,ac,ba,4d),HX_("ov",27,61,00,00),false);
HXDLIN(2257)		cffi_lime_gl_delete_shader = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2258,0xa5aa2623)
HXLINE(2258)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_delete_texture",b7,ca,f6,f4),HX_("ov",27,61,00,00),false);
HXDLIN(2258)		cffi_lime_gl_delete_texture = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2259,0xa5aa2623)
HXLINE(2259)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_depth_func",70,78,16,ad),HX_("iv",ed,5b,00,00),false);
HXDLIN(2259)		cffi_lime_gl_depth_func = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2260,0xa5aa2623)
HXLINE(2260)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_depth_mask",18,ce,a7,b1),HX_("bv",d4,55,00,00),false);
HXDLIN(2260)		cffi_lime_gl_depth_mask = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2261,0xa5aa2623)
HXLINE(2261)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_depth_range",11,9f,29,a2),HX_("ffv",36,bf,4d,00),false);
HXDLIN(2261)		cffi_lime_gl_depth_range = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2262,0xa5aa2623)
HXLINE(2262)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_detach_shader",a1,84,13,fd),HX_("oov",56,9b,54,00),false);
HXDLIN(2262)		cffi_lime_gl_detach_shader = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2263,0xa5aa2623)
HXLINE(2263)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_disable",b8,5e,23,70),HX_("iv",ed,5b,00,00),false);
HXDLIN(2263)		cffi_lime_gl_disable = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2264,0xa5aa2623)
HXLINE(2264)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_disable_vertex_attrib_array",58,ba,8e,0a),HX_("iv",ed,5b,00,00),false);
HXDLIN(2264)		cffi_lime_gl_disable_vertex_attrib_array = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2265,0xa5aa2623)
HXLINE(2265)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_draw_arrays",a5,43,0c,17),HX_("iiiv",cd,6f,b7,45),false);
HXDLIN(2265)		cffi_lime_gl_draw_arrays = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2266,0xa5aa2623)
HXLINE(2266)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_draw_elements",e2,d1,98,b9),HX_("iiiiv",b6,58,ca,ba),false);
HXDLIN(2266)		cffi_lime_gl_draw_elements = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2267,0xa5aa2623)
HXLINE(2267)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_enable",b3,43,5f,56),HX_("iv",ed,5b,00,00),false);
HXDLIN(2267)		cffi_lime_gl_enable = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2268,0xa5aa2623)
HXLINE(2268)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_enable_vertex_attrib_array",d3,1e,a2,ea),HX_("iv",ed,5b,00,00),false);
HXDLIN(2268)		cffi_lime_gl_enable_vertex_attrib_array = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2269,0xa5aa2623)
HXLINE(2269)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_finish",83,d5,56,e4),HX_("v",76,00,00,00),false);
HXDLIN(2269)		cffi_lime_gl_finish = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2270,0xa5aa2623)
HXLINE(2270)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_flush",94,83,40,f5),HX_("v",76,00,00,00),false);
HXDLIN(2270)		cffi_lime_gl_flush = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2271,0xa5aa2623)
HXLINE(2271)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_framebuffer_renderbuffer",d8,1b,4b,9a),HX_("iiiov",f0,5d,ca,ba),false);
HXDLIN(2271)		cffi_lime_gl_framebuffer_renderbuffer = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2272,0xa5aa2623)
HXLINE(2272)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_framebuffer_texture2D",2b,bd,7d,0a),HX_("iiioiv",33,c9,47,b6),false);
HXDLIN(2272)		cffi_lime_gl_framebuffer_texture2D = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2273,0xa5aa2623)
HXLINE(2273)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_front_face",63,a0,73,7d),HX_("iv",ed,5b,00,00),false);
HXDLIN(2273)		cffi_lime_gl_front_face = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2274,0xa5aa2623)
HXLINE(2274)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_generate_mipmap",62,a5,38,e6),HX_("iv",ed,5b,00,00),false);
HXDLIN(2274)		cffi_lime_gl_generate_mipmap = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2275,0xa5aa2623)
HXLINE(2275)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_get_active_attrib",0a,40,b7,d1),HX_("oio",15,96,54,00),false);
HXDLIN(2275)		cffi_lime_gl_get_active_attrib = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2276,0xa5aa2623)
HXLINE(2276)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_get_active_uniform",74,90,d7,2a),HX_("oio",15,96,54,00),false);
HXDLIN(2276)		cffi_lime_gl_get_active_uniform = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2277,0xa5aa2623)
HXLINE(2277)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_get_attrib_location",f1,00,cb,a5),HX_("osi",c5,9e,54,00),false);
HXDLIN(2277)		cffi_lime_gl_get_attrib_location = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2278,0xa5aa2623)
HXLINE(2278)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_get_buffer_parameter",a3,5c,c0,74),HX_("iii",89,08,50,00),false);
HXDLIN(2278)		cffi_lime_gl_get_buffer_parameter = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2279,0xa5aa2623)
HXLINE(2279)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_get_context_attributes",e0,c6,c6,3e),HX_("o",6f,00,00,00),false);
HXDLIN(2279)		cffi_lime_gl_get_context_attributes = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2280,0xa5aa2623)
HXLINE(2280)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_get_error",ef,f0,e0,f5),HX_("i",69,00,00,00),false);
HXDLIN(2280)		cffi_lime_gl_get_error = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2281,0xa5aa2623)
HXLINE(2281)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_get_extension",26,d8,5e,d7),HX_("so",9c,64,00,00),false);
HXDLIN(2281)		cffi_lime_gl_get_extension = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2282,0xa5aa2623)
HXLINE(2282)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_get_framebuffer_attachment_parameter",18,53,fb,61),HX_("iiii",c0,6f,b7,45),false);
HXDLIN(2282)		cffi_lime_gl_get_framebuffer_attachment_parameter = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2283,0xa5aa2623)
HXLINE(2283)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_get_parameter",50,7a,fe,3a),HX_("io",e6,5b,00,00),false);
HXDLIN(2283)		cffi_lime_gl_get_parameter = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2284,0xa5aa2623)
HXLINE(2284)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_get_program_info_log",87,8b,1c,48),HX_("os",24,61,00,00),false);
HXDLIN(2284)		cffi_lime_gl_get_program_info_log = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2285,0xa5aa2623)
HXLINE(2285)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_get_program_parameter",95,8c,e9,12),HX_("oii",0f,96,54,00),false);
HXDLIN(2285)		cffi_lime_gl_get_program_parameter = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2286,0xa5aa2623)
HXLINE(2286)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_get_render_buffer_parameter",9a,8b,13,f8),HX_("iii",89,08,50,00),false);
HXDLIN(2286)		cffi_lime_gl_get_render_buffer_parameter = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2287,0xa5aa2623)
HXLINE(2287)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_get_shader_info_log",74,08,6b,9a),HX_("os",24,61,00,00),false);
HXDLIN(2287)		cffi_lime_gl_get_shader_info_log = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2288,0xa5aa2623)
HXLINE(2288)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_get_shader_parameter",08,5f,48,c5),HX_("oii",0f,96,54,00),false);
HXDLIN(2288)		cffi_lime_gl_get_shader_parameter = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2289,0xa5aa2623)
HXLINE(2289)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_get_shader_precision_format",d9,5f,b1,89),HX_("iio",8f,08,50,00),false);
HXDLIN(2289)		cffi_lime_gl_get_shader_precision_format = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2290,0xa5aa2623)
HXLINE(2290)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_get_shader_source",1c,86,a3,e7),HX_("oo",20,61,00,00),false);
HXDLIN(2290)		cffi_lime_gl_get_shader_source = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2291,0xa5aa2623)
HXLINE(2291)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_get_supported_extensions",7e,b4,30,92),HX_("ov",27,61,00,00),false);
HXDLIN(2291)		cffi_lime_gl_get_supported_extensions = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2292,0xa5aa2623)
HXLINE(2292)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_get_tex_parameter",38,3a,ff,30),HX_("iii",89,08,50,00),false);
HXDLIN(2292)		cffi_lime_gl_get_tex_parameter = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2293,0xa5aa2623)
HXLINE(2293)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_get_uniform",1b,3e,0c,b0),HX_("oio",15,96,54,00),false);
HXDLIN(2293)		cffi_lime_gl_get_uniform = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2294,0xa5aa2623)
HXLINE(2294)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_get_uniform_location",19,0c,33,6c),HX_("osi",c5,9e,54,00),false);
HXDLIN(2294)		cffi_lime_gl_get_uniform_location = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2295,0xa5aa2623)
HXLINE(2295)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_get_vertex_attrib",2c,36,2d,8c),HX_("iii",89,08,50,00),false);
HXDLIN(2295)		cffi_lime_gl_get_vertex_attrib = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2296,0xa5aa2623)
HXLINE(2296)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_get_vertex_attrib_offset",86,d0,e7,4a),HX_("iii",89,08,50,00),false);
HXDLIN(2296)		cffi_lime_gl_get_vertex_attrib_offset = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2297,0xa5aa2623)
HXLINE(2297)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_hint",b7,26,75,cc),HX_("iiv",96,08,50,00),false);
HXDLIN(2297)		cffi_lime_gl_hint = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2298,0xa5aa2623)
HXLINE(2298)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_is_buffer",c5,ec,c6,b4),HX_("ob",13,61,00,00),false);
HXDLIN(2298)		cffi_lime_gl_is_buffer = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2299,0xa5aa2623)
HXLINE(2299)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_is_enabled",1c,a1,e8,45),HX_("ib",d9,5b,00,00),false);
HXDLIN(2299)		cffi_lime_gl_is_enabled = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2300,0xa5aa2623)
HXLINE(2300)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_is_framebuffer",08,9b,19,ab),HX_("ob",13,61,00,00),false);
HXDLIN(2300)		cffi_lime_gl_is_framebuffer = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2301,0xa5aa2623)
HXLINE(2301)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_is_program",1f,e7,b0,bb),HX_("ob",13,61,00,00),false);
HXDLIN(2301)		cffi_lime_gl_is_program = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2302,0xa5aa2623)
HXLINE(2302)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_is_renderbuffer",5b,1e,da,91),HX_("ob",13,61,00,00),false);
HXDLIN(2302)		cffi_lime_gl_is_renderbuffer = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2303,0xa5aa2623)
HXLINE(2303)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_is_shader",ea,ee,52,01),HX_("ob",13,61,00,00),false);
HXDLIN(2303)		cffi_lime_gl_is_shader = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2304,0xa5aa2623)
HXLINE(2304)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_is_texture",76,65,98,66),HX_("ob",13,61,00,00),false);
HXDLIN(2304)		cffi_lime_gl_is_texture = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2305,0xa5aa2623)
HXLINE(2305)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_line_width",6b,71,5f,53),HX_("fv",50,59,00,00),false);
HXDLIN(2305)		cffi_lime_gl_line_width = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2306,0xa5aa2623)
HXLINE(2306)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_link_program",2f,df,cf,33),HX_("ov",27,61,00,00),false);
HXDLIN(2306)		cffi_lime_gl_link_program = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2307,0xa5aa2623)
HXLINE(2307)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_pixel_storei",71,b2,56,3d),HX_("iiv",96,08,50,00),false);
HXDLIN(2307)		cffi_lime_gl_pixel_storei = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2308,0xa5aa2623)
HXLINE(2308)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_polygon_offset",28,8f,6c,e3),HX_("ffv",36,bf,4d,00),false);
HXDLIN(2308)		cffi_lime_gl_polygon_offset = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2309,0xa5aa2623)
HXLINE(2309)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_read_pixels",06,09,69,f5),HX_("iiiiiioiv",7c,5e,4a,bf),false);
HXDLIN(2309)		cffi_lime_gl_read_pixels = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2310,0xa5aa2623)
HXLINE(2310)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_renderbuffer_storage",c2,94,f1,7b),HX_("iiiiv",b6,58,ca,ba),false);
HXDLIN(2310)		cffi_lime_gl_renderbuffer_storage = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2311,0xa5aa2623)
HXLINE(2311)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_sample_coverage",ad,98,c5,86),HX_("fbv",ba,bb,4d,00),false);
HXDLIN(2311)		cffi_lime_gl_sample_coverage = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2312,0xa5aa2623)
HXLINE(2312)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_scissor",ec,1c,b2,c3),HX_("iiiiv",b6,58,ca,ba),false);
HXDLIN(2312)		cffi_lime_gl_scissor = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2313,0xa5aa2623)
HXLINE(2313)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_shader_source",c5,d2,e2,7f),HX_("osv",d2,9e,54,00),false);
HXDLIN(2313)		cffi_lime_gl_shader_source = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2314,0xa5aa2623)
HXLINE(2314)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_stencil_func",d7,b0,4f,64),HX_("iiiv",cd,6f,b7,45),false);
HXDLIN(2314)		cffi_lime_gl_stencil_func = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2315,0xa5aa2623)
HXLINE(2315)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_stencil_func_separate",0b,13,77,19),HX_("iiiiv",b6,58,ca,ba),false);
HXDLIN(2315)		cffi_lime_gl_stencil_func_separate = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2316,0xa5aa2623)
HXLINE(2316)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_stencil_mask",7f,06,e1,68),HX_("iv",ed,5b,00,00),false);
HXDLIN(2316)		cffi_lime_gl_stencil_mask = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2317,0xa5aa2623)
HXLINE(2317)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_stencil_mask_separate",63,c8,71,65),HX_("iiv",96,08,50,00),false);
HXDLIN(2317)		cffi_lime_gl_stencil_mask_separate = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2318,0xa5aa2623)
HXLINE(2318)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_stencil_op",f4,8b,0c,a5),HX_("iiiv",cd,6f,b7,45),false);
HXDLIN(2318)		cffi_lime_gl_stencil_op = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2319,0xa5aa2623)
HXLINE(2319)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_stencil_op_separate",4e,6c,36,5e),HX_("iiiiv",b6,58,ca,ba),false);
HXDLIN(2319)		cffi_lime_gl_stencil_op_separate = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2320,0xa5aa2623)
HXLINE(2320)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_tex_image_2d",5e,ab,7a,34),HX_("iiiiiiiioiv",9c,86,0f,79),false);
HXDLIN(2320)		cffi_lime_gl_tex_image_2d = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2321,0xa5aa2623)
HXLINE(2321)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_tex_parameterf",65,7e,77,4d),HX_("iifv",30,6d,b7,45),false);
HXDLIN(2321)		cffi_lime_gl_tex_parameterf = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2322,0xa5aa2623)
HXLINE(2322)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_tex_parameteri",68,7e,77,4d),HX_("iiiv",cd,6f,b7,45),false);
HXDLIN(2322)		cffi_lime_gl_tex_parameteri = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2323,0xa5aa2623)
HXLINE(2323)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_tex_sub_image_2d",3d,4d,7e,52),HX_("iiiiiiiioiv",9c,86,0f,79),false);
HXDLIN(2323)		cffi_lime_gl_tex_sub_image_2d = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2324,0xa5aa2623)
HXLINE(2324)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_uniform1f",19,ea,eb,46),HX_("ifv",f9,05,50,00),false);
HXDLIN(2324)		cffi_lime_gl_uniform1f = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2325,0xa5aa2623)
HXLINE(2325)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_uniform1fv",3d,ec,80,c7),HX_("iov",d0,0d,50,00),false);
HXDLIN(2325)		cffi_lime_gl_uniform1fv = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2326,0xa5aa2623)
HXLINE(2326)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_uniform1i",1c,ea,eb,46),HX_("iiv",96,08,50,00),false);
HXDLIN(2326)		cffi_lime_gl_uniform1i = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2327,0xa5aa2623)
HXLINE(2327)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_uniform1iv",da,ee,80,c7),HX_("iov",d0,0d,50,00),false);
HXDLIN(2327)		cffi_lime_gl_uniform1iv = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2328,0xa5aa2623)
HXLINE(2328)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_uniform2f",f8,ea,eb,46),HX_("iffv",6d,26,b5,45),false);
HXDLIN(2328)		cffi_lime_gl_uniform2f = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2329,0xa5aa2623)
HXLINE(2329)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_uniform2fv",7e,ae,81,c7),HX_("iov",d0,0d,50,00),false);
HXDLIN(2329)		cffi_lime_gl_uniform2fv = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2330,0xa5aa2623)
HXLINE(2330)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_uniform2i",fb,ea,eb,46),HX_("iiiv",cd,6f,b7,45),false);
HXDLIN(2330)		cffi_lime_gl_uniform2i = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2331,0xa5aa2623)
HXLINE(2331)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_uniform2iv",1b,b1,81,c7),HX_("iov",d0,0d,50,00),false);
HXDLIN(2331)		cffi_lime_gl_uniform2iv = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2332,0xa5aa2623)
HXLINE(2332)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_uniform3f",d7,eb,eb,46),HX_("ifffv",79,6b,cc,b8),false);
HXDLIN(2332)		cffi_lime_gl_uniform3f = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2333,0xa5aa2623)
HXLINE(2333)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_uniform3fv",bf,70,82,c7),HX_("iov",d0,0d,50,00),false);
HXDLIN(2333)		cffi_lime_gl_uniform3fv = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2334,0xa5aa2623)
HXLINE(2334)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_uniform3i",da,eb,eb,46),HX_("iiiiv",b6,58,ca,ba),false);
HXDLIN(2334)		cffi_lime_gl_uniform3i = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2335,0xa5aa2623)
HXLINE(2335)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_uniform3iv",5c,73,82,c7),HX_("iov",d0,0d,50,00),false);
HXDLIN(2335)		cffi_lime_gl_uniform3iv = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2336,0xa5aa2623)
HXLINE(2336)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_uniform4f",b6,ec,eb,46),HX_("iffffv",ed,90,11,fa),false);
HXDLIN(2336)		cffi_lime_gl_uniform4f = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2337,0xa5aa2623)
HXLINE(2337)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_uniform4fv",00,33,83,c7),HX_("iov",d0,0d,50,00),false);
HXDLIN(2337)		cffi_lime_gl_uniform4fv = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2338,0xa5aa2623)
HXLINE(2338)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_uniform4i",b9,ec,eb,46),HX_("iiiiiv",ad,3b,43,b6),false);
HXDLIN(2338)		cffi_lime_gl_uniform4i = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2339,0xa5aa2623)
HXLINE(2339)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_uniform4iv",9d,35,83,c7),HX_("iov",d0,0d,50,00),false);
HXDLIN(2339)		cffi_lime_gl_uniform4iv = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2340,0xa5aa2623)
HXLINE(2340)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_uniform_matrix",5c,9a,cc,b2),HX_("iboiv",e3,67,2e,b6),false);
HXDLIN(2340)		cffi_lime_gl_uniform_matrix = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2341,0xa5aa2623)
HXLINE(2341)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_use_program",1c,8c,b8,22),HX_("ov",27,61,00,00),false);
HXDLIN(2341)		cffi_lime_gl_use_program = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2342,0xa5aa2623)
HXLINE(2342)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_validate_program",cb,eb,10,5b),HX_("ov",27,61,00,00),false);
HXDLIN(2342)		cffi_lime_gl_validate_program = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2343,0xa5aa2623)
HXLINE(2343)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_version",e8,db,bc,3b),HX_("s",73,00,00,00),false);
HXDLIN(2343)		cffi_lime_gl_version = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2344,0xa5aa2623)
HXLINE(2344)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_vertex_attrib1f",2a,cd,b2,7a),HX_("ifv",f9,05,50,00),false);
HXDLIN(2344)		cffi_lime_gl_vertex_attrib1f = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2345,0xa5aa2623)
HXLINE(2345)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_vertex_attrib1fv",0c,b8,c0,e1),HX_("iov",d0,0d,50,00),false);
HXDLIN(2345)		cffi_lime_gl_vertex_attrib1fv = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2346,0xa5aa2623)
HXLINE(2346)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_vertex_attrib2f",09,ce,b2,7a),HX_("iffv",6d,26,b5,45),false);
HXDLIN(2346)		cffi_lime_gl_vertex_attrib2f = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2347,0xa5aa2623)
HXLINE(2347)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_vertex_attrib2fv",4d,7a,c1,e1),HX_("iov",d0,0d,50,00),false);
HXDLIN(2347)		cffi_lime_gl_vertex_attrib2fv = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2348,0xa5aa2623)
HXLINE(2348)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_vertex_attrib3f",e8,ce,b2,7a),HX_("ifffv",79,6b,cc,b8),false);
HXDLIN(2348)		cffi_lime_gl_vertex_attrib3f = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2349,0xa5aa2623)
HXLINE(2349)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_vertex_attrib3fv",8e,3c,c2,e1),HX_("iov",d0,0d,50,00),false);
HXDLIN(2349)		cffi_lime_gl_vertex_attrib3fv = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2350,0xa5aa2623)
HXLINE(2350)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_vertex_attrib4f",c7,cf,b2,7a),HX_("iffffv",ed,90,11,fa),false);
HXDLIN(2350)		cffi_lime_gl_vertex_attrib4f = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2351,0xa5aa2623)
HXLINE(2351)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_vertex_attrib4fv",cf,fe,c2,e1),HX_("iov",d0,0d,50,00),false);
HXDLIN(2351)		cffi_lime_gl_vertex_attrib4fv = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2352,0xa5aa2623)
HXLINE(2352)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_vertex_attrib_pointer",13,fa,74,15),HX_("iiibiiv",7d,72,f0,bf),false);
HXDLIN(2352)		cffi_lime_gl_vertex_attrib_pointer = inValue;
            	}
{
            	HX_STACK_FRAME("lime.graphics.opengl.GL","boot",0x82b18806,"lime.graphics.opengl.GL.boot","lime/graphics/opengl/GL.hx",2353,0xa5aa2623)
HXLINE(2353)		 ::Dynamic inValue = ::cpp::Prime_obj::_loadPrime(HX_("lime",15,17,b3,47),HX_("lime_gl_viewport",96,8d,70,cf),HX_("iiiiv",b6,58,ca,ba),false);
HXDLIN(2353)		cffi_lime_gl_viewport = inValue;
            	}
}

} // end namespace lime
} // end namespace graphics
} // end namespace opengl
