// Generated by Haxe 3.3.0
#ifndef INCLUDED_ru_stablex_ui_widgets_Widget
#define INCLUDED_ru_stablex_ui_widgets_Widget

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_ru_stablex_TweenSprite
#include <ru/stablex/TweenSprite.h>
#endif
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,Event)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(ru,stablex,TweenSprite)
HX_DECLARE_CLASS4(ru,stablex,ui,events,WidgetEvent)
HX_DECLARE_CLASS4(ru,stablex,ui,layouts,Layout)
HX_DECLARE_CLASS4(ru,stablex,ui,skins,Skin)
HX_DECLARE_CLASS4(ru,stablex,ui,widgets,Box)
HX_DECLARE_CLASS4(ru,stablex,ui,widgets,Floating)
HX_DECLARE_CLASS4(ru,stablex,ui,widgets,Tip)
HX_DECLARE_CLASS4(ru,stablex,ui,widgets,Widget)

namespace ru{
namespace stablex{
namespace ui{
namespace widgets{


class HXCPP_CLASS_ATTRIBUTES Widget_obj : public  ::ru::stablex::TweenSprite_obj
{
	public:
		typedef  ::ru::stablex::TweenSprite_obj super;
		typedef Widget_obj OBJ_;
		Widget_obj();

	public:
		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="ru.stablex.ui.widgets.Widget")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"ru.stablex.ui.widgets.Widget"); }
		static hx::ObjectPtr< Widget_obj > __new();
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Widget_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		::String __ToString() const { return HX_HCSTRING("Widget","\xe4","\x23","\x87","\x80"); }

		static void __boot();
		static Int _X_USE_LEFT;
		static Int _X_USE_LEFT_PERCENT;
		static Int _X_USE_RIGHT;
		static Int _X_USE_RIGHT_PERCENT;
		static Int _Y_USE_TOP;
		static Int _Y_USE_TOP_PERCENT;
		static Int _Y_USE_BOTTOM;
		static Int _Y_USE_BOTTOM_PERCENT;
		::String defaults;
		Bool initialized;
		Bool created;
		Bool destroyed;
		Float contentWidth;
		Float _width;
		Float _widthPercent;
		Bool _widthUsePercent;
		Bool minWidthByContent;
		Bool minHeightByContent;
		Float contentHeight;
		Float _height;
		Float _heightPercent;
		Bool _heightUsePercent;
		Bool _silentResize;
		Bool _resizing;
		::String id;
		Float _left;
		Float _leftPercent;
		Float _right;
		Float _rightPercent;
		Int _xUse;
		Int _yUse;
		Float _top;
		Float _topPercent;
		Float _bottom;
		Float _bottomPercent;
		 ::ru::stablex::ui::skins::Skin skin;
		 ::ru::stablex::ui::skins::Skin _appliedSkin;
		Bool _skinQueued;
		::String skinName;
		Bool overflow;
		 ::ru::stablex::ui::widgets::Tip tip;
		 ::ru::stablex::ui::layouts::Layout layout;
		void _onInitialize();
		::Dynamic _onInitialize_dyn();

		void onInitialize();
		::Dynamic onInitialize_dyn();

		void _onCreate();
		::Dynamic _onCreate_dyn();

		void onCreate();
		::Dynamic onCreate_dyn();

		virtual void free(hx::Null< Bool >  recursive);

		void applySkin();
		::Dynamic applySkin_dyn();

		void applyLayout();
		::Dynamic applyLayout_dyn();

		virtual void refresh();
		::Dynamic refresh_dyn();

		void _newParent( ::ru::stablex::ui::widgets::Widget newParent);
		::Dynamic _newParent_dyn();

		virtual void _resizeWithPercent( ::ru::stablex::ui::widgets::Widget parent);
		::Dynamic _resizeWithPercent_dyn();

		void onNewParent( ::ru::stablex::ui::widgets::Widget newParent);
		::Dynamic onNewParent_dyn();

		void _onParentResize( ::ru::stablex::ui::events::WidgetEvent e);
		::Dynamic _onParentResize_dyn();

		void resize(Float width,Float height,hx::Null< Bool >  keepPercentage);
		::Dynamic resize_dyn();

		void _onResize();
		::Dynamic _onResize_dyn();

		void onResize();
		::Dynamic onResize_dyn();

		virtual  ::openfl::display::DisplayObject addChild( ::openfl::display::DisplayObject child);

		virtual  ::openfl::display::DisplayObject addChildAt( ::openfl::display::DisplayObject child,Int idx);

		virtual  ::openfl::display::DisplayObject removeChild( ::openfl::display::DisplayObject child);

		virtual  ::openfl::display::DisplayObject removeChildAt(Int idx);

		 ::Dynamic getChildAs(::String name,hx::Class cls);
		::Dynamic getChildAs_dyn();

		 ::ru::stablex::ui::widgets::Widget getChild(::String name);
		::Dynamic getChild_dyn();

		 ::ru::stablex::ui::widgets::Widget _findChildWidget(::String name);
		::Dynamic _findChildWidget_dyn();

		 ::ru::stablex::ui::widgets::Widget getParent(::String name);
		::Dynamic getParent_dyn();

		 ::Dynamic getParentAs(::String name,hx::Class cls);
		::Dynamic getParentAs_dyn();

		 ::Dynamic getNearestParent(hx::Class cls);
		::Dynamic getNearestParent_dyn();

		 ::Dynamic as(hx::Class cls);
		::Dynamic as_dyn();

		Bool set_overflow(Bool o);
		::Dynamic set_overflow_dyn();

		::String set_skinName(::String sn);
		::Dynamic set_skinName_dyn();

		 ::ru::stablex::ui::widgets::Widget get_wparent();
		::Dynamic get_wparent_dyn();

		Float set_left(Float l);
		::Dynamic set_left_dyn();

		Float get_left();
		::Dynamic get_left_dyn();

		Float set_right(Float r);
		::Dynamic set_right_dyn();

		Float get_right();
		::Dynamic get_right_dyn();

		Float set_leftPt(Float lp);
		::Dynamic set_leftPt_dyn();

		Float get_leftPt();
		::Dynamic get_leftPt_dyn();

		Float set_rightPt(Float rp);
		::Dynamic set_rightPt_dyn();

		Float get_rightPt();
		::Dynamic get_rightPt_dyn();

		Float set_top(Float t);
		::Dynamic set_top_dyn();

		Float get_top();
		::Dynamic get_top_dyn();

		Float set_bottom(Float b);
		::Dynamic set_bottom_dyn();

		Float get_bottom();
		::Dynamic get_bottom_dyn();

		Float set_topPt(Float tp);
		::Dynamic set_topPt_dyn();

		Float get_topPt();
		::Dynamic get_topPt_dyn();

		Float set_bottomPt(Float bp);
		::Dynamic set_bottomPt_dyn();

		Float get_bottomPt();
		::Dynamic get_bottomPt_dyn();

		virtual Float set_w(Float w);
		::Dynamic set_w_dyn();

		Float get_w();
		::Dynamic get_w_dyn();

		virtual Float set_h(Float h);
		::Dynamic set_h_dyn();

		Float get_h();
		::Dynamic get_h_dyn();

		virtual Float get_contentHeight();
		::Dynamic get_contentHeight_dyn();

		virtual Float get_contentWidth();
		::Dynamic get_contentWidth_dyn();

		virtual Float set_widthPt(Float wp);
		::Dynamic set_widthPt_dyn();

		Float get_widthPt();
		::Dynamic get_widthPt_dyn();

		virtual Float set_heightPt(Float hp);
		::Dynamic set_heightPt_dyn();

		Float get_heightPt();
		::Dynamic get_heightPt_dyn();

		::String set_id(::String id);
		::Dynamic set_id_dyn();

		 ::ru::stablex::ui::widgets::Tip set_tip( ::ru::stablex::ui::widgets::Tip tip);
		::Dynamic set_tip_dyn();

};

} // end namespace ru
} // end namespace stablex
} // end namespace ui
} // end namespace widgets

#endif /* INCLUDED_ru_stablex_ui_widgets_Widget */ 
